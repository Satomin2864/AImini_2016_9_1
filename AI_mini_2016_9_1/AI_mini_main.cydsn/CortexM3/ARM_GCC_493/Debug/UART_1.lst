ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"UART_1.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.UART_1_Init,"ax",%progbits
  19              		.align	2
  20              		.global	UART_1_Init
  21              		.thumb
  22              		.thumb_func
  23              		.type	UART_1_Init, %function
  24              	UART_1_Init:
  25              	.LFB1:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\UART_1.c"
   1:.\Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/UART_1.c **** * File Name: UART_1.c
   3:.\Generated_Source\PSoC5/UART_1.c **** * Version 2.50
   4:.\Generated_Source\PSoC5/UART_1.c **** *
   5:.\Generated_Source\PSoC5/UART_1.c **** * Description:
   6:.\Generated_Source\PSoC5/UART_1.c **** *  This file provides all API functionality of the UART component
   7:.\Generated_Source\PSoC5/UART_1.c **** *
   8:.\Generated_Source\PSoC5/UART_1.c **** * Note:
   9:.\Generated_Source\PSoC5/UART_1.c **** *
  10:.\Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/UART_1.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/UART_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC5/UART_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC5/UART_1.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/UART_1.c **** 
  17:.\Generated_Source\PSoC5/UART_1.c **** #include "UART_1.h"
  18:.\Generated_Source\PSoC5/UART_1.c **** #if (UART_1_INTERNAL_CLOCK_USED)
  19:.\Generated_Source\PSoC5/UART_1.c ****     #include "UART_1_IntClock.h"
  20:.\Generated_Source\PSoC5/UART_1.c **** #endif /* End UART_1_INTERNAL_CLOCK_USED */
  21:.\Generated_Source\PSoC5/UART_1.c **** 
  22:.\Generated_Source\PSoC5/UART_1.c **** 
  23:.\Generated_Source\PSoC5/UART_1.c **** /***************************************
  24:.\Generated_Source\PSoC5/UART_1.c **** * Global data allocation
  25:.\Generated_Source\PSoC5/UART_1.c **** ***************************************/
  26:.\Generated_Source\PSoC5/UART_1.c **** 
  27:.\Generated_Source\PSoC5/UART_1.c **** uint8 UART_1_initVar = 0u;
  28:.\Generated_Source\PSoC5/UART_1.c **** 
  29:.\Generated_Source\PSoC5/UART_1.c **** #if (UART_1_TX_INTERRUPT_ENABLED && UART_1_TX_ENABLED)
  30:.\Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_txBuffer[UART_1_TX_BUFFER_SIZE];
  31:.\Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_txBufferRead = 0u;
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 2


  32:.\Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_txBufferWrite = 0u;
  33:.\Generated_Source\PSoC5/UART_1.c **** #endif /* (UART_1_TX_INTERRUPT_ENABLED && UART_1_TX_ENABLED) */
  34:.\Generated_Source\PSoC5/UART_1.c **** 
  35:.\Generated_Source\PSoC5/UART_1.c **** #if (UART_1_RX_INTERRUPT_ENABLED && (UART_1_RX_ENABLED || UART_1_HD_ENABLED))
  36:.\Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_errorStatus = 0u;
  37:.\Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBuffer[UART_1_RX_BUFFER_SIZE];
  38:.\Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferRead  = 0u;
  39:.\Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferWrite = 0u;
  40:.\Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferLoopDetect = 0u;
  41:.\Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferOverflow   = 0u;
  42:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RXHW_ADDRESS_ENABLED)
  43:.\Generated_Source\PSoC5/UART_1.c ****         volatile uint8 UART_1_rxAddressMode = UART_1_RX_ADDRESS_MODE;
  44:.\Generated_Source\PSoC5/UART_1.c ****         volatile uint8 UART_1_rxAddressDetected = 0u;
  45:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RXHW_ADDRESS_ENABLED) */
  46:.\Generated_Source\PSoC5/UART_1.c **** #endif /* (UART_1_RX_INTERRUPT_ENABLED && (UART_1_RX_ENABLED || UART_1_HD_ENABLED)) */
  47:.\Generated_Source\PSoC5/UART_1.c **** 
  48:.\Generated_Source\PSoC5/UART_1.c **** 
  49:.\Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
  50:.\Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Start
  51:.\Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
  52:.\Generated_Source\PSoC5/UART_1.c **** *
  53:.\Generated_Source\PSoC5/UART_1.c **** * Summary:
  54:.\Generated_Source\PSoC5/UART_1.c **** *  This is the preferred method to begin component operation.
  55:.\Generated_Source\PSoC5/UART_1.c **** *  UART_1_Start() sets the initVar variable, calls the
  56:.\Generated_Source\PSoC5/UART_1.c **** *  UART_1_Init() function, and then calls the
  57:.\Generated_Source\PSoC5/UART_1.c **** *  UART_1_Enable() function.
  58:.\Generated_Source\PSoC5/UART_1.c **** *
  59:.\Generated_Source\PSoC5/UART_1.c **** * Parameters:
  60:.\Generated_Source\PSoC5/UART_1.c **** *  None.
  61:.\Generated_Source\PSoC5/UART_1.c **** *
  62:.\Generated_Source\PSoC5/UART_1.c **** * Return:
  63:.\Generated_Source\PSoC5/UART_1.c **** *  None.
  64:.\Generated_Source\PSoC5/UART_1.c **** *
  65:.\Generated_Source\PSoC5/UART_1.c **** * Global variables:
  66:.\Generated_Source\PSoC5/UART_1.c **** *  The UART_1_intiVar variable is used to indicate initial
  67:.\Generated_Source\PSoC5/UART_1.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:.\Generated_Source\PSoC5/UART_1.c **** *  and set to one (1u) the first time UART_1_Start() is called. This
  69:.\Generated_Source\PSoC5/UART_1.c **** *  allows for component initialization without re-initialization in all
  70:.\Generated_Source\PSoC5/UART_1.c **** *  subsequent calls to the UART_1_Start() routine.
  71:.\Generated_Source\PSoC5/UART_1.c **** *
  72:.\Generated_Source\PSoC5/UART_1.c **** * Reentrant:
  73:.\Generated_Source\PSoC5/UART_1.c **** *  No.
  74:.\Generated_Source\PSoC5/UART_1.c **** *
  75:.\Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
  76:.\Generated_Source\PSoC5/UART_1.c **** void UART_1_Start(void) 
  77:.\Generated_Source\PSoC5/UART_1.c **** {
  78:.\Generated_Source\PSoC5/UART_1.c ****     /* If not initialized then initialize all required hardware and software */
  79:.\Generated_Source\PSoC5/UART_1.c ****     if(UART_1_initVar == 0u)
  80:.\Generated_Source\PSoC5/UART_1.c ****     {
  81:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_Init();
  82:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_initVar = 1u;
  83:.\Generated_Source\PSoC5/UART_1.c ****     }
  84:.\Generated_Source\PSoC5/UART_1.c **** 
  85:.\Generated_Source\PSoC5/UART_1.c ****     UART_1_Enable();
  86:.\Generated_Source\PSoC5/UART_1.c **** }
  87:.\Generated_Source\PSoC5/UART_1.c **** 
  88:.\Generated_Source\PSoC5/UART_1.c **** 
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 3


  89:.\Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
  90:.\Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Init
  91:.\Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
  92:.\Generated_Source\PSoC5/UART_1.c **** *
  93:.\Generated_Source\PSoC5/UART_1.c **** * Summary:
  94:.\Generated_Source\PSoC5/UART_1.c **** *  Initializes or restores the component according to the customizer Configure
  95:.\Generated_Source\PSoC5/UART_1.c **** *  dialog settings. It is not necessary to call UART_1_Init() because
  96:.\Generated_Source\PSoC5/UART_1.c **** *  the UART_1_Start() API calls this function and is the preferred
  97:.\Generated_Source\PSoC5/UART_1.c **** *  method to begin component operation.
  98:.\Generated_Source\PSoC5/UART_1.c **** *
  99:.\Generated_Source\PSoC5/UART_1.c **** * Parameters:
 100:.\Generated_Source\PSoC5/UART_1.c **** *  None.
 101:.\Generated_Source\PSoC5/UART_1.c **** *
 102:.\Generated_Source\PSoC5/UART_1.c **** * Return:
 103:.\Generated_Source\PSoC5/UART_1.c **** *  None.
 104:.\Generated_Source\PSoC5/UART_1.c **** *
 105:.\Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 106:.\Generated_Source\PSoC5/UART_1.c **** void UART_1_Init(void) 
 107:.\Generated_Source\PSoC5/UART_1.c **** {
  27              		.loc 1 107 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 08B5     		push	{r3, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
 108:.\Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 109:.\Generated_Source\PSoC5/UART_1.c **** 
 110:.\Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 111:.\Generated_Source\PSoC5/UART_1.c ****             /* Set RX interrupt vector and priority */
 112:.\Generated_Source\PSoC5/UART_1.c ****             (void) CyIntSetVector(UART_1_RX_VECT_NUM, &UART_1_RXISR);
 113:.\Generated_Source\PSoC5/UART_1.c ****             CyIntSetPriority(UART_1_RX_VECT_NUM, UART_1_RX_PRIOR_NUM);
 114:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_errorStatus = 0u;
 115:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 116:.\Generated_Source\PSoC5/UART_1.c **** 
 117:.\Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RXHW_ADDRESS_ENABLED)
 118:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_SetRxAddressMode(UART_1_RX_ADDRESS_MODE);
 119:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_SetRxAddress1(UART_1_RX_HW_ADDRESS1);
 120:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_SetRxAddress2(UART_1_RX_HW_ADDRESS2);
 121:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_RXHW_ADDRESS_ENABLED */
 122:.\Generated_Source\PSoC5/UART_1.c **** 
 123:.\Generated_Source\PSoC5/UART_1.c ****         /* Init Count7 period */
 124:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXBITCTR_PERIOD_REG = UART_1_RXBITCTR_INIT;
 125:.\Generated_Source\PSoC5/UART_1.c ****         /* Configure the Initial RX interrupt mask */
 126:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_MASK_REG  = UART_1_INIT_RX_INTERRUPTS_MASK;
 127:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* End UART_1_RX_ENABLED || UART_1_HD_ENABLED*/
 128:.\Generated_Source\PSoC5/UART_1.c **** 
 129:.\Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_TX_ENABLED)
 130:.\Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 131:.\Generated_Source\PSoC5/UART_1.c ****             /* Set TX interrupt vector and priority */
 132:.\Generated_Source\PSoC5/UART_1.c ****             (void) CyIntSetVector(UART_1_TX_VECT_NUM, &UART_1_TXISR);
  35              		.loc 1 132 0
  36 0002 0120     		movs	r0, #1
  37 0004 0849     		ldr	r1, .L3
  38 0006 FFF7FEFF 		bl	CyIntSetVector
  39              	.LVL0:
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 4


 133:.\Generated_Source\PSoC5/UART_1.c ****             CyIntSetPriority(UART_1_TX_VECT_NUM, UART_1_TX_PRIOR_NUM);
  40              		.loc 1 133 0
  41 000a 0120     		movs	r0, #1
  42 000c 0721     		movs	r1, #7
  43 000e FFF7FEFF 		bl	CyIntSetPriority
  44              	.LVL1:
 134:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 135:.\Generated_Source\PSoC5/UART_1.c **** 
 136:.\Generated_Source\PSoC5/UART_1.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:.\Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TXCLKGEN_DP)
 138:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCLKGEN_CTR_REG = UART_1_BIT_CENTER;
  45              		.loc 1 138 0
  46 0012 0622     		movs	r2, #6
  47 0014 054B     		ldr	r3, .L3+4
  48 0016 1A70     		strb	r2, [r3]
 139:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCLKTX_COMPLETE_REG = ((UART_1_NUMBER_OF_DATA_BITS +
  49              		.loc 1 139 0
  50 0018 4722     		movs	r2, #71
  51 001a 1033     		adds	r3, r3, #16
  52 001c 1A70     		strb	r2, [r3]
 140:.\Generated_Source\PSoC5/UART_1.c ****                         UART_1_NUMBER_OF_START_BIT) * UART_1_OVER_SAMPLE_COUNT) - 1u;
 141:.\Generated_Source\PSoC5/UART_1.c ****         #else
 142:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCTR_PERIOD_REG = ((UART_1_NUMBER_OF_DATA_BITS +
 143:.\Generated_Source\PSoC5/UART_1.c ****                         UART_1_NUMBER_OF_START_BIT) * UART_1_OVER_SAMPLE_8) - 1u;
 144:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_TXCLKGEN_DP */
 145:.\Generated_Source\PSoC5/UART_1.c **** 
 146:.\Generated_Source\PSoC5/UART_1.c ****         /* Configure the Initial TX interrupt mask */
 147:.\Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 148:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_TXSTATUS_MASK_REG = UART_1_TX_STS_FIFO_EMPTY;
  53              		.loc 1 148 0
  54 001e 0222     		movs	r2, #2
  55 0020 5133     		adds	r3, r3, #81
  56 0022 1A70     		strb	r2, [r3]
  57 0024 08BD     		pop	{r3, pc}
  58              	.L4:
  59 0026 00BF     		.align	2
  60              	.L3:
  61 0028 00000000 		.word	UART_1_TXISR
  62 002c 26650040 		.word	1073767718
  63              		.cfi_endproc
  64              	.LFE1:
  65              		.size	UART_1_Init, .-UART_1_Init
  66              		.section	.text.UART_1_Enable,"ax",%progbits
  67              		.align	2
  68              		.global	UART_1_Enable
  69              		.thumb
  70              		.thumb_func
  71              		.type	UART_1_Enable, %function
  72              	UART_1_Enable:
  73              	.LFB2:
 149:.\Generated_Source\PSoC5/UART_1.c ****         #else
 150:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_TXSTATUS_MASK_REG = UART_1_INIT_TX_INTERRUPTS_MASK;
 151:.\Generated_Source\PSoC5/UART_1.c ****         #endif /*End UART_1_TX_INTERRUPT_ENABLED*/
 152:.\Generated_Source\PSoC5/UART_1.c **** 
 153:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* End UART_1_TX_ENABLED */
 154:.\Generated_Source\PSoC5/UART_1.c **** 
 155:.\Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_PARITY_TYPE_SW)  /* Write Parity to Control Register */
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 5


 156:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_WriteControlRegister( \
 157:.\Generated_Source\PSoC5/UART_1.c ****             (UART_1_ReadControlRegister() & (uint8)~UART_1_CTRL_PARITY_TYPE_MASK) | \
 158:.\Generated_Source\PSoC5/UART_1.c ****             (uint8)(UART_1_PARITY_TYPE << UART_1_CTRL_PARITY_TYPE0_SHIFT) );
 159:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* End UART_1_PARITY_TYPE_SW */
 160:.\Generated_Source\PSoC5/UART_1.c **** }
 161:.\Generated_Source\PSoC5/UART_1.c **** 
 162:.\Generated_Source\PSoC5/UART_1.c **** 
 163:.\Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Enable
 165:.\Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 166:.\Generated_Source\PSoC5/UART_1.c **** *
 167:.\Generated_Source\PSoC5/UART_1.c **** * Summary:
 168:.\Generated_Source\PSoC5/UART_1.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:.\Generated_Source\PSoC5/UART_1.c **** *  to call UART_1_Enable() because the UART_1_Start() API
 170:.\Generated_Source\PSoC5/UART_1.c **** *  calls this function, which is the preferred method to begin component
 171:.\Generated_Source\PSoC5/UART_1.c **** *  operation.
 172:.\Generated_Source\PSoC5/UART_1.c **** 
 173:.\Generated_Source\PSoC5/UART_1.c **** * Parameters:
 174:.\Generated_Source\PSoC5/UART_1.c **** *  None.
 175:.\Generated_Source\PSoC5/UART_1.c **** *
 176:.\Generated_Source\PSoC5/UART_1.c **** * Return:
 177:.\Generated_Source\PSoC5/UART_1.c **** *  None.
 178:.\Generated_Source\PSoC5/UART_1.c **** *
 179:.\Generated_Source\PSoC5/UART_1.c **** * Global Variables:
 180:.\Generated_Source\PSoC5/UART_1.c **** *  UART_1_rxAddressDetected - set to initial state (0).
 181:.\Generated_Source\PSoC5/UART_1.c **** *
 182:.\Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 183:.\Generated_Source\PSoC5/UART_1.c **** void UART_1_Enable(void) 
 184:.\Generated_Source\PSoC5/UART_1.c **** {
  74              		.loc 1 184 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78 0000 10B5     		push	{r4, lr}
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 4, -8
  81              		.cfi_offset 14, -4
 185:.\Generated_Source\PSoC5/UART_1.c ****     uint8 enableInterrupts;
 186:.\Generated_Source\PSoC5/UART_1.c ****     enableInterrupts = CyEnterCriticalSection();
  82              		.loc 1 186 0
  83 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  84              	.LVL2:
  85 0006 0446     		mov	r4, r0
  86              	.LVL3:
 187:.\Generated_Source\PSoC5/UART_1.c **** 
 188:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 189:.\Generated_Source\PSoC5/UART_1.c ****         /* RX Counter (Count7) Enable */
 190:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXBITCTR_CONTROL_REG |= UART_1_CNTR_ENABLE;
 191:.\Generated_Source\PSoC5/UART_1.c **** 
 192:.\Generated_Source\PSoC5/UART_1.c ****         /* Enable the RX Interrupt */
 193:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_ACTL_REG  |= UART_1_INT_ENABLE;
 194:.\Generated_Source\PSoC5/UART_1.c **** 
 195:.\Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 196:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableRxInt();
 197:.\Generated_Source\PSoC5/UART_1.c **** 
 198:.\Generated_Source\PSoC5/UART_1.c ****             #if (UART_1_RXHW_ADDRESS_ENABLED)
 199:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_rxAddressDetected = 0u;
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 6


 200:.\Generated_Source\PSoC5/UART_1.c ****             #endif /* (UART_1_RXHW_ADDRESS_ENABLED) */
 201:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 202:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 203:.\Generated_Source\PSoC5/UART_1.c **** 
 204:.\Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_TX_ENABLED)
 205:.\Generated_Source\PSoC5/UART_1.c ****         /* TX Counter (DP/Count7) Enable */
 206:.\Generated_Source\PSoC5/UART_1.c ****         #if(!UART_1_TXCLKGEN_DP)
 207:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCTR_CONTROL_REG |= UART_1_CNTR_ENABLE;
 208:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_TXCLKGEN_DP */
 209:.\Generated_Source\PSoC5/UART_1.c **** 
 210:.\Generated_Source\PSoC5/UART_1.c ****         /* Enable the TX Interrupt */
 211:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_TXSTATUS_ACTL_REG |= UART_1_INT_ENABLE;
  87              		.loc 1 211 0
  88 0008 084A     		ldr	r2, .L7
  89 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  90 000c 43F01003 		orr	r3, r3, #16
  91 0010 1370     		strb	r3, [r2]
 212:.\Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 213:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
  92              		.loc 1 213 0
  93 0012 0223     		movs	r3, #2
  94 0014 064A     		ldr	r2, .L7+4
  95 0016 1360     		str	r3, [r2]
 214:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
  96              		.loc 1 214 0
  97 0018 A2F5C072 		sub	r2, r2, #384
  98 001c 1360     		str	r3, [r2]
 215:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 216:.\Generated_Source\PSoC5/UART_1.c ****      #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 217:.\Generated_Source\PSoC5/UART_1.c **** 
 218:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_INTERNAL_CLOCK_USED)
 219:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_IntClock_Start();  /* Enable the clock */
  99              		.loc 1 219 0
 100 001e FFF7FEFF 		bl	UART_1_IntClock_Start
 101              	.LVL4:
 220:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_INTERNAL_CLOCK_USED) */
 221:.\Generated_Source\PSoC5/UART_1.c **** 
 222:.\Generated_Source\PSoC5/UART_1.c ****     CyExitCriticalSection(enableInterrupts);
 102              		.loc 1 222 0
 103 0022 2046     		mov	r0, r4
 104 0024 FFF7FEFF 		bl	CyExitCriticalSection
 105              	.LVL5:
 106 0028 10BD     		pop	{r4, pc}
 107              	.LVL6:
 108              	.L8:
 109 002a 00BF     		.align	2
 110              	.L7:
 111 002c 97650040 		.word	1073767831
 112 0030 80E200E0 		.word	-536812928
 113              		.cfi_endproc
 114              	.LFE2:
 115              		.size	UART_1_Enable, .-UART_1_Enable
 116              		.section	.text.UART_1_Start,"ax",%progbits
 117              		.align	2
 118              		.global	UART_1_Start
 119              		.thumb
 120              		.thumb_func
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 7


 121              		.type	UART_1_Start, %function
 122              	UART_1_Start:
 123              	.LFB0:
  77:.\Generated_Source\PSoC5/UART_1.c ****     /* If not initialized then initialize all required hardware and software */
 124              		.loc 1 77 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128 0000 08B5     		push	{r3, lr}
 129              		.cfi_def_cfa_offset 8
 130              		.cfi_offset 3, -8
 131              		.cfi_offset 14, -4
  79:.\Generated_Source\PSoC5/UART_1.c ****     {
 132              		.loc 1 79 0
 133 0002 054B     		ldr	r3, .L12
 134 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 135 0006 23B9     		cbnz	r3, .L10
  81:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_initVar = 1u;
 136              		.loc 1 81 0
 137 0008 FFF7FEFF 		bl	UART_1_Init
 138              	.LVL7:
  82:.\Generated_Source\PSoC5/UART_1.c ****     }
 139              		.loc 1 82 0
 140 000c 0122     		movs	r2, #1
 141 000e 024B     		ldr	r3, .L12
 142 0010 1A70     		strb	r2, [r3]
 143              	.L10:
  85:.\Generated_Source\PSoC5/UART_1.c **** }
 144              		.loc 1 85 0
 145 0012 FFF7FEFF 		bl	UART_1_Enable
 146              	.LVL8:
 147 0016 08BD     		pop	{r3, pc}
 148              	.L13:
 149              		.align	2
 150              	.L12:
 151 0018 00000000 		.word	.LANCHOR0
 152              		.cfi_endproc
 153              	.LFE0:
 154              		.size	UART_1_Start, .-UART_1_Start
 155              		.section	.text.UART_1_Stop,"ax",%progbits
 156              		.align	2
 157              		.global	UART_1_Stop
 158              		.thumb
 159              		.thumb_func
 160              		.type	UART_1_Stop, %function
 161              	UART_1_Stop:
 162              	.LFB3:
 223:.\Generated_Source\PSoC5/UART_1.c **** }
 224:.\Generated_Source\PSoC5/UART_1.c **** 
 225:.\Generated_Source\PSoC5/UART_1.c **** 
 226:.\Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 227:.\Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Stop
 228:.\Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 229:.\Generated_Source\PSoC5/UART_1.c **** *
 230:.\Generated_Source\PSoC5/UART_1.c **** * Summary:
 231:.\Generated_Source\PSoC5/UART_1.c **** *  Disables the UART operation.
 232:.\Generated_Source\PSoC5/UART_1.c **** *
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 8


 233:.\Generated_Source\PSoC5/UART_1.c **** * Parameters:
 234:.\Generated_Source\PSoC5/UART_1.c **** *  None.
 235:.\Generated_Source\PSoC5/UART_1.c **** *
 236:.\Generated_Source\PSoC5/UART_1.c **** * Return:
 237:.\Generated_Source\PSoC5/UART_1.c **** *  None.
 238:.\Generated_Source\PSoC5/UART_1.c **** *
 239:.\Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 240:.\Generated_Source\PSoC5/UART_1.c **** void UART_1_Stop(void) 
 241:.\Generated_Source\PSoC5/UART_1.c **** {
 163              		.loc 1 241 0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167 0000 10B5     		push	{r4, lr}
 168              		.cfi_def_cfa_offset 8
 169              		.cfi_offset 4, -8
 170              		.cfi_offset 14, -4
 242:.\Generated_Source\PSoC5/UART_1.c ****     uint8 enableInterrupts;
 243:.\Generated_Source\PSoC5/UART_1.c ****     enableInterrupts = CyEnterCriticalSection();
 171              		.loc 1 243 0
 172 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 173              	.LVL9:
 174 0006 0446     		mov	r4, r0
 175              	.LVL10:
 244:.\Generated_Source\PSoC5/UART_1.c **** 
 245:.\Generated_Source\PSoC5/UART_1.c ****     /* Write Bit Counter Disable */
 246:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 247:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXBITCTR_CONTROL_REG &= (uint8) ~UART_1_CNTR_ENABLE;
 248:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 249:.\Generated_Source\PSoC5/UART_1.c **** 
 250:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_ENABLED)
 251:.\Generated_Source\PSoC5/UART_1.c ****         #if(!UART_1_TXCLKGEN_DP)
 252:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCTR_CONTROL_REG &= (uint8) ~UART_1_CNTR_ENABLE;
 253:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* (!UART_1_TXCLKGEN_DP) */
 254:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_ENABLED) */
 255:.\Generated_Source\PSoC5/UART_1.c **** 
 256:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_INTERNAL_CLOCK_USED)
 257:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_IntClock_Stop();   /* Disable the clock */
 176              		.loc 1 257 0
 177 0008 FFF7FEFF 		bl	UART_1_IntClock_Stop
 178              	.LVL11:
 258:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_INTERNAL_CLOCK_USED) */
 259:.\Generated_Source\PSoC5/UART_1.c **** 
 260:.\Generated_Source\PSoC5/UART_1.c ****     /* Disable internal interrupt component */
 261:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 262:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_ACTL_REG  &= (uint8) ~UART_1_INT_ENABLE;
 263:.\Generated_Source\PSoC5/UART_1.c **** 
 264:.\Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 265:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableRxInt();
 266:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 267:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 268:.\Generated_Source\PSoC5/UART_1.c **** 
 269:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_ENABLED)
 270:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_TXSTATUS_ACTL_REG &= (uint8) ~UART_1_INT_ENABLE;
 179              		.loc 1 270 0
 180 000c 054A     		ldr	r2, .L16
 181 000e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 9


 182 0010 03F0EF03 		and	r3, r3, #239
 183 0014 1370     		strb	r3, [r2]
 271:.\Generated_Source\PSoC5/UART_1.c **** 
 272:.\Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 273:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
 184              		.loc 1 273 0
 185 0016 0222     		movs	r2, #2
 186 0018 034B     		ldr	r3, .L16+4
 187 001a 1A60     		str	r2, [r3]
 274:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 275:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_ENABLED) */
 276:.\Generated_Source\PSoC5/UART_1.c **** 
 277:.\Generated_Source\PSoC5/UART_1.c ****     CyExitCriticalSection(enableInterrupts);
 188              		.loc 1 277 0
 189 001c 2046     		mov	r0, r4
 190 001e FFF7FEFF 		bl	CyExitCriticalSection
 191              	.LVL12:
 192 0022 10BD     		pop	{r4, pc}
 193              	.LVL13:
 194              	.L17:
 195              		.align	2
 196              	.L16:
 197 0024 97650040 		.word	1073767831
 198 0028 80E100E0 		.word	-536813184
 199              		.cfi_endproc
 200              	.LFE3:
 201              		.size	UART_1_Stop, .-UART_1_Stop
 202              		.section	.text.UART_1_ReadControlRegister,"ax",%progbits
 203              		.align	2
 204              		.global	UART_1_ReadControlRegister
 205              		.thumb
 206              		.thumb_func
 207              		.type	UART_1_ReadControlRegister, %function
 208              	UART_1_ReadControlRegister:
 209              	.LFB4:
 278:.\Generated_Source\PSoC5/UART_1.c **** }
 279:.\Generated_Source\PSoC5/UART_1.c **** 
 280:.\Generated_Source\PSoC5/UART_1.c **** 
 281:.\Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 282:.\Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_ReadControlRegister
 283:.\Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 284:.\Generated_Source\PSoC5/UART_1.c **** *
 285:.\Generated_Source\PSoC5/UART_1.c **** * Summary:
 286:.\Generated_Source\PSoC5/UART_1.c **** *  Returns the current value of the control register.
 287:.\Generated_Source\PSoC5/UART_1.c **** *
 288:.\Generated_Source\PSoC5/UART_1.c **** * Parameters:
 289:.\Generated_Source\PSoC5/UART_1.c **** *  None.
 290:.\Generated_Source\PSoC5/UART_1.c **** *
 291:.\Generated_Source\PSoC5/UART_1.c **** * Return:
 292:.\Generated_Source\PSoC5/UART_1.c **** *  Contents of the control register.
 293:.\Generated_Source\PSoC5/UART_1.c **** *
 294:.\Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 295:.\Generated_Source\PSoC5/UART_1.c **** uint8 UART_1_ReadControlRegister(void) 
 296:.\Generated_Source\PSoC5/UART_1.c **** {
 210              		.loc 1 296 0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 10


 213              		@ frame_needed = 0, uses_anonymous_args = 0
 214              		@ link register save eliminated.
 297:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_CONTROL_REG_REMOVED)
 298:.\Generated_Source\PSoC5/UART_1.c ****         return(0u);
 299:.\Generated_Source\PSoC5/UART_1.c ****     #else
 300:.\Generated_Source\PSoC5/UART_1.c ****         return(UART_1_CONTROL_REG);
 301:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_CONTROL_REG_REMOVED) */
 302:.\Generated_Source\PSoC5/UART_1.c **** }
 215              		.loc 1 302 0
 216 0000 0020     		movs	r0, #0
 217 0002 7047     		bx	lr
 218              		.cfi_endproc
 219              	.LFE4:
 220              		.size	UART_1_ReadControlRegister, .-UART_1_ReadControlRegister
 221              		.section	.text.UART_1_WriteControlRegister,"ax",%progbits
 222              		.align	2
 223              		.global	UART_1_WriteControlRegister
 224              		.thumb
 225              		.thumb_func
 226              		.type	UART_1_WriteControlRegister, %function
 227              	UART_1_WriteControlRegister:
 228              	.LFB5:
 303:.\Generated_Source\PSoC5/UART_1.c **** 
 304:.\Generated_Source\PSoC5/UART_1.c **** 
 305:.\Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 306:.\Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_WriteControlRegister
 307:.\Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 308:.\Generated_Source\PSoC5/UART_1.c **** *
 309:.\Generated_Source\PSoC5/UART_1.c **** * Summary:
 310:.\Generated_Source\PSoC5/UART_1.c **** *  Writes an 8-bit value into the control register
 311:.\Generated_Source\PSoC5/UART_1.c **** *
 312:.\Generated_Source\PSoC5/UART_1.c **** * Parameters:
 313:.\Generated_Source\PSoC5/UART_1.c **** *  control:  control register value
 314:.\Generated_Source\PSoC5/UART_1.c **** *
 315:.\Generated_Source\PSoC5/UART_1.c **** * Return:
 316:.\Generated_Source\PSoC5/UART_1.c **** *  None.
 317:.\Generated_Source\PSoC5/UART_1.c **** *
 318:.\Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 319:.\Generated_Source\PSoC5/UART_1.c **** void  UART_1_WriteControlRegister(uint8 control) 
 320:.\Generated_Source\PSoC5/UART_1.c **** {
 229              		.loc 1 320 0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 234              	.LVL14:
 235 0000 7047     		bx	lr
 236              		.cfi_endproc
 237              	.LFE5:
 238              		.size	UART_1_WriteControlRegister, .-UART_1_WriteControlRegister
 239 0002 00BF     		.section	.text.UART_1_SetTxInterruptMode,"ax",%progbits
 240              		.align	2
 241              		.global	UART_1_SetTxInterruptMode
 242              		.thumb
 243              		.thumb_func
 244              		.type	UART_1_SetTxInterruptMode, %function
 245              	UART_1_SetTxInterruptMode:
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 11


 246              	.LFB6:
 321:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_CONTROL_REG_REMOVED)
 322:.\Generated_Source\PSoC5/UART_1.c ****         if(0u != control)
 323:.\Generated_Source\PSoC5/UART_1.c ****         {
 324:.\Generated_Source\PSoC5/UART_1.c ****             /* Suppress compiler warning */
 325:.\Generated_Source\PSoC5/UART_1.c ****         }
 326:.\Generated_Source\PSoC5/UART_1.c ****     #else
 327:.\Generated_Source\PSoC5/UART_1.c ****        UART_1_CONTROL_REG = control;
 328:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_CONTROL_REG_REMOVED) */
 329:.\Generated_Source\PSoC5/UART_1.c **** }
 330:.\Generated_Source\PSoC5/UART_1.c **** 
 331:.\Generated_Source\PSoC5/UART_1.c **** 
 332:.\Generated_Source\PSoC5/UART_1.c **** #if(UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 333:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 334:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxInterruptMode
 335:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 336:.\Generated_Source\PSoC5/UART_1.c ****     *
 337:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 338:.\Generated_Source\PSoC5/UART_1.c ****     *  Configures the RX interrupt sources enabled.
 339:.\Generated_Source\PSoC5/UART_1.c ****     *
 340:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 341:.\Generated_Source\PSoC5/UART_1.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:.\Generated_Source\PSoC5/UART_1.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:.\Generated_Source\PSoC5/UART_1.c ****     *  combination of status register bit-masks shown below:
 344:.\Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:.\Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:.\Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:.\Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_BREAK            Interrupt on break.
 348:.\Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_OVERRUN          Interrupt on overrun error.
 349:.\Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:.\Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_MRKSPC           Interrupt on address detect.
 351:.\Generated_Source\PSoC5/UART_1.c ****     *
 352:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 353:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 354:.\Generated_Source\PSoC5/UART_1.c ****     *
 355:.\Generated_Source\PSoC5/UART_1.c ****     * Theory:
 356:.\Generated_Source\PSoC5/UART_1.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:.\Generated_Source\PSoC5/UART_1.c ****     *
 358:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 359:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxInterruptMode(uint8 intSrc) 
 360:.\Generated_Source\PSoC5/UART_1.c ****     {
 361:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_MASK_REG  = intSrc;
 362:.\Generated_Source\PSoC5/UART_1.c ****     }
 363:.\Generated_Source\PSoC5/UART_1.c **** 
 364:.\Generated_Source\PSoC5/UART_1.c **** 
 365:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 366:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ReadRxData
 367:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 368:.\Generated_Source\PSoC5/UART_1.c ****     *
 369:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 370:.\Generated_Source\PSoC5/UART_1.c ****     *  Returns the next byte of received data. This function returns data without
 371:.\Generated_Source\PSoC5/UART_1.c ****     *  checking the status. You must check the status separately.
 372:.\Generated_Source\PSoC5/UART_1.c ****     *
 373:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 374:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 375:.\Generated_Source\PSoC5/UART_1.c ****     *
 376:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 12


 377:.\Generated_Source\PSoC5/UART_1.c ****     *  Received data from RX register
 378:.\Generated_Source\PSoC5/UART_1.c ****     *
 379:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 380:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBuffer - RAM buffer pointer for save received data.
 381:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - cyclic index for write to rxBuffer,
 382:.\Generated_Source\PSoC5/UART_1.c ****     *     checked to identify new data.
 383:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - cyclic index for read from rxBuffer,
 384:.\Generated_Source\PSoC5/UART_1.c ****     *     incremented after each byte has been read from buffer.
 385:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared if loop condition was detected
 386:.\Generated_Source\PSoC5/UART_1.c ****     *     in RX ISR.
 387:.\Generated_Source\PSoC5/UART_1.c ****     *
 388:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 389:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
 390:.\Generated_Source\PSoC5/UART_1.c ****     *
 391:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 392:.\Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_ReadRxData(void) 
 393:.\Generated_Source\PSoC5/UART_1.c ****     {
 394:.\Generated_Source\PSoC5/UART_1.c ****         uint8 rxData;
 395:.\Generated_Source\PSoC5/UART_1.c **** 
 396:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 397:.\Generated_Source\PSoC5/UART_1.c **** 
 398:.\Generated_Source\PSoC5/UART_1.c ****         uint8 locRxBufferRead;
 399:.\Generated_Source\PSoC5/UART_1.c ****         uint8 locRxBufferWrite;
 400:.\Generated_Source\PSoC5/UART_1.c **** 
 401:.\Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 402:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 403:.\Generated_Source\PSoC5/UART_1.c **** 
 404:.\Generated_Source\PSoC5/UART_1.c ****         locRxBufferRead  = UART_1_rxBufferRead;
 405:.\Generated_Source\PSoC5/UART_1.c ****         locRxBufferWrite = UART_1_rxBufferWrite;
 406:.\Generated_Source\PSoC5/UART_1.c **** 
 407:.\Generated_Source\PSoC5/UART_1.c ****         if( (UART_1_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 408:.\Generated_Source\PSoC5/UART_1.c ****         {
 409:.\Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_rxBuffer[locRxBufferRead];
 410:.\Generated_Source\PSoC5/UART_1.c ****             locRxBufferRead++;
 411:.\Generated_Source\PSoC5/UART_1.c **** 
 412:.\Generated_Source\PSoC5/UART_1.c ****             if(locRxBufferRead >= UART_1_RX_BUFFER_SIZE)
 413:.\Generated_Source\PSoC5/UART_1.c ****             {
 414:.\Generated_Source\PSoC5/UART_1.c ****                 locRxBufferRead = 0u;
 415:.\Generated_Source\PSoC5/UART_1.c ****             }
 416:.\Generated_Source\PSoC5/UART_1.c ****             /* Update the real pointer */
 417:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_rxBufferRead = locRxBufferRead;
 418:.\Generated_Source\PSoC5/UART_1.c **** 
 419:.\Generated_Source\PSoC5/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 420:.\Generated_Source\PSoC5/UART_1.c ****             {
 421:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_rxBufferLoopDetect = 0u;
 422:.\Generated_Source\PSoC5/UART_1.c ****                 #if ((UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u))
 423:.\Generated_Source\PSoC5/UART_1.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:.\Generated_Source\PSoC5/UART_1.c ****                     #if( UART_1_HD_ENABLED )
 425:.\Generated_Source\PSoC5/UART_1.c ****                         if((UART_1_CONTROL_REG & UART_1_CTRL_HD_SEND) == 0u)
 426:.\Generated_Source\PSoC5/UART_1.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:.\Generated_Source\PSoC5/UART_1.c ****                             *  configuration set, otherwise
 428:.\Generated_Source\PSoC5/UART_1.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:.\Generated_Source\PSoC5/UART_1.c ****                             */
 430:.\Generated_Source\PSoC5/UART_1.c ****                             UART_1_RXSTATUS_MASK_REG  |= UART_1_RX_STS_FIFO_NOTEMPTY;
 431:.\Generated_Source\PSoC5/UART_1.c ****                         }
 432:.\Generated_Source\PSoC5/UART_1.c ****                     #else
 433:.\Generated_Source\PSoC5/UART_1.c ****                         UART_1_RXSTATUS_MASK_REG  |= UART_1_RX_STS_FIFO_NOTEMPTY;
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 13


 434:.\Generated_Source\PSoC5/UART_1.c ****                     #endif /* end UART_1_HD_ENABLED */
 435:.\Generated_Source\PSoC5/UART_1.c ****                 #endif /* ((UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u)) */
 436:.\Generated_Source\PSoC5/UART_1.c ****             }
 437:.\Generated_Source\PSoC5/UART_1.c ****         }
 438:.\Generated_Source\PSoC5/UART_1.c ****         else
 439:.\Generated_Source\PSoC5/UART_1.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:.\Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_RXDATA_REG;
 441:.\Generated_Source\PSoC5/UART_1.c ****         }
 442:.\Generated_Source\PSoC5/UART_1.c **** 
 443:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 444:.\Generated_Source\PSoC5/UART_1.c **** 
 445:.\Generated_Source\PSoC5/UART_1.c ****     #else
 446:.\Generated_Source\PSoC5/UART_1.c **** 
 447:.\Generated_Source\PSoC5/UART_1.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:.\Generated_Source\PSoC5/UART_1.c ****         rxData = UART_1_RXDATA_REG;
 449:.\Generated_Source\PSoC5/UART_1.c **** 
 450:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 451:.\Generated_Source\PSoC5/UART_1.c **** 
 452:.\Generated_Source\PSoC5/UART_1.c ****         return(rxData);
 453:.\Generated_Source\PSoC5/UART_1.c ****     }
 454:.\Generated_Source\PSoC5/UART_1.c **** 
 455:.\Generated_Source\PSoC5/UART_1.c **** 
 456:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 457:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ReadRxStatus
 458:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 459:.\Generated_Source\PSoC5/UART_1.c ****     *
 460:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 461:.\Generated_Source\PSoC5/UART_1.c ****     *  Returns the current state of the receiver status register and the software
 462:.\Generated_Source\PSoC5/UART_1.c ****     *  buffer overflow status.
 463:.\Generated_Source\PSoC5/UART_1.c ****     *
 464:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 465:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 466:.\Generated_Source\PSoC5/UART_1.c ****     *
 467:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 468:.\Generated_Source\PSoC5/UART_1.c ****     *  Current state of the status register.
 469:.\Generated_Source\PSoC5/UART_1.c ****     *
 470:.\Generated_Source\PSoC5/UART_1.c ****     * Side Effect:
 471:.\Generated_Source\PSoC5/UART_1.c ****     *  All status register bits are clear-on-read except
 472:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_RX_STS_FIFO_NOTEMPTY.
 473:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:.\Generated_Source\PSoC5/UART_1.c ****     *  register read.
 475:.\Generated_Source\PSoC5/UART_1.c ****     *
 476:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 477:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferOverflow - used to indicate overload condition.
 478:.\Generated_Source\PSoC5/UART_1.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:.\Generated_Source\PSoC5/UART_1.c ****     *   UART_1_rxBufferRead to write new data. This condition returned
 480:.\Generated_Source\PSoC5/UART_1.c ****     *   and cleared to zero by this API as an
 481:.\Generated_Source\PSoC5/UART_1.c ****     *   UART_1_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:.\Generated_Source\PSoC5/UART_1.c ****     *   bits.
 483:.\Generated_Source\PSoC5/UART_1.c ****     *
 484:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 485:.\Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_ReadRxStatus(void) 
 486:.\Generated_Source\PSoC5/UART_1.c ****     {
 487:.\Generated_Source\PSoC5/UART_1.c ****         uint8 status;
 488:.\Generated_Source\PSoC5/UART_1.c **** 
 489:.\Generated_Source\PSoC5/UART_1.c ****         status = UART_1_RXSTATUS_REG & UART_1_RX_HW_MASK;
 490:.\Generated_Source\PSoC5/UART_1.c **** 
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 14


 491:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 492:.\Generated_Source\PSoC5/UART_1.c ****         if(UART_1_rxBufferOverflow != 0u)
 493:.\Generated_Source\PSoC5/UART_1.c ****         {
 494:.\Generated_Source\PSoC5/UART_1.c ****             status |= UART_1_RX_STS_SOFT_BUFF_OVER;
 495:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_rxBufferOverflow = 0u;
 496:.\Generated_Source\PSoC5/UART_1.c ****         }
 497:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 498:.\Generated_Source\PSoC5/UART_1.c **** 
 499:.\Generated_Source\PSoC5/UART_1.c ****         return(status);
 500:.\Generated_Source\PSoC5/UART_1.c ****     }
 501:.\Generated_Source\PSoC5/UART_1.c **** 
 502:.\Generated_Source\PSoC5/UART_1.c **** 
 503:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 504:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetChar
 505:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 506:.\Generated_Source\PSoC5/UART_1.c ****     *
 507:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 508:.\Generated_Source\PSoC5/UART_1.c ****     *  Returns the last received byte of data. UART_1_GetChar() is
 509:.\Generated_Source\PSoC5/UART_1.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:.\Generated_Source\PSoC5/UART_1.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:.\Generated_Source\PSoC5/UART_1.c ****     *
 512:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 513:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 514:.\Generated_Source\PSoC5/UART_1.c ****     *
 515:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 516:.\Generated_Source\PSoC5/UART_1.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:.\Generated_Source\PSoC5/UART_1.c ****     *  A returned zero signifies an error condition or no data available.
 518:.\Generated_Source\PSoC5/UART_1.c ****     *
 519:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 520:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBuffer - RAM buffer pointer for save received data.
 521:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - cyclic index for write to rxBuffer,
 522:.\Generated_Source\PSoC5/UART_1.c ****     *     checked to identify new data.
 523:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - cyclic index for read from rxBuffer,
 524:.\Generated_Source\PSoC5/UART_1.c ****     *     incremented after each byte has been read from buffer.
 525:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared if loop condition was detected
 526:.\Generated_Source\PSoC5/UART_1.c ****     *     in RX ISR.
 527:.\Generated_Source\PSoC5/UART_1.c ****     *
 528:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 529:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
 530:.\Generated_Source\PSoC5/UART_1.c ****     *
 531:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 532:.\Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_GetChar(void) 
 533:.\Generated_Source\PSoC5/UART_1.c ****     {
 534:.\Generated_Source\PSoC5/UART_1.c ****         uint8 rxData = 0u;
 535:.\Generated_Source\PSoC5/UART_1.c ****         uint8 rxStatus;
 536:.\Generated_Source\PSoC5/UART_1.c **** 
 537:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 538:.\Generated_Source\PSoC5/UART_1.c ****         uint8 locRxBufferRead;
 539:.\Generated_Source\PSoC5/UART_1.c ****         uint8 locRxBufferWrite;
 540:.\Generated_Source\PSoC5/UART_1.c **** 
 541:.\Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 542:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 543:.\Generated_Source\PSoC5/UART_1.c **** 
 544:.\Generated_Source\PSoC5/UART_1.c ****         locRxBufferRead  = UART_1_rxBufferRead;
 545:.\Generated_Source\PSoC5/UART_1.c ****         locRxBufferWrite = UART_1_rxBufferWrite;
 546:.\Generated_Source\PSoC5/UART_1.c **** 
 547:.\Generated_Source\PSoC5/UART_1.c ****         if( (UART_1_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 15


 548:.\Generated_Source\PSoC5/UART_1.c ****         {
 549:.\Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_rxBuffer[locRxBufferRead];
 550:.\Generated_Source\PSoC5/UART_1.c ****             locRxBufferRead++;
 551:.\Generated_Source\PSoC5/UART_1.c ****             if(locRxBufferRead >= UART_1_RX_BUFFER_SIZE)
 552:.\Generated_Source\PSoC5/UART_1.c ****             {
 553:.\Generated_Source\PSoC5/UART_1.c ****                 locRxBufferRead = 0u;
 554:.\Generated_Source\PSoC5/UART_1.c ****             }
 555:.\Generated_Source\PSoC5/UART_1.c ****             /* Update the real pointer */
 556:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_rxBufferRead = locRxBufferRead;
 557:.\Generated_Source\PSoC5/UART_1.c **** 
 558:.\Generated_Source\PSoC5/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 559:.\Generated_Source\PSoC5/UART_1.c ****             {
 560:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_rxBufferLoopDetect = 0u;
 561:.\Generated_Source\PSoC5/UART_1.c ****                 #if( (UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u) )
 562:.\Generated_Source\PSoC5/UART_1.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:.\Generated_Source\PSoC5/UART_1.c ****                     #if( UART_1_HD_ENABLED )
 564:.\Generated_Source\PSoC5/UART_1.c ****                         if((UART_1_CONTROL_REG & UART_1_CTRL_HD_SEND) == 0u)
 565:.\Generated_Source\PSoC5/UART_1.c ****                         {   /* In Half duplex mode return RX mask only if
 566:.\Generated_Source\PSoC5/UART_1.c ****                             *  RX configuration set, otherwise
 567:.\Generated_Source\PSoC5/UART_1.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:.\Generated_Source\PSoC5/UART_1.c ****                             */
 569:.\Generated_Source\PSoC5/UART_1.c ****                             UART_1_RXSTATUS_MASK_REG |= UART_1_RX_STS_FIFO_NOTEMPTY;
 570:.\Generated_Source\PSoC5/UART_1.c ****                         }
 571:.\Generated_Source\PSoC5/UART_1.c ****                     #else
 572:.\Generated_Source\PSoC5/UART_1.c ****                         UART_1_RXSTATUS_MASK_REG |= UART_1_RX_STS_FIFO_NOTEMPTY;
 573:.\Generated_Source\PSoC5/UART_1.c ****                     #endif /* end UART_1_HD_ENABLED */
 574:.\Generated_Source\PSoC5/UART_1.c ****                 #endif /* UART_1_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:.\Generated_Source\PSoC5/UART_1.c ****             }
 576:.\Generated_Source\PSoC5/UART_1.c **** 
 577:.\Generated_Source\PSoC5/UART_1.c ****         }
 578:.\Generated_Source\PSoC5/UART_1.c ****         else
 579:.\Generated_Source\PSoC5/UART_1.c ****         {   rxStatus = UART_1_RXSTATUS_REG;
 580:.\Generated_Source\PSoC5/UART_1.c ****             if((rxStatus & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u)
 581:.\Generated_Source\PSoC5/UART_1.c ****             {   /* Read received data from FIFO */
 582:.\Generated_Source\PSoC5/UART_1.c ****                 rxData = UART_1_RXDATA_REG;
 583:.\Generated_Source\PSoC5/UART_1.c ****                 /*Check status on error*/
 584:.\Generated_Source\PSoC5/UART_1.c ****                 if((rxStatus & (UART_1_RX_STS_BREAK | UART_1_RX_STS_PAR_ERROR |
 585:.\Generated_Source\PSoC5/UART_1.c ****                                 UART_1_RX_STS_STOP_ERROR | UART_1_RX_STS_OVERRUN)) != 0u)
 586:.\Generated_Source\PSoC5/UART_1.c ****                 {
 587:.\Generated_Source\PSoC5/UART_1.c ****                     rxData = 0u;
 588:.\Generated_Source\PSoC5/UART_1.c ****                 }
 589:.\Generated_Source\PSoC5/UART_1.c ****             }
 590:.\Generated_Source\PSoC5/UART_1.c ****         }
 591:.\Generated_Source\PSoC5/UART_1.c **** 
 592:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 593:.\Generated_Source\PSoC5/UART_1.c **** 
 594:.\Generated_Source\PSoC5/UART_1.c ****     #else
 595:.\Generated_Source\PSoC5/UART_1.c **** 
 596:.\Generated_Source\PSoC5/UART_1.c ****         rxStatus =UART_1_RXSTATUS_REG;
 597:.\Generated_Source\PSoC5/UART_1.c ****         if((rxStatus & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u)
 598:.\Generated_Source\PSoC5/UART_1.c ****         {
 599:.\Generated_Source\PSoC5/UART_1.c ****             /* Read received data from FIFO */
 600:.\Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_RXDATA_REG;
 601:.\Generated_Source\PSoC5/UART_1.c **** 
 602:.\Generated_Source\PSoC5/UART_1.c ****             /*Check status on error*/
 603:.\Generated_Source\PSoC5/UART_1.c ****             if((rxStatus & (UART_1_RX_STS_BREAK | UART_1_RX_STS_PAR_ERROR |
 604:.\Generated_Source\PSoC5/UART_1.c ****                             UART_1_RX_STS_STOP_ERROR | UART_1_RX_STS_OVERRUN)) != 0u)
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 16


 605:.\Generated_Source\PSoC5/UART_1.c ****             {
 606:.\Generated_Source\PSoC5/UART_1.c ****                 rxData = 0u;
 607:.\Generated_Source\PSoC5/UART_1.c ****             }
 608:.\Generated_Source\PSoC5/UART_1.c ****         }
 609:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 610:.\Generated_Source\PSoC5/UART_1.c **** 
 611:.\Generated_Source\PSoC5/UART_1.c ****         return(rxData);
 612:.\Generated_Source\PSoC5/UART_1.c ****     }
 613:.\Generated_Source\PSoC5/UART_1.c **** 
 614:.\Generated_Source\PSoC5/UART_1.c **** 
 615:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 616:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetByte
 617:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 618:.\Generated_Source\PSoC5/UART_1.c ****     *
 619:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 620:.\Generated_Source\PSoC5/UART_1.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:.\Generated_Source\PSoC5/UART_1.c ****     *  condition.
 622:.\Generated_Source\PSoC5/UART_1.c ****     *
 623:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 624:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 625:.\Generated_Source\PSoC5/UART_1.c ****     *
 626:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 627:.\Generated_Source\PSoC5/UART_1.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:.\Generated_Source\PSoC5/UART_1.c ****     *  an error has occurred.
 629:.\Generated_Source\PSoC5/UART_1.c ****     *
 630:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 631:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
 632:.\Generated_Source\PSoC5/UART_1.c ****     *
 633:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 634:.\Generated_Source\PSoC5/UART_1.c ****     uint16 UART_1_GetByte(void) 
 635:.\Generated_Source\PSoC5/UART_1.c ****     {
 636:.\Generated_Source\PSoC5/UART_1.c ****         
 637:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 638:.\Generated_Source\PSoC5/UART_1.c ****         uint16 locErrorStatus;
 639:.\Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 640:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 641:.\Generated_Source\PSoC5/UART_1.c ****         locErrorStatus = (uint16)UART_1_errorStatus;
 642:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_errorStatus = 0u;
 643:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 644:.\Generated_Source\PSoC5/UART_1.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_1_ReadRxData() );
 645:.\Generated_Source\PSoC5/UART_1.c ****     #else
 646:.\Generated_Source\PSoC5/UART_1.c ****         return ( ((uint16)UART_1_ReadRxStatus() << 8u) | UART_1_ReadRxData() );
 647:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* UART_1_RX_INTERRUPT_ENABLED */
 648:.\Generated_Source\PSoC5/UART_1.c ****         
 649:.\Generated_Source\PSoC5/UART_1.c ****     }
 650:.\Generated_Source\PSoC5/UART_1.c **** 
 651:.\Generated_Source\PSoC5/UART_1.c **** 
 652:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 653:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetRxBufferSize
 654:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 655:.\Generated_Source\PSoC5/UART_1.c ****     *
 656:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 657:.\Generated_Source\PSoC5/UART_1.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:.\Generated_Source\PSoC5/UART_1.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:.\Generated_Source\PSoC5/UART_1.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:.\Generated_Source\PSoC5/UART_1.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:.\Generated_Source\PSoC5/UART_1.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 17


 662:.\Generated_Source\PSoC5/UART_1.c ****     *    account.
 663:.\Generated_Source\PSoC5/UART_1.c ****     *
 664:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 665:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 666:.\Generated_Source\PSoC5/UART_1.c ****     *
 667:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 668:.\Generated_Source\PSoC5/UART_1.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:.\Generated_Source\PSoC5/UART_1.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:.\Generated_Source\PSoC5/UART_1.c ****     *
 671:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 672:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - used to calculate left bytes.
 673:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - used to calculate left bytes.
 674:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - checked to decide left bytes amount.
 675:.\Generated_Source\PSoC5/UART_1.c ****     *
 676:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 677:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
 678:.\Generated_Source\PSoC5/UART_1.c ****     *
 679:.\Generated_Source\PSoC5/UART_1.c ****     * Theory:
 680:.\Generated_Source\PSoC5/UART_1.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:.\Generated_Source\PSoC5/UART_1.c ****     *
 682:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 683:.\Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_GetRxBufferSize(void)
 684:.\Generated_Source\PSoC5/UART_1.c ****                                                             
 685:.\Generated_Source\PSoC5/UART_1.c ****     {
 686:.\Generated_Source\PSoC5/UART_1.c ****         uint8 size;
 687:.\Generated_Source\PSoC5/UART_1.c **** 
 688:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 689:.\Generated_Source\PSoC5/UART_1.c **** 
 690:.\Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 691:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 692:.\Generated_Source\PSoC5/UART_1.c **** 
 693:.\Generated_Source\PSoC5/UART_1.c ****         if(UART_1_rxBufferRead == UART_1_rxBufferWrite)
 694:.\Generated_Source\PSoC5/UART_1.c ****         {
 695:.\Generated_Source\PSoC5/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 696:.\Generated_Source\PSoC5/UART_1.c ****             {
 697:.\Generated_Source\PSoC5/UART_1.c ****                 size = UART_1_RX_BUFFER_SIZE;
 698:.\Generated_Source\PSoC5/UART_1.c ****             }
 699:.\Generated_Source\PSoC5/UART_1.c ****             else
 700:.\Generated_Source\PSoC5/UART_1.c ****             {
 701:.\Generated_Source\PSoC5/UART_1.c ****                 size = 0u;
 702:.\Generated_Source\PSoC5/UART_1.c ****             }
 703:.\Generated_Source\PSoC5/UART_1.c ****         }
 704:.\Generated_Source\PSoC5/UART_1.c ****         else if(UART_1_rxBufferRead < UART_1_rxBufferWrite)
 705:.\Generated_Source\PSoC5/UART_1.c ****         {
 706:.\Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_rxBufferWrite - UART_1_rxBufferRead);
 707:.\Generated_Source\PSoC5/UART_1.c ****         }
 708:.\Generated_Source\PSoC5/UART_1.c ****         else
 709:.\Generated_Source\PSoC5/UART_1.c ****         {
 710:.\Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_RX_BUFFER_SIZE - UART_1_rxBufferRead) + UART_1_rxBufferWrite;
 711:.\Generated_Source\PSoC5/UART_1.c ****         }
 712:.\Generated_Source\PSoC5/UART_1.c **** 
 713:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 714:.\Generated_Source\PSoC5/UART_1.c **** 
 715:.\Generated_Source\PSoC5/UART_1.c ****     #else
 716:.\Generated_Source\PSoC5/UART_1.c **** 
 717:.\Generated_Source\PSoC5/UART_1.c ****         /* We can only know if there is data in the fifo. */
 718:.\Generated_Source\PSoC5/UART_1.c ****         size = ((UART_1_RXSTATUS_REG & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 18


 719:.\Generated_Source\PSoC5/UART_1.c **** 
 720:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 721:.\Generated_Source\PSoC5/UART_1.c **** 
 722:.\Generated_Source\PSoC5/UART_1.c ****         return(size);
 723:.\Generated_Source\PSoC5/UART_1.c ****     }
 724:.\Generated_Source\PSoC5/UART_1.c **** 
 725:.\Generated_Source\PSoC5/UART_1.c **** 
 726:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 727:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ClearRxBuffer
 728:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 729:.\Generated_Source\PSoC5/UART_1.c ****     *
 730:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 731:.\Generated_Source\PSoC5/UART_1.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:.\Generated_Source\PSoC5/UART_1.c ****     *
 733:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 734:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 735:.\Generated_Source\PSoC5/UART_1.c ****     *
 736:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 737:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 738:.\Generated_Source\PSoC5/UART_1.c ****     *
 739:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 740:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - cleared to zero.
 741:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - cleared to zero.
 742:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared to zero.
 743:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferOverflow - cleared to zero.
 744:.\Generated_Source\PSoC5/UART_1.c ****     *
 745:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 746:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
 747:.\Generated_Source\PSoC5/UART_1.c ****     *
 748:.\Generated_Source\PSoC5/UART_1.c ****     * Theory:
 749:.\Generated_Source\PSoC5/UART_1.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:.\Generated_Source\PSoC5/UART_1.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:.\Generated_Source\PSoC5/UART_1.c ****     *  have remained in the RAM.
 752:.\Generated_Source\PSoC5/UART_1.c ****     *
 753:.\Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
 754:.\Generated_Source\PSoC5/UART_1.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:.\Generated_Source\PSoC5/UART_1.c ****     *
 756:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 757:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_ClearRxBuffer(void) 
 758:.\Generated_Source\PSoC5/UART_1.c ****     {
 759:.\Generated_Source\PSoC5/UART_1.c ****         uint8 enableInterrupts;
 760:.\Generated_Source\PSoC5/UART_1.c **** 
 761:.\Generated_Source\PSoC5/UART_1.c ****         /* Clear the HW FIFO */
 762:.\Generated_Source\PSoC5/UART_1.c ****         enableInterrupts = CyEnterCriticalSection();
 763:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXDATA_AUX_CTL_REG |= (uint8)  UART_1_RX_FIFO_CLR;
 764:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXDATA_AUX_CTL_REG &= (uint8) ~UART_1_RX_FIFO_CLR;
 765:.\Generated_Source\PSoC5/UART_1.c ****         CyExitCriticalSection(enableInterrupts);
 766:.\Generated_Source\PSoC5/UART_1.c **** 
 767:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 768:.\Generated_Source\PSoC5/UART_1.c **** 
 769:.\Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt. */
 770:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 771:.\Generated_Source\PSoC5/UART_1.c **** 
 772:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferRead = 0u;
 773:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferWrite = 0u;
 774:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferLoopDetect = 0u;
 775:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferOverflow = 0u;
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 19


 776:.\Generated_Source\PSoC5/UART_1.c **** 
 777:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 778:.\Generated_Source\PSoC5/UART_1.c **** 
 779:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 780:.\Generated_Source\PSoC5/UART_1.c **** 
 781:.\Generated_Source\PSoC5/UART_1.c ****     }
 782:.\Generated_Source\PSoC5/UART_1.c **** 
 783:.\Generated_Source\PSoC5/UART_1.c **** 
 784:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 785:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxAddressMode
 786:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 787:.\Generated_Source\PSoC5/UART_1.c ****     *
 788:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 789:.\Generated_Source\PSoC5/UART_1.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:.\Generated_Source\PSoC5/UART_1.c ****     *  UART.
 791:.\Generated_Source\PSoC5/UART_1.c ****     *
 792:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 793:.\Generated_Source\PSoC5/UART_1.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:.\Generated_Source\PSoC5/UART_1.c ****     *                                               detection
 796:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:.\Generated_Source\PSoC5/UART_1.c ****     *                                               address detection
 798:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:.\Generated_Source\PSoC5/UART_1.c ****     *                                               detection
 800:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:.\Generated_Source\PSoC5/UART_1.c ****     *                                               address detection
 802:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_NONE - No address detection
 803:.\Generated_Source\PSoC5/UART_1.c ****     *
 804:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 805:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 806:.\Generated_Source\PSoC5/UART_1.c ****     *
 807:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 808:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxAddressMode - the parameter stored in this variable for
 809:.\Generated_Source\PSoC5/UART_1.c ****     *   the farther usage in RX ISR.
 810:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxAddressDetected - set to initial state (0).
 811:.\Generated_Source\PSoC5/UART_1.c ****     *
 812:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 813:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxAddressMode(uint8 addressMode)
 814:.\Generated_Source\PSoC5/UART_1.c ****                                                         
 815:.\Generated_Source\PSoC5/UART_1.c ****     {
 816:.\Generated_Source\PSoC5/UART_1.c ****         #if(UART_1_RXHW_ADDRESS_ENABLED)
 817:.\Generated_Source\PSoC5/UART_1.c ****             #if(UART_1_CONTROL_REG_REMOVED)
 818:.\Generated_Source\PSoC5/UART_1.c ****                 if(0u != addressMode)
 819:.\Generated_Source\PSoC5/UART_1.c ****                 {
 820:.\Generated_Source\PSoC5/UART_1.c ****                     /* Suppress compiler warning */
 821:.\Generated_Source\PSoC5/UART_1.c ****                 }
 822:.\Generated_Source\PSoC5/UART_1.c ****             #else /* UART_1_CONTROL_REG_REMOVED */
 823:.\Generated_Source\PSoC5/UART_1.c ****                 uint8 tmpCtrl;
 824:.\Generated_Source\PSoC5/UART_1.c ****                 tmpCtrl = UART_1_CONTROL_REG & (uint8)~UART_1_CTRL_RXADDR_MODE_MASK;
 825:.\Generated_Source\PSoC5/UART_1.c ****                 tmpCtrl |= (uint8)(addressMode << UART_1_CTRL_RXADDR_MODE0_SHIFT);
 826:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_CONTROL_REG = tmpCtrl;
 827:.\Generated_Source\PSoC5/UART_1.c **** 
 828:.\Generated_Source\PSoC5/UART_1.c ****                 #if(UART_1_RX_INTERRUPT_ENABLED && \
 829:.\Generated_Source\PSoC5/UART_1.c ****                    (UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH) )
 830:.\Generated_Source\PSoC5/UART_1.c ****                     UART_1_rxAddressMode = addressMode;
 831:.\Generated_Source\PSoC5/UART_1.c ****                     UART_1_rxAddressDetected = 0u;
 832:.\Generated_Source\PSoC5/UART_1.c ****                 #endif /* End UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH*/
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 20


 833:.\Generated_Source\PSoC5/UART_1.c ****             #endif /* End UART_1_CONTROL_REG_REMOVED */
 834:.\Generated_Source\PSoC5/UART_1.c ****         #else /* UART_1_RXHW_ADDRESS_ENABLED */
 835:.\Generated_Source\PSoC5/UART_1.c ****             if(0u != addressMode)
 836:.\Generated_Source\PSoC5/UART_1.c ****             {
 837:.\Generated_Source\PSoC5/UART_1.c ****                 /* Suppress compiler warning */
 838:.\Generated_Source\PSoC5/UART_1.c ****             }
 839:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_RXHW_ADDRESS_ENABLED */
 840:.\Generated_Source\PSoC5/UART_1.c ****     }
 841:.\Generated_Source\PSoC5/UART_1.c **** 
 842:.\Generated_Source\PSoC5/UART_1.c **** 
 843:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 844:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxAddress1
 845:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 846:.\Generated_Source\PSoC5/UART_1.c ****     *
 847:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 848:.\Generated_Source\PSoC5/UART_1.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:.\Generated_Source\PSoC5/UART_1.c ****     *
 850:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 851:.\Generated_Source\PSoC5/UART_1.c ****     *  address: Address #1 for hardware address detection.
 852:.\Generated_Source\PSoC5/UART_1.c ****     *
 853:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 854:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 855:.\Generated_Source\PSoC5/UART_1.c ****     *
 856:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 857:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxAddress1(uint8 address) 
 858:.\Generated_Source\PSoC5/UART_1.c ****     {
 859:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXADDRESS1_REG = address;
 860:.\Generated_Source\PSoC5/UART_1.c ****     }
 861:.\Generated_Source\PSoC5/UART_1.c **** 
 862:.\Generated_Source\PSoC5/UART_1.c **** 
 863:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 864:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxAddress2
 865:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 866:.\Generated_Source\PSoC5/UART_1.c ****     *
 867:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 868:.\Generated_Source\PSoC5/UART_1.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:.\Generated_Source\PSoC5/UART_1.c ****     *
 870:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 871:.\Generated_Source\PSoC5/UART_1.c ****     *  address: Address #2 for hardware address detection.
 872:.\Generated_Source\PSoC5/UART_1.c ****     *
 873:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 874:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 875:.\Generated_Source\PSoC5/UART_1.c ****     *
 876:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 877:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxAddress2(uint8 address) 
 878:.\Generated_Source\PSoC5/UART_1.c ****     {
 879:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXADDRESS2_REG = address;
 880:.\Generated_Source\PSoC5/UART_1.c ****     }
 881:.\Generated_Source\PSoC5/UART_1.c **** 
 882:.\Generated_Source\PSoC5/UART_1.c **** #endif  /* UART_1_RX_ENABLED || UART_1_HD_ENABLED*/
 883:.\Generated_Source\PSoC5/UART_1.c **** 
 884:.\Generated_Source\PSoC5/UART_1.c **** 
 885:.\Generated_Source\PSoC5/UART_1.c **** #if( (UART_1_TX_ENABLED) || (UART_1_HD_ENABLED) )
 886:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 887:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetTxInterruptMode
 888:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 889:.\Generated_Source\PSoC5/UART_1.c ****     *
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 21


 890:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 891:.\Generated_Source\PSoC5/UART_1.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:.\Generated_Source\PSoC5/UART_1.c ****     *  interrupt.
 893:.\Generated_Source\PSoC5/UART_1.c ****     *
 894:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 895:.\Generated_Source\PSoC5/UART_1.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:.\Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:.\Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:.\Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:.\Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:.\Generated_Source\PSoC5/UART_1.c ****     *
 901:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 902:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 903:.\Generated_Source\PSoC5/UART_1.c ****     *
 904:.\Generated_Source\PSoC5/UART_1.c ****     * Theory:
 905:.\Generated_Source\PSoC5/UART_1.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:.\Generated_Source\PSoC5/UART_1.c ****     *
 907:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 908:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetTxInterruptMode(uint8 intSrc) 
 909:.\Generated_Source\PSoC5/UART_1.c ****     {
 247              		.loc 1 909 0
 248              		.cfi_startproc
 249              		@ args = 0, pretend = 0, frame = 0
 250              		@ frame_needed = 0, uses_anonymous_args = 0
 251              		@ link register save eliminated.
 252              	.LVL15:
 910:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_TXSTATUS_MASK_REG = intSrc;
 253              		.loc 1 910 0
 254 0000 014B     		ldr	r3, .L21
 255 0002 1870     		strb	r0, [r3]
 256 0004 7047     		bx	lr
 257              	.L22:
 258 0006 00BF     		.align	2
 259              	.L21:
 260 0008 87650040 		.word	1073767815
 261              		.cfi_endproc
 262              	.LFE6:
 263              		.size	UART_1_SetTxInterruptMode, .-UART_1_SetTxInterruptMode
 264              		.section	.text.UART_1_WriteTxData,"ax",%progbits
 265              		.align	2
 266              		.global	UART_1_WriteTxData
 267              		.thumb
 268              		.thumb_func
 269              		.type	UART_1_WriteTxData, %function
 270              	UART_1_WriteTxData:
 271              	.LFB7:
 911:.\Generated_Source\PSoC5/UART_1.c ****     }
 912:.\Generated_Source\PSoC5/UART_1.c **** 
 913:.\Generated_Source\PSoC5/UART_1.c **** 
 914:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 915:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_WriteTxData
 916:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 917:.\Generated_Source\PSoC5/UART_1.c ****     *
 918:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 919:.\Generated_Source\PSoC5/UART_1.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:.\Generated_Source\PSoC5/UART_1.c ****     *  available without checking the TX status register. You must check status
 921:.\Generated_Source\PSoC5/UART_1.c ****     *  separately.
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 22


 922:.\Generated_Source\PSoC5/UART_1.c ****     *
 923:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 924:.\Generated_Source\PSoC5/UART_1.c ****     *  txDataByte: data byte
 925:.\Generated_Source\PSoC5/UART_1.c ****     *
 926:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 927:.\Generated_Source\PSoC5/UART_1.c ****     * None.
 928:.\Generated_Source\PSoC5/UART_1.c ****     *
 929:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 930:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBuffer - RAM buffer pointer for save data for transmission
 931:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - cyclic index for write to txBuffer,
 932:.\Generated_Source\PSoC5/UART_1.c ****     *    incremented after each byte saved to buffer.
 933:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - cyclic index for read from txBuffer,
 934:.\Generated_Source\PSoC5/UART_1.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
 936:.\Generated_Source\PSoC5/UART_1.c ****     *    initialized.
 937:.\Generated_Source\PSoC5/UART_1.c ****     *
 938:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 939:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
 940:.\Generated_Source\PSoC5/UART_1.c ****     *
 941:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 942:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_WriteTxData(uint8 txDataByte) 
 943:.\Generated_Source\PSoC5/UART_1.c ****     {
 272              		.loc 1 943 0
 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 0
 275              		@ frame_needed = 0, uses_anonymous_args = 0
 276              		@ link register save eliminated.
 277              	.LVL16:
 944:.\Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function*/
 945:.\Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 278              		.loc 1 945 0
 279 0000 114B     		ldr	r3, .L28
 280 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 281 0004 F3B1     		cbz	r3, .L23
 946:.\Generated_Source\PSoC5/UART_1.c ****         {
 947:.\Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 948:.\Generated_Source\PSoC5/UART_1.c **** 
 949:.\Generated_Source\PSoC5/UART_1.c ****             /* Protect variables that could change on interrupt. */
 950:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
 282              		.loc 1 950 0
 283 0006 0222     		movs	r2, #2
 284 0008 104B     		ldr	r3, .L28+4
 285 000a 1A60     		str	r2, [r3]
 951:.\Generated_Source\PSoC5/UART_1.c **** 
 952:.\Generated_Source\PSoC5/UART_1.c ****             if( (UART_1_txBufferRead == UART_1_txBufferWrite) &&
 286              		.loc 1 952 0
 287 000c 0E4A     		ldr	r2, .L28
 288 000e 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 289 0010 DBB2     		uxtb	r3, r3
 290 0012 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 291 0014 9342     		cmp	r3, r2
 292 0016 07D1     		bne	.L25
 953:.\Generated_Source\PSoC5/UART_1.c ****                 ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
 293              		.loc 1 953 0 discriminator 1
 294 0018 0D4B     		ldr	r3, .L28+8
 295 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 952:.\Generated_Source\PSoC5/UART_1.c ****                 ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 23


 296              		.loc 1 952 0 discriminator 1
 297 001c 13F0040F 		tst	r3, #4
 298 0020 02D1     		bne	.L25
 954:.\Generated_Source\PSoC5/UART_1.c ****             {
 955:.\Generated_Source\PSoC5/UART_1.c ****                 /* Add directly to the FIFO. */
 956:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXDATA_REG = txDataByte;
 299              		.loc 1 956 0
 300 0022 0C4B     		ldr	r3, .L28+12
 301 0024 1870     		strb	r0, [r3]
 302 0026 0AE0     		b	.L26
 303              	.L25:
 957:.\Generated_Source\PSoC5/UART_1.c ****             }
 958:.\Generated_Source\PSoC5/UART_1.c ****             else
 959:.\Generated_Source\PSoC5/UART_1.c ****             {
 960:.\Generated_Source\PSoC5/UART_1.c ****                 if(UART_1_txBufferWrite >= UART_1_TX_BUFFER_SIZE)
 304              		.loc 1 960 0
 305 0028 FF2A     		cmp	r2, #255
 306 002a 02D1     		bne	.L27
 961:.\Generated_Source\PSoC5/UART_1.c ****                 {
 962:.\Generated_Source\PSoC5/UART_1.c ****                     UART_1_txBufferWrite = 0u;
 307              		.loc 1 962 0
 308 002c 0022     		movs	r2, #0
 309 002e 064B     		ldr	r3, .L28
 310 0030 9A70     		strb	r2, [r3, #2]
 311              	.L27:
 963:.\Generated_Source\PSoC5/UART_1.c ****                 }
 964:.\Generated_Source\PSoC5/UART_1.c **** 
 965:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_txBuffer[UART_1_txBufferWrite] = txDataByte;
 312              		.loc 1 965 0
 313 0032 054A     		ldr	r2, .L28
 314 0034 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 315 0036 0849     		ldr	r1, .L28+16
 316 0038 C854     		strb	r0, [r1, r3]
 966:.\Generated_Source\PSoC5/UART_1.c **** 
 967:.\Generated_Source\PSoC5/UART_1.c ****                 /* Add to the software buffer. */
 968:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_txBufferWrite++;
 317              		.loc 1 968 0
 318 003a 0133     		adds	r3, r3, #1
 319 003c 9370     		strb	r3, [r2, #2]
 320              	.L26:
 969:.\Generated_Source\PSoC5/UART_1.c ****             }
 970:.\Generated_Source\PSoC5/UART_1.c **** 
 971:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
 321              		.loc 1 971 0
 322 003e 0222     		movs	r2, #2
 323 0040 064B     		ldr	r3, .L28+20
 324 0042 1A60     		str	r2, [r3]
 325              	.L23:
 326 0044 7047     		bx	lr
 327              	.L29:
 328 0046 00BF     		.align	2
 329              	.L28:
 330 0048 00000000 		.word	.LANCHOR0
 331 004c 80E100E0 		.word	-536813184
 332 0050 67650040 		.word	1073767783
 333 0054 47650040 		.word	1073767751
 334 0058 00000000 		.word	UART_1_txBuffer
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 24


 335 005c 00E100E0 		.word	-536813312
 336              		.cfi_endproc
 337              	.LFE7:
 338              		.size	UART_1_WriteTxData, .-UART_1_WriteTxData
 339              		.section	.text.UART_1_ReadTxStatus,"ax",%progbits
 340              		.align	2
 341              		.global	UART_1_ReadTxStatus
 342              		.thumb
 343              		.thumb_func
 344              		.type	UART_1_ReadTxStatus, %function
 345              	UART_1_ReadTxStatus:
 346              	.LFB8:
 972:.\Generated_Source\PSoC5/UART_1.c **** 
 973:.\Generated_Source\PSoC5/UART_1.c ****         #else
 974:.\Generated_Source\PSoC5/UART_1.c **** 
 975:.\Generated_Source\PSoC5/UART_1.c ****             /* Add directly to the FIFO. */
 976:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_TXDATA_REG = txDataByte;
 977:.\Generated_Source\PSoC5/UART_1.c **** 
 978:.\Generated_Source\PSoC5/UART_1.c ****         #endif /*(UART_1_TX_INTERRUPT_ENABLED) */
 979:.\Generated_Source\PSoC5/UART_1.c ****         }
 980:.\Generated_Source\PSoC5/UART_1.c ****     }
 981:.\Generated_Source\PSoC5/UART_1.c **** 
 982:.\Generated_Source\PSoC5/UART_1.c **** 
 983:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 984:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ReadTxStatus
 985:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 986:.\Generated_Source\PSoC5/UART_1.c ****     *
 987:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 988:.\Generated_Source\PSoC5/UART_1.c ****     *  Reads the status register for the TX portion of the UART.
 989:.\Generated_Source\PSoC5/UART_1.c ****     *
 990:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 991:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 992:.\Generated_Source\PSoC5/UART_1.c ****     *
 993:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 994:.\Generated_Source\PSoC5/UART_1.c ****     *  Contents of the status register
 995:.\Generated_Source\PSoC5/UART_1.c ****     *
 996:.\Generated_Source\PSoC5/UART_1.c ****     * Theory:
 997:.\Generated_Source\PSoC5/UART_1.c ****     *  This function reads the TX status register, which is cleared on read.
 998:.\Generated_Source\PSoC5/UART_1.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:.\Generated_Source\PSoC5/UART_1.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:.\Generated_Source\PSoC5/UART_1.c ****     *  and must be handled accordingly.
1001:.\Generated_Source\PSoC5/UART_1.c ****     *
1002:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1003:.\Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_ReadTxStatus(void) 
1004:.\Generated_Source\PSoC5/UART_1.c ****     {
 347              		.loc 1 1004 0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 0, uses_anonymous_args = 0
 351              		@ link register save eliminated.
1005:.\Generated_Source\PSoC5/UART_1.c ****         return(UART_1_TXSTATUS_REG);
 352              		.loc 1 1005 0
 353 0000 014B     		ldr	r3, .L31
 354 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
1006:.\Generated_Source\PSoC5/UART_1.c ****     }
 355              		.loc 1 1006 0
 356 0004 7047     		bx	lr
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 25


 357              	.L32:
 358 0006 00BF     		.align	2
 359              	.L31:
 360 0008 67650040 		.word	1073767783
 361              		.cfi_endproc
 362              	.LFE8:
 363              		.size	UART_1_ReadTxStatus, .-UART_1_ReadTxStatus
 364              		.section	.text.UART_1_PutChar,"ax",%progbits
 365              		.align	2
 366              		.global	UART_1_PutChar
 367              		.thumb
 368              		.thumb_func
 369              		.type	UART_1_PutChar, %function
 370              	UART_1_PutChar:
 371              	.LFB9:
1007:.\Generated_Source\PSoC5/UART_1.c **** 
1008:.\Generated_Source\PSoC5/UART_1.c **** 
1009:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1010:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutChar
1011:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1012:.\Generated_Source\PSoC5/UART_1.c ****     *
1013:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
1014:.\Generated_Source\PSoC5/UART_1.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:.\Generated_Source\PSoC5/UART_1.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:.\Generated_Source\PSoC5/UART_1.c ****     *  hold the data.
1017:.\Generated_Source\PSoC5/UART_1.c ****     *
1018:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1019:.\Generated_Source\PSoC5/UART_1.c ****     *  txDataByte: Byte containing the data to transmit
1020:.\Generated_Source\PSoC5/UART_1.c ****     *
1021:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
1022:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
1023:.\Generated_Source\PSoC5/UART_1.c ****     *
1024:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1025:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBuffer - RAM buffer pointer for save data for transmission
1026:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - cyclic index for write to txBuffer,
1027:.\Generated_Source\PSoC5/UART_1.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:.\Generated_Source\PSoC5/UART_1.c ****     *     saved to buffer.
1029:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - cyclic index for read from txBuffer,
1030:.\Generated_Source\PSoC5/UART_1.c ****     *     checked to identify free space in txBuffer.
1031:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1032:.\Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1033:.\Generated_Source\PSoC5/UART_1.c ****     *
1034:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1035:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
1036:.\Generated_Source\PSoC5/UART_1.c ****     *
1037:.\Generated_Source\PSoC5/UART_1.c ****     * Theory:
1038:.\Generated_Source\PSoC5/UART_1.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:.\Generated_Source\PSoC5/UART_1.c ****     *
1040:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1041:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutChar(uint8 txDataByte) 
1042:.\Generated_Source\PSoC5/UART_1.c ****     {
 372              		.loc 1 1042 0
 373              		.cfi_startproc
 374              		@ args = 0, pretend = 0, frame = 0
 375              		@ frame_needed = 0, uses_anonymous_args = 0
 376              		@ link register save eliminated.
 377              	.LVL17:
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 26


 378              	.L36:
1043:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1044:.\Generated_Source\PSoC5/UART_1.c ****         /* The temporary output pointer is used since it takes two instructions
1045:.\Generated_Source\PSoC5/UART_1.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:.\Generated_Source\PSoC5/UART_1.c ****         *  pointer and getting an interrupt in between instructions.
1047:.\Generated_Source\PSoC5/UART_1.c ****         */
1048:.\Generated_Source\PSoC5/UART_1.c ****         uint8 locTxBufferWrite;
1049:.\Generated_Source\PSoC5/UART_1.c ****         uint8 locTxBufferRead;
1050:.\Generated_Source\PSoC5/UART_1.c **** 
1051:.\Generated_Source\PSoC5/UART_1.c ****         do
1052:.\Generated_Source\PSoC5/UART_1.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:.\Generated_Source\PSoC5/UART_1.c **** 
1054:.\Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:.\Generated_Source\PSoC5/UART_1.c ****             /* Disable TX interrupt to protect variables from modification */
1056:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
1057:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:.\Generated_Source\PSoC5/UART_1.c **** 
1059:.\Generated_Source\PSoC5/UART_1.c ****             locTxBufferWrite = UART_1_txBufferWrite;
 379              		.loc 1 1059 0
 380 0000 164B     		ldr	r3, .L41
 381 0002 9978     		ldrb	r1, [r3, #2]	@ zero_extendqisi2
 382              	.LVL18:
1060:.\Generated_Source\PSoC5/UART_1.c ****             locTxBufferRead  = UART_1_txBufferRead;
 383              		.loc 1 1060 0
 384 0004 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 385 0006 DBB2     		uxtb	r3, r3
 386              	.LVL19:
1061:.\Generated_Source\PSoC5/UART_1.c **** 
1062:.\Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:.\Generated_Source\PSoC5/UART_1.c ****             /* Enable interrupt to continue transmission */
1064:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
1065:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:.\Generated_Source\PSoC5/UART_1.c ****         }
1067:.\Generated_Source\PSoC5/UART_1.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
 387              		.loc 1 1067 0
 388 0008 9942     		cmp	r1, r3
 389 000a 05D2     		bcs	.L34
 390              		.loc 1 1067 0 is_stmt 0 discriminator 1
 391 000c 5A1E     		subs	r2, r3, #1
 392 000e 9142     		cmp	r1, r2
 393 0010 14BF     		ite	ne
 394 0012 0022     		movne	r2, #0
 395 0014 0122     		moveq	r2, #1
 396 0016 04E0     		b	.L35
 397              	.L34:
1068:.\Generated_Source\PSoC5/UART_1.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
 398              		.loc 1 1068 0 is_stmt 1 discriminator 2
 399 0018 CA1A     		subs	r2, r1, r3
1067:.\Generated_Source\PSoC5/UART_1.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
 400              		.loc 1 1067 0 discriminator 2
 401 001a FE2A     		cmp	r2, #254
 402 001c 14BF     		ite	ne
 403 001e 0022     		movne	r2, #0
 404 0020 0122     		moveq	r2, #1
 405              	.L35:
1069:.\Generated_Source\PSoC5/UART_1.c ****                                 (uint8)(UART_1_TX_BUFFER_SIZE - 1u)) );
 406              		.loc 1 1069 0
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 27


 407 0022 002A     		cmp	r2, #0
 408 0024 ECD1     		bne	.L36
1070:.\Generated_Source\PSoC5/UART_1.c **** 
1071:.\Generated_Source\PSoC5/UART_1.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
 409              		.loc 1 1071 0
 410 0026 8B42     		cmp	r3, r1
 411 0028 07D1     		bne	.L37
1072:.\Generated_Source\PSoC5/UART_1.c ****             ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
 412              		.loc 1 1072 0 discriminator 1
 413 002a 0D4B     		ldr	r3, .L41+4
 414              	.LVL20:
 415 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1071:.\Generated_Source\PSoC5/UART_1.c ****             ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
 416              		.loc 1 1071 0 discriminator 1
 417 002e 13F0040F 		tst	r3, #4
 418 0032 02D1     		bne	.L37
1073:.\Generated_Source\PSoC5/UART_1.c ****         {
1074:.\Generated_Source\PSoC5/UART_1.c ****             /* Add directly to the FIFO */
1075:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_TXDATA_REG = txDataByte;
 419              		.loc 1 1075 0
 420 0034 0B4B     		ldr	r3, .L41+8
 421 0036 1870     		strb	r0, [r3]
 422 0038 7047     		bx	lr
 423              	.L37:
1076:.\Generated_Source\PSoC5/UART_1.c ****         }
1077:.\Generated_Source\PSoC5/UART_1.c ****         else
1078:.\Generated_Source\PSoC5/UART_1.c ****         {
1079:.\Generated_Source\PSoC5/UART_1.c ****             if(locTxBufferWrite >= UART_1_TX_BUFFER_SIZE)
 424              		.loc 1 1079 0
 425 003a FF29     		cmp	r1, #255
 426 003c 00D1     		bne	.L39
1080:.\Generated_Source\PSoC5/UART_1.c ****             {
1081:.\Generated_Source\PSoC5/UART_1.c ****                 locTxBufferWrite = 0u;
 427              		.loc 1 1081 0
 428 003e 0021     		movs	r1, #0
 429              	.LVL21:
 430              	.L39:
1082:.\Generated_Source\PSoC5/UART_1.c ****             }
1083:.\Generated_Source\PSoC5/UART_1.c ****             /* Add to the software buffer. */
1084:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_txBuffer[locTxBufferWrite] = txDataByte;
 431              		.loc 1 1084 0
 432 0040 094B     		ldr	r3, .L41+12
 433 0042 5854     		strb	r0, [r3, r1]
1085:.\Generated_Source\PSoC5/UART_1.c ****             locTxBufferWrite++;
 434              		.loc 1 1085 0
 435 0044 0131     		adds	r1, r1, #1
 436              	.LVL22:
1086:.\Generated_Source\PSoC5/UART_1.c **** 
1087:.\Generated_Source\PSoC5/UART_1.c ****             /* Finally, update the real output pointer */
1088:.\Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
1090:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:.\Generated_Source\PSoC5/UART_1.c **** 
1092:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_txBufferWrite = locTxBufferWrite;
 437              		.loc 1 1092 0
 438 0046 054B     		ldr	r3, .L41
 439 0048 9970     		strb	r1, [r3, #2]
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 28


1093:.\Generated_Source\PSoC5/UART_1.c **** 
1094:.\Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
1096:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:.\Generated_Source\PSoC5/UART_1.c **** 
1098:.\Generated_Source\PSoC5/UART_1.c ****             if(0u != (UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_EMPTY))
 440              		.loc 1 1098 0
 441 004a 054B     		ldr	r3, .L41+4
 442 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 443 004e 13F0020F 		tst	r3, #2
 444 0052 02D0     		beq	.L33
1099:.\Generated_Source\PSoC5/UART_1.c ****             {
1100:.\Generated_Source\PSoC5/UART_1.c ****                 /* Trigger TX interrupt to send software buffer */
1101:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_SetPendingTxInt();
 445              		.loc 1 1101 0
 446 0054 0222     		movs	r2, #2
 447 0056 054B     		ldr	r3, .L41+16
 448 0058 1A60     		str	r2, [r3]
 449              	.L33:
 450 005a 7047     		bx	lr
 451              	.L42:
 452              		.align	2
 453              	.L41:
 454 005c 00000000 		.word	.LANCHOR0
 455 0060 67650040 		.word	1073767783
 456 0064 47650040 		.word	1073767751
 457 0068 00000000 		.word	UART_1_txBuffer
 458 006c 00E200E0 		.word	-536813056
 459              		.cfi_endproc
 460              	.LFE9:
 461              		.size	UART_1_PutChar, .-UART_1_PutChar
 462              		.section	.text.UART_1_PutString,"ax",%progbits
 463              		.align	2
 464              		.global	UART_1_PutString
 465              		.thumb
 466              		.thumb_func
 467              		.type	UART_1_PutString, %function
 468              	UART_1_PutString:
 469              	.LFB10:
1102:.\Generated_Source\PSoC5/UART_1.c ****             }
1103:.\Generated_Source\PSoC5/UART_1.c ****         }
1104:.\Generated_Source\PSoC5/UART_1.c **** 
1105:.\Generated_Source\PSoC5/UART_1.c ****     #else
1106:.\Generated_Source\PSoC5/UART_1.c **** 
1107:.\Generated_Source\PSoC5/UART_1.c ****         while((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) != 0u)
1108:.\Generated_Source\PSoC5/UART_1.c ****         {
1109:.\Generated_Source\PSoC5/UART_1.c ****             /* Wait for room in the FIFO */
1110:.\Generated_Source\PSoC5/UART_1.c ****         }
1111:.\Generated_Source\PSoC5/UART_1.c **** 
1112:.\Generated_Source\PSoC5/UART_1.c ****         /* Add directly to the FIFO */
1113:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_TXDATA_REG = txDataByte;
1114:.\Generated_Source\PSoC5/UART_1.c **** 
1115:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* UART_1_TX_INTERRUPT_ENABLED */
1116:.\Generated_Source\PSoC5/UART_1.c ****     }
1117:.\Generated_Source\PSoC5/UART_1.c **** 
1118:.\Generated_Source\PSoC5/UART_1.c **** 
1119:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 29


1120:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutString
1121:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1122:.\Generated_Source\PSoC5/UART_1.c ****     *
1123:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
1124:.\Generated_Source\PSoC5/UART_1.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:.\Generated_Source\PSoC5/UART_1.c ****     *
1126:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1127:.\Generated_Source\PSoC5/UART_1.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:.\Generated_Source\PSoC5/UART_1.c ****     *
1129:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
1130:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
1131:.\Generated_Source\PSoC5/UART_1.c ****     *
1132:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1133:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1134:.\Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1135:.\Generated_Source\PSoC5/UART_1.c ****     *
1136:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1137:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
1138:.\Generated_Source\PSoC5/UART_1.c ****     *
1139:.\Generated_Source\PSoC5/UART_1.c ****     * Theory:
1140:.\Generated_Source\PSoC5/UART_1.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:.\Generated_Source\PSoC5/UART_1.c ****     *  function blocks until the last character of the string is loaded into the
1142:.\Generated_Source\PSoC5/UART_1.c ****     *  TX buffer.
1143:.\Generated_Source\PSoC5/UART_1.c ****     *
1144:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1145:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutString(const char8 string[]) 
1146:.\Generated_Source\PSoC5/UART_1.c ****     {
 470              		.loc 1 1146 0
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 0
 473              		@ frame_needed = 0, uses_anonymous_args = 0
 474              	.LVL23:
 475 0000 38B5     		push	{r3, r4, r5, lr}
 476              		.cfi_def_cfa_offset 16
 477              		.cfi_offset 3, -16
 478              		.cfi_offset 4, -12
 479              		.cfi_offset 5, -8
 480              		.cfi_offset 14, -4
 481              	.LVL24:
1147:.\Generated_Source\PSoC5/UART_1.c ****         uint16 bufIndex = 0u;
1148:.\Generated_Source\PSoC5/UART_1.c **** 
1149:.\Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function */
1150:.\Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 482              		.loc 1 1150 0
 483 0002 074B     		ldr	r3, .L49
 484 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 485 0006 2BB9     		cbnz	r3, .L47
 486 0008 38BD     		pop	{r3, r4, r5, pc}
 487              	.LVL25:
 488              	.L46:
1151:.\Generated_Source\PSoC5/UART_1.c ****         {
1152:.\Generated_Source\PSoC5/UART_1.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:.\Generated_Source\PSoC5/UART_1.c ****             while(string[bufIndex] != (char8) 0)
1154:.\Generated_Source\PSoC5/UART_1.c ****             {
1155:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_PutChar((uint8)string[bufIndex]);
 489              		.loc 1 1155 0
 490 000a FFF7FEFF 		bl	UART_1_PutChar
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 30


 491              	.LVL26:
1156:.\Generated_Source\PSoC5/UART_1.c ****                 bufIndex++;
 492              		.loc 1 1156 0
 493 000e 0134     		adds	r4, r4, #1
 494              	.LVL27:
 495 0010 A4B2     		uxth	r4, r4
 496              	.LVL28:
 497 0012 01E0     		b	.L44
 498              	.LVL29:
 499              	.L47:
 500 0014 0546     		mov	r5, r0
 501 0016 0024     		movs	r4, #0
 502              	.LVL30:
 503              	.L44:
1153:.\Generated_Source\PSoC5/UART_1.c ****             {
 504              		.loc 1 1153 0
 505 0018 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
 506 001a 0028     		cmp	r0, #0
 507 001c F5D1     		bne	.L46
 508 001e 38BD     		pop	{r3, r4, r5, pc}
 509              	.LVL31:
 510              	.L50:
 511              		.align	2
 512              	.L49:
 513 0020 00000000 		.word	.LANCHOR0
 514              		.cfi_endproc
 515              	.LFE10:
 516              		.size	UART_1_PutString, .-UART_1_PutString
 517              		.section	.text.UART_1_PutArray,"ax",%progbits
 518              		.align	2
 519              		.global	UART_1_PutArray
 520              		.thumb
 521              		.thumb_func
 522              		.type	UART_1_PutArray, %function
 523              	UART_1_PutArray:
 524              	.LFB11:
1157:.\Generated_Source\PSoC5/UART_1.c ****             }
1158:.\Generated_Source\PSoC5/UART_1.c ****         }
1159:.\Generated_Source\PSoC5/UART_1.c ****     }
1160:.\Generated_Source\PSoC5/UART_1.c **** 
1161:.\Generated_Source\PSoC5/UART_1.c **** 
1162:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1163:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutArray
1164:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1165:.\Generated_Source\PSoC5/UART_1.c ****     *
1166:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
1167:.\Generated_Source\PSoC5/UART_1.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:.\Generated_Source\PSoC5/UART_1.c ****     *  transmission.
1169:.\Generated_Source\PSoC5/UART_1.c ****     *
1170:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1171:.\Generated_Source\PSoC5/UART_1.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:.\Generated_Source\PSoC5/UART_1.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:.\Generated_Source\PSoC5/UART_1.c ****     *             Size parameter.
1174:.\Generated_Source\PSoC5/UART_1.c ****     *
1175:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
1176:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
1177:.\Generated_Source\PSoC5/UART_1.c ****     *
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 31


1178:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1179:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1180:.\Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1181:.\Generated_Source\PSoC5/UART_1.c ****     *
1182:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1183:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
1184:.\Generated_Source\PSoC5/UART_1.c ****     *
1185:.\Generated_Source\PSoC5/UART_1.c ****     * Theory:
1186:.\Generated_Source\PSoC5/UART_1.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:.\Generated_Source\PSoC5/UART_1.c ****     *  function blocks until the last character of the string is loaded into the
1188:.\Generated_Source\PSoC5/UART_1.c ****     *  TX buffer.
1189:.\Generated_Source\PSoC5/UART_1.c ****     *
1190:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1191:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutArray(const uint8 string[], uint8 byteCount)
1192:.\Generated_Source\PSoC5/UART_1.c ****                                                                     
1193:.\Generated_Source\PSoC5/UART_1.c ****     {
 525              		.loc 1 1193 0
 526              		.cfi_startproc
 527              		@ args = 0, pretend = 0, frame = 0
 528              		@ frame_needed = 0, uses_anonymous_args = 0
 529              	.LVL32:
1194:.\Generated_Source\PSoC5/UART_1.c ****         uint8 bufIndex = 0u;
1195:.\Generated_Source\PSoC5/UART_1.c **** 
1196:.\Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function */
1197:.\Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 530              		.loc 1 1197 0
 531 0000 084B     		ldr	r3, .L57
 532 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 533 0004 33B9     		cbnz	r3, .L55
 534 0006 7047     		bx	lr
 535              	.LVL33:
 536              	.L54:
 537              		.cfi_def_cfa_offset 16
 538              		.cfi_offset 4, -16
 539              		.cfi_offset 5, -12
 540              		.cfi_offset 6, -8
 541              		.cfi_offset 14, -4
1198:.\Generated_Source\PSoC5/UART_1.c ****         {
1199:.\Generated_Source\PSoC5/UART_1.c ****             while(bufIndex < byteCount)
1200:.\Generated_Source\PSoC5/UART_1.c ****             {
1201:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_PutChar(string[bufIndex]);
 542              		.loc 1 1201 0
 543 0008 305D     		ldrb	r0, [r6, r4]	@ zero_extendqisi2
 544 000a FFF7FEFF 		bl	UART_1_PutChar
 545              	.LVL34:
1202:.\Generated_Source\PSoC5/UART_1.c ****                 bufIndex++;
 546              		.loc 1 1202 0
 547 000e 0134     		adds	r4, r4, #1
 548              	.LVL35:
 549 0010 E4B2     		uxtb	r4, r4
 550              	.LVL36:
 551 0012 03E0     		b	.L52
 552              	.LVL37:
 553              	.L55:
 554              		.cfi_def_cfa_offset 0
 555              		.cfi_restore 4
 556              		.cfi_restore 5
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 32


 557              		.cfi_restore 6
 558              		.cfi_restore 14
1193:.\Generated_Source\PSoC5/UART_1.c ****         uint8 bufIndex = 0u;
 559              		.loc 1 1193 0
 560 0014 70B5     		push	{r4, r5, r6, lr}
 561              		.cfi_def_cfa_offset 16
 562              		.cfi_offset 4, -16
 563              		.cfi_offset 5, -12
 564              		.cfi_offset 6, -8
 565              		.cfi_offset 14, -4
 566 0016 0D46     		mov	r5, r1
 567 0018 0646     		mov	r6, r0
 568 001a 0024     		movs	r4, #0
 569              	.LVL38:
 570              	.L52:
1199:.\Generated_Source\PSoC5/UART_1.c ****             {
 571              		.loc 1 1199 0
 572 001c AC42     		cmp	r4, r5
 573 001e F3D3     		bcc	.L54
 574 0020 70BD     		pop	{r4, r5, r6, pc}
 575              	.LVL39:
 576              	.L58:
 577 0022 00BF     		.align	2
 578              	.L57:
 579 0024 00000000 		.word	.LANCHOR0
 580              		.cfi_endproc
 581              	.LFE11:
 582              		.size	UART_1_PutArray, .-UART_1_PutArray
 583              		.section	.text.UART_1_PutCRLF,"ax",%progbits
 584              		.align	2
 585              		.global	UART_1_PutCRLF
 586              		.thumb
 587              		.thumb_func
 588              		.type	UART_1_PutCRLF, %function
 589              	UART_1_PutCRLF:
 590              	.LFB12:
1203:.\Generated_Source\PSoC5/UART_1.c ****             }
1204:.\Generated_Source\PSoC5/UART_1.c ****         }
1205:.\Generated_Source\PSoC5/UART_1.c ****     }
1206:.\Generated_Source\PSoC5/UART_1.c **** 
1207:.\Generated_Source\PSoC5/UART_1.c **** 
1208:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1209:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutCRLF
1210:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1211:.\Generated_Source\PSoC5/UART_1.c ****     *
1212:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
1213:.\Generated_Source\PSoC5/UART_1.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:.\Generated_Source\PSoC5/UART_1.c ****     *  (0x0A) to the transmit buffer.
1215:.\Generated_Source\PSoC5/UART_1.c ****     *
1216:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1217:.\Generated_Source\PSoC5/UART_1.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:.\Generated_Source\PSoC5/UART_1.c ****     *
1219:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
1220:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
1221:.\Generated_Source\PSoC5/UART_1.c ****     *
1222:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1223:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 33


1224:.\Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1225:.\Generated_Source\PSoC5/UART_1.c ****     *
1226:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1227:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
1228:.\Generated_Source\PSoC5/UART_1.c ****     *
1229:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1230:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutCRLF(uint8 txDataByte) 
1231:.\Generated_Source\PSoC5/UART_1.c ****     {
 591              		.loc 1 1231 0
 592              		.cfi_startproc
 593              		@ args = 0, pretend = 0, frame = 0
 594              		@ frame_needed = 0, uses_anonymous_args = 0
 595              	.LVL40:
 596 0000 08B5     		push	{r3, lr}
 597              		.cfi_def_cfa_offset 8
 598              		.cfi_offset 3, -8
 599              		.cfi_offset 14, -4
1232:.\Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function */
1233:.\Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 600              		.loc 1 1233 0
 601 0002 064B     		ldr	r3, .L62
 602 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 603 0006 3BB1     		cbz	r3, .L59
1234:.\Generated_Source\PSoC5/UART_1.c ****         {
1235:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_PutChar(txDataByte);
 604              		.loc 1 1235 0
 605 0008 FFF7FEFF 		bl	UART_1_PutChar
 606              	.LVL41:
1236:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_PutChar(0x0Du);
 607              		.loc 1 1236 0
 608 000c 0D20     		movs	r0, #13
 609 000e FFF7FEFF 		bl	UART_1_PutChar
 610              	.LVL42:
1237:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_PutChar(0x0Au);
 611              		.loc 1 1237 0
 612 0012 0A20     		movs	r0, #10
 613 0014 FFF7FEFF 		bl	UART_1_PutChar
 614              	.LVL43:
 615              	.L59:
 616 0018 08BD     		pop	{r3, pc}
 617              	.L63:
 618 001a 00BF     		.align	2
 619              	.L62:
 620 001c 00000000 		.word	.LANCHOR0
 621              		.cfi_endproc
 622              	.LFE12:
 623              		.size	UART_1_PutCRLF, .-UART_1_PutCRLF
 624              		.section	.text.UART_1_GetTxBufferSize,"ax",%progbits
 625              		.align	2
 626              		.global	UART_1_GetTxBufferSize
 627              		.thumb
 628              		.thumb_func
 629              		.type	UART_1_GetTxBufferSize, %function
 630              	UART_1_GetTxBufferSize:
 631              	.LFB13:
1238:.\Generated_Source\PSoC5/UART_1.c ****         }
1239:.\Generated_Source\PSoC5/UART_1.c ****     }
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 34


1240:.\Generated_Source\PSoC5/UART_1.c **** 
1241:.\Generated_Source\PSoC5/UART_1.c **** 
1242:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1243:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetTxBufferSize
1244:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1245:.\Generated_Source\PSoC5/UART_1.c ****     *
1246:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
1247:.\Generated_Source\PSoC5/UART_1.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:.\Generated_Source\PSoC5/UART_1.c ****     *  transmitted.
1249:.\Generated_Source\PSoC5/UART_1.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:.\Generated_Source\PSoC5/UART_1.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:.\Generated_Source\PSoC5/UART_1.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:.\Generated_Source\PSoC5/UART_1.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:.\Generated_Source\PSoC5/UART_1.c ****     *    TX FIFO do not count.
1254:.\Generated_Source\PSoC5/UART_1.c ****     *
1255:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1256:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
1257:.\Generated_Source\PSoC5/UART_1.c ****     *
1258:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
1259:.\Generated_Source\PSoC5/UART_1.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:.\Generated_Source\PSoC5/UART_1.c ****     *  Buffer Size parameter.
1261:.\Generated_Source\PSoC5/UART_1.c ****     *
1262:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1263:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - used to calculate left space.
1264:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - used to calculate left space.
1265:.\Generated_Source\PSoC5/UART_1.c ****     *
1266:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1267:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
1268:.\Generated_Source\PSoC5/UART_1.c ****     *
1269:.\Generated_Source\PSoC5/UART_1.c ****     * Theory:
1270:.\Generated_Source\PSoC5/UART_1.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:.\Generated_Source\PSoC5/UART_1.c ****     *
1272:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1273:.\Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_GetTxBufferSize(void)
1274:.\Generated_Source\PSoC5/UART_1.c ****                                                             
1275:.\Generated_Source\PSoC5/UART_1.c ****     {
 632              		.loc 1 1275 0
 633              		.cfi_startproc
 634              		@ args = 0, pretend = 0, frame = 0
 635              		@ frame_needed = 0, uses_anonymous_args = 0
 636              		@ link register save eliminated.
1276:.\Generated_Source\PSoC5/UART_1.c ****         uint8 size;
1277:.\Generated_Source\PSoC5/UART_1.c **** 
1278:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1279:.\Generated_Source\PSoC5/UART_1.c **** 
1280:.\Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt. */
1281:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableTxInt();
 637              		.loc 1 1281 0
 638 0000 0222     		movs	r2, #2
 639 0002 0E4B     		ldr	r3, .L68
 640 0004 1A60     		str	r2, [r3]
1282:.\Generated_Source\PSoC5/UART_1.c **** 
1283:.\Generated_Source\PSoC5/UART_1.c ****         if(UART_1_txBufferRead == UART_1_txBufferWrite)
 641              		.loc 1 1283 0
 642 0006 0E4B     		ldr	r3, .L68+4
 643 0008 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 644 000a D2B2     		uxtb	r2, r2
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 35


 645 000c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 646 000e 9A42     		cmp	r2, r3
 647 0010 0FD0     		beq	.L67
1284:.\Generated_Source\PSoC5/UART_1.c ****         {
1285:.\Generated_Source\PSoC5/UART_1.c ****             size = 0u;
1286:.\Generated_Source\PSoC5/UART_1.c ****         }
1287:.\Generated_Source\PSoC5/UART_1.c ****         else if(UART_1_txBufferRead < UART_1_txBufferWrite)
 648              		.loc 1 1287 0
 649 0012 0B4A     		ldr	r2, .L68+4
 650 0014 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 651 0016 D2B2     		uxtb	r2, r2
 652 0018 9342     		cmp	r3, r2
 653 001a 04D9     		bls	.L66
1288:.\Generated_Source\PSoC5/UART_1.c ****         {
1289:.\Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_txBufferWrite - UART_1_txBufferRead);
 654              		.loc 1 1289 0
 655 001c 084A     		ldr	r2, .L68+4
 656 001e 5078     		ldrb	r0, [r2, #1]	@ zero_extendqisi2
 657 0020 181A     		subs	r0, r3, r0
 658 0022 C0B2     		uxtb	r0, r0
 659              	.LVL44:
 660 0024 06E0     		b	.L65
 661              	.LVL45:
 662              	.L66:
1290:.\Generated_Source\PSoC5/UART_1.c ****         }
1291:.\Generated_Source\PSoC5/UART_1.c ****         else
1292:.\Generated_Source\PSoC5/UART_1.c ****         {
1293:.\Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_TX_BUFFER_SIZE - UART_1_txBufferRead) +
 663              		.loc 1 1293 0
 664 0026 064A     		ldr	r2, .L68+4
 665 0028 5078     		ldrb	r0, [r2, #1]	@ zero_extendqisi2
 666 002a 181A     		subs	r0, r3, r0
 667 002c 0138     		subs	r0, r0, #1
 668 002e C0B2     		uxtb	r0, r0
 669              	.LVL46:
 670 0030 00E0     		b	.L65
 671              	.LVL47:
 672              	.L67:
1285:.\Generated_Source\PSoC5/UART_1.c ****         }
 673              		.loc 1 1285 0
 674 0032 0020     		movs	r0, #0
 675              	.L65:
 676              	.LVL48:
1294:.\Generated_Source\PSoC5/UART_1.c ****                     UART_1_txBufferWrite;
1295:.\Generated_Source\PSoC5/UART_1.c ****         }
1296:.\Generated_Source\PSoC5/UART_1.c **** 
1297:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableTxInt();
 677              		.loc 1 1297 0
 678 0034 0222     		movs	r2, #2
 679 0036 034B     		ldr	r3, .L68+8
 680 0038 1A60     		str	r2, [r3]
1298:.\Generated_Source\PSoC5/UART_1.c **** 
1299:.\Generated_Source\PSoC5/UART_1.c ****     #else
1300:.\Generated_Source\PSoC5/UART_1.c **** 
1301:.\Generated_Source\PSoC5/UART_1.c ****         size = UART_1_TXSTATUS_REG;
1302:.\Generated_Source\PSoC5/UART_1.c **** 
1303:.\Generated_Source\PSoC5/UART_1.c ****         /* Is the fifo is full. */
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 36


1304:.\Generated_Source\PSoC5/UART_1.c ****         if((size & UART_1_TX_STS_FIFO_FULL) != 0u)
1305:.\Generated_Source\PSoC5/UART_1.c ****         {
1306:.\Generated_Source\PSoC5/UART_1.c ****             size = UART_1_FIFO_LENGTH;
1307:.\Generated_Source\PSoC5/UART_1.c ****         }
1308:.\Generated_Source\PSoC5/UART_1.c ****         else if((size & UART_1_TX_STS_FIFO_EMPTY) != 0u)
1309:.\Generated_Source\PSoC5/UART_1.c ****         {
1310:.\Generated_Source\PSoC5/UART_1.c ****             size = 0u;
1311:.\Generated_Source\PSoC5/UART_1.c ****         }
1312:.\Generated_Source\PSoC5/UART_1.c ****         else
1313:.\Generated_Source\PSoC5/UART_1.c ****         {
1314:.\Generated_Source\PSoC5/UART_1.c ****             /* We only know there is data in the fifo. */
1315:.\Generated_Source\PSoC5/UART_1.c ****             size = 1u;
1316:.\Generated_Source\PSoC5/UART_1.c ****         }
1317:.\Generated_Source\PSoC5/UART_1.c **** 
1318:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
1319:.\Generated_Source\PSoC5/UART_1.c **** 
1320:.\Generated_Source\PSoC5/UART_1.c ****     return(size);
1321:.\Generated_Source\PSoC5/UART_1.c ****     }
 681              		.loc 1 1321 0
 682 003a 7047     		bx	lr
 683              	.L69:
 684              		.align	2
 685              	.L68:
 686 003c 80E100E0 		.word	-536813184
 687 0040 00000000 		.word	.LANCHOR0
 688 0044 00E100E0 		.word	-536813312
 689              		.cfi_endproc
 690              	.LFE13:
 691              		.size	UART_1_GetTxBufferSize, .-UART_1_GetTxBufferSize
 692              		.section	.text.UART_1_ClearTxBuffer,"ax",%progbits
 693              		.align	2
 694              		.global	UART_1_ClearTxBuffer
 695              		.thumb
 696              		.thumb_func
 697              		.type	UART_1_ClearTxBuffer, %function
 698              	UART_1_ClearTxBuffer:
 699              	.LFB14:
1322:.\Generated_Source\PSoC5/UART_1.c **** 
1323:.\Generated_Source\PSoC5/UART_1.c **** 
1324:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1325:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ClearTxBuffer
1326:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1327:.\Generated_Source\PSoC5/UART_1.c ****     *
1328:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
1329:.\Generated_Source\PSoC5/UART_1.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:.\Generated_Source\PSoC5/UART_1.c ****     *
1331:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1332:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
1333:.\Generated_Source\PSoC5/UART_1.c ****     *
1334:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
1335:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
1336:.\Generated_Source\PSoC5/UART_1.c ****     *
1337:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1338:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - cleared to zero.
1339:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - cleared to zero.
1340:.\Generated_Source\PSoC5/UART_1.c ****     *
1341:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 37


1342:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
1343:.\Generated_Source\PSoC5/UART_1.c ****     *
1344:.\Generated_Source\PSoC5/UART_1.c ****     * Theory:
1345:.\Generated_Source\PSoC5/UART_1.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:.\Generated_Source\PSoC5/UART_1.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:.\Generated_Source\PSoC5/UART_1.c ****     *  remained in the RAM.
1348:.\Generated_Source\PSoC5/UART_1.c ****     *
1349:.\Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
1350:.\Generated_Source\PSoC5/UART_1.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:.\Generated_Source\PSoC5/UART_1.c ****     *  transmitting finishes transmitting.
1352:.\Generated_Source\PSoC5/UART_1.c ****     *
1353:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1354:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_ClearTxBuffer(void) 
1355:.\Generated_Source\PSoC5/UART_1.c ****     {
 700              		.loc 1 1355 0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 0
 703              		@ frame_needed = 0, uses_anonymous_args = 0
 704 0000 08B5     		push	{r3, lr}
 705              		.cfi_def_cfa_offset 8
 706              		.cfi_offset 3, -8
 707              		.cfi_offset 14, -4
1356:.\Generated_Source\PSoC5/UART_1.c ****         uint8 enableInterrupts;
1357:.\Generated_Source\PSoC5/UART_1.c **** 
1358:.\Generated_Source\PSoC5/UART_1.c ****         enableInterrupts = CyEnterCriticalSection();
 708              		.loc 1 1358 0
 709 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 710              	.LVL49:
1359:.\Generated_Source\PSoC5/UART_1.c ****         /* Clear the HW FIFO */
1360:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_TXDATA_AUX_CTL_REG |= (uint8)  UART_1_TX_FIFO_CLR;
 711              		.loc 1 1360 0
 712 0006 0A4B     		ldr	r3, .L72
 713 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 714 000a 42F00102 		orr	r2, r2, #1
 715 000e 1A70     		strb	r2, [r3]
1361:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_TXDATA_AUX_CTL_REG &= (uint8) ~UART_1_TX_FIFO_CLR;
 716              		.loc 1 1361 0
 717 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 718 0012 02F0FE02 		and	r2, r2, #254
 719 0016 1A70     		strb	r2, [r3]
1362:.\Generated_Source\PSoC5/UART_1.c ****         CyExitCriticalSection(enableInterrupts);
 720              		.loc 1 1362 0
 721 0018 FFF7FEFF 		bl	CyExitCriticalSection
 722              	.LVL50:
1363:.\Generated_Source\PSoC5/UART_1.c **** 
1364:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1365:.\Generated_Source\PSoC5/UART_1.c **** 
1366:.\Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt. */
1367:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableTxInt();
 723              		.loc 1 1367 0
 724 001c 0223     		movs	r3, #2
 725 001e 054A     		ldr	r2, .L72+4
 726 0020 1360     		str	r3, [r2]
1368:.\Generated_Source\PSoC5/UART_1.c **** 
1369:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_txBufferRead = 0u;
 727              		.loc 1 1369 0
 728 0022 054A     		ldr	r2, .L72+8
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 38


 729 0024 0021     		movs	r1, #0
 730 0026 5170     		strb	r1, [r2, #1]
1370:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_txBufferWrite = 0u;
 731              		.loc 1 1370 0
 732 0028 9170     		strb	r1, [r2, #2]
1371:.\Generated_Source\PSoC5/UART_1.c **** 
1372:.\Generated_Source\PSoC5/UART_1.c ****         /* Enable Tx interrupt. */
1373:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableTxInt();
 733              		.loc 1 1373 0
 734 002a 044A     		ldr	r2, .L72+12
 735 002c 1360     		str	r3, [r2]
 736 002e 08BD     		pop	{r3, pc}
 737              	.L73:
 738              		.align	2
 739              	.L72:
 740 0030 97650040 		.word	1073767831
 741 0034 80E100E0 		.word	-536813184
 742 0038 00000000 		.word	.LANCHOR0
 743 003c 00E100E0 		.word	-536813312
 744              		.cfi_endproc
 745              	.LFE14:
 746              		.size	UART_1_ClearTxBuffer, .-UART_1_ClearTxBuffer
 747              		.section	.text.UART_1_SendBreak,"ax",%progbits
 748              		.align	2
 749              		.global	UART_1_SendBreak
 750              		.thumb
 751              		.thumb_func
 752              		.type	UART_1_SendBreak, %function
 753              	UART_1_SendBreak:
 754              	.LFB15:
1374:.\Generated_Source\PSoC5/UART_1.c **** 
1375:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
1376:.\Generated_Source\PSoC5/UART_1.c ****     }
1377:.\Generated_Source\PSoC5/UART_1.c **** 
1378:.\Generated_Source\PSoC5/UART_1.c **** 
1379:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1380:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SendBreak
1381:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1382:.\Generated_Source\PSoC5/UART_1.c ****     *
1383:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
1384:.\Generated_Source\PSoC5/UART_1.c ****     *  Transmits a break signal on the bus.
1385:.\Generated_Source\PSoC5/UART_1.c ****     *
1386:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1387:.\Generated_Source\PSoC5/UART_1.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:.\Generated_Source\PSoC5/UART_1.c ****     *   UART_1_SEND_BREAK - Initialize registers for break, send the Break
1389:.\Generated_Source\PSoC5/UART_1.c ****     *       signal and return immediately.
1390:.\Generated_Source\PSoC5/UART_1.c ****     *   UART_1_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:.\Generated_Source\PSoC5/UART_1.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:.\Generated_Source\PSoC5/UART_1.c ****     *   UART_1_REINIT - Reinitialize registers to normal transmission mode
1393:.\Generated_Source\PSoC5/UART_1.c ****     *       then return.
1394:.\Generated_Source\PSoC5/UART_1.c ****     *   UART_1_SEND_WAIT_REINIT - Performs both options: 
1395:.\Generated_Source\PSoC5/UART_1.c ****     *      UART_1_SEND_BREAK and UART_1_WAIT_FOR_COMPLETE_REINIT.
1396:.\Generated_Source\PSoC5/UART_1.c ****     *      This option is recommended for most cases.
1397:.\Generated_Source\PSoC5/UART_1.c ****     *
1398:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
1399:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
1400:.\Generated_Source\PSoC5/UART_1.c ****     *
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 39


1401:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1402:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1403:.\Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1404:.\Generated_Source\PSoC5/UART_1.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:.\Generated_Source\PSoC5/UART_1.c ****     *
1406:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1407:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
1408:.\Generated_Source\PSoC5/UART_1.c ****     *
1409:.\Generated_Source\PSoC5/UART_1.c ****     * Theory:
1410:.\Generated_Source\PSoC5/UART_1.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:.\Generated_Source\PSoC5/UART_1.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:.\Generated_Source\PSoC5/UART_1.c ****     *  operation.
1413:.\Generated_Source\PSoC5/UART_1.c ****     *  There are 3 variants for this API usage:
1414:.\Generated_Source\PSoC5/UART_1.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:.\Generated_Source\PSoC5/UART_1.c ****     *     configuration returning. Function will block CPU until transmission
1416:.\Generated_Source\PSoC5/UART_1.c ****     *     complete.
1417:.\Generated_Source\PSoC5/UART_1.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:.\Generated_Source\PSoC5/UART_1.c ****     *     operation
1419:.\Generated_Source\PSoC5/UART_1.c ****     *     Example for this case:
1420:.\Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:.\Generated_Source\PSoC5/UART_1.c ****     *         Add your code here to use CPU time
1422:.\Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(1);     - complete Break operation
1423:.\Generated_Source\PSoC5/UART_1.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:.\Generated_Source\PSoC5/UART_1.c ****     *     complete break operation.
1425:.\Generated_Source\PSoC5/UART_1.c ****     *     Example for this case:
1426:.\Generated_Source\PSoC5/UART_1.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:.\Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:.\Generated_Source\PSoC5/UART_1.c ****     *         Add your code here to use CPU time
1429:.\Generated_Source\PSoC5/UART_1.c ****     *     When interrupt appear with UART_1_TX_STS_COMPLETE status:
1430:.\Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(2);     - complete Break operation
1431:.\Generated_Source\PSoC5/UART_1.c ****     *
1432:.\Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
1433:.\Generated_Source\PSoC5/UART_1.c ****     *  The UART_1_SendBreak() function initializes registers to send a
1434:.\Generated_Source\PSoC5/UART_1.c ****     *  break signal.
1435:.\Generated_Source\PSoC5/UART_1.c ****     *  Break signal length depends on the break signal bits configuration.
1436:.\Generated_Source\PSoC5/UART_1.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:.\Generated_Source\PSoC5/UART_1.c ****     *  communication can continue.
1438:.\Generated_Source\PSoC5/UART_1.c ****     *
1439:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1440:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_SendBreak(uint8 retMode) 
1441:.\Generated_Source\PSoC5/UART_1.c ****     {
 755              		.loc 1 1441 0
 756              		.cfi_startproc
 757              		@ args = 0, pretend = 0, frame = 0
 758              		@ frame_needed = 0, uses_anonymous_args = 0
 759              		@ link register save eliminated.
 760              	.LVL51:
1442:.\Generated_Source\PSoC5/UART_1.c **** 
1443:.\Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function*/
1444:.\Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 761              		.loc 1 1444 0
 762 0000 124B     		ldr	r3, .L81
 763 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 764 0004 0BB3     		cbz	r3, .L74
 765              	.LBB2:
1445:.\Generated_Source\PSoC5/UART_1.c ****         {
1446:.\Generated_Source\PSoC5/UART_1.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 40


1447:.\Generated_Source\PSoC5/UART_1.c ****             /* When that is done then reset the counter value back */
1448:.\Generated_Source\PSoC5/UART_1.c ****             uint8 tmpStat;
1449:.\Generated_Source\PSoC5/UART_1.c **** 
1450:.\Generated_Source\PSoC5/UART_1.c ****         #if(UART_1_HD_ENABLED) /* Half Duplex mode*/
1451:.\Generated_Source\PSoC5/UART_1.c **** 
1452:.\Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_SEND_BREAK) ||
1453:.\Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT ) )
1454:.\Generated_Source\PSoC5/UART_1.c ****             {
1455:.\Generated_Source\PSoC5/UART_1.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
1457:.\Generated_Source\PSoC5/UART_1.c ****                                                       UART_1_CTRL_HD_SEND_BREAK);
1458:.\Generated_Source\PSoC5/UART_1.c ****                 /* Send zeros */
1459:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXDATA_REG = 0u;
1460:.\Generated_Source\PSoC5/UART_1.c **** 
1461:.\Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit starts */
1462:.\Generated_Source\PSoC5/UART_1.c ****                 {
1463:.\Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
1464:.\Generated_Source\PSoC5/UART_1.c ****                 }
1465:.\Generated_Source\PSoC5/UART_1.c ****                 while((tmpStat & UART_1_TX_STS_FIFO_EMPTY) != 0u);
1466:.\Generated_Source\PSoC5/UART_1.c ****             }
1467:.\Generated_Source\PSoC5/UART_1.c **** 
1468:.\Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
1469:.\Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1470:.\Generated_Source\PSoC5/UART_1.c ****             {
1471:.\Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit complete */
1472:.\Generated_Source\PSoC5/UART_1.c ****                 {
1473:.\Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
1474:.\Generated_Source\PSoC5/UART_1.c ****                 }
1475:.\Generated_Source\PSoC5/UART_1.c ****                 while(((uint8)~tmpStat & UART_1_TX_STS_COMPLETE) != 0u);
1476:.\Generated_Source\PSoC5/UART_1.c ****             }
1477:.\Generated_Source\PSoC5/UART_1.c **** 
1478:.\Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
1479:.\Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_REINIT) ||
1480:.\Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1481:.\Generated_Source\PSoC5/UART_1.c ****             {
1482:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
1483:.\Generated_Source\PSoC5/UART_1.c ****                                               (uint8)~UART_1_CTRL_HD_SEND_BREAK);
1484:.\Generated_Source\PSoC5/UART_1.c ****             }
1485:.\Generated_Source\PSoC5/UART_1.c **** 
1486:.\Generated_Source\PSoC5/UART_1.c ****         #else /* UART_1_HD_ENABLED Full Duplex mode */
1487:.\Generated_Source\PSoC5/UART_1.c **** 
1488:.\Generated_Source\PSoC5/UART_1.c ****             static uint8 txPeriod;
1489:.\Generated_Source\PSoC5/UART_1.c **** 
1490:.\Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_SEND_BREAK) ||
 766              		.loc 1 1490 0
 767 0006 08B1     		cbz	r0, .L76
 768              		.loc 1 1490 0 is_stmt 0 discriminator 1
 769 0008 0328     		cmp	r0, #3
 770 000a 0DD1     		bne	.L77
 771              	.L76:
1491:.\Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1492:.\Generated_Source\PSoC5/UART_1.c ****             {
1493:.\Generated_Source\PSoC5/UART_1.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:.\Generated_Source\PSoC5/UART_1.c ****                 #if( (UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB) || \
1495:.\Generated_Source\PSoC5/UART_1.c ****                                     (UART_1_PARITY_TYPE_SW != 0u) )
1496:.\Generated_Source\PSoC5/UART_1.c ****                     UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
1497:.\Generated_Source\PSoC5/UART_1.c ****                                                           UART_1_CTRL_HD_SEND_BREAK);
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 41


1498:.\Generated_Source\PSoC5/UART_1.c ****                 #endif /* End UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB  */
1499:.\Generated_Source\PSoC5/UART_1.c **** 
1500:.\Generated_Source\PSoC5/UART_1.c ****                 #if(UART_1_TXCLKGEN_DP)
1501:.\Generated_Source\PSoC5/UART_1.c ****                     txPeriod = UART_1_TXBITCLKTX_COMPLETE_REG;
 772              		.loc 1 1501 0 is_stmt 1
 773 000c 104B     		ldr	r3, .L81+4
 774 000e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 775 0010 0E4A     		ldr	r2, .L81
 776 0012 D170     		strb	r1, [r2, #3]
1502:.\Generated_Source\PSoC5/UART_1.c ****                     UART_1_TXBITCLKTX_COMPLETE_REG = UART_1_TXBITCTR_BREAKBITS;
 777              		.loc 1 1502 0
 778 0014 6722     		movs	r2, #103
 779 0016 1A70     		strb	r2, [r3]
1503:.\Generated_Source\PSoC5/UART_1.c ****                 #else
1504:.\Generated_Source\PSoC5/UART_1.c ****                     txPeriod = UART_1_TXBITCTR_PERIOD_REG;
1505:.\Generated_Source\PSoC5/UART_1.c ****                     UART_1_TXBITCTR_PERIOD_REG = UART_1_TXBITCTR_BREAKBITS8X;
1506:.\Generated_Source\PSoC5/UART_1.c ****                 #endif /* End UART_1_TXCLKGEN_DP */
1507:.\Generated_Source\PSoC5/UART_1.c **** 
1508:.\Generated_Source\PSoC5/UART_1.c ****                 /* Send zeros */
1509:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXDATA_REG = 0u;
 780              		.loc 1 1509 0
 781 0018 0022     		movs	r2, #0
 782 001a 1133     		adds	r3, r3, #17
 783 001c 1A70     		strb	r2, [r3]
 784              	.L78:
1510:.\Generated_Source\PSoC5/UART_1.c **** 
1511:.\Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit starts */
1512:.\Generated_Source\PSoC5/UART_1.c ****                 {
1513:.\Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
 785              		.loc 1 1513 0 discriminator 1
 786 001e 0D4B     		ldr	r3, .L81+8
 787 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 788              	.LVL52:
1514:.\Generated_Source\PSoC5/UART_1.c ****                 }
1515:.\Generated_Source\PSoC5/UART_1.c ****                 while((tmpStat & UART_1_TX_STS_FIFO_EMPTY) != 0u);
 789              		.loc 1 1515 0 discriminator 1
 790 0022 13F0020F 		tst	r3, #2
 791 0026 FAD1     		bne	.L78
 792              	.LVL53:
 793              	.L77:
1516:.\Generated_Source\PSoC5/UART_1.c ****             }
1517:.\Generated_Source\PSoC5/UART_1.c **** 
1518:.\Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
 794              		.loc 1 1518 0
 795 0028 0128     		cmp	r0, #1
 796 002a 01D0     		beq	.L79
 797              		.loc 1 1518 0 is_stmt 0 discriminator 1
 798 002c 0328     		cmp	r0, #3
 799 002e 04D1     		bne	.L80
 800              	.L79:
1519:.\Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1520:.\Generated_Source\PSoC5/UART_1.c ****             {
1521:.\Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit complete */
1522:.\Generated_Source\PSoC5/UART_1.c ****                 {
1523:.\Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
 801              		.loc 1 1523 0 is_stmt 1 discriminator 1
 802 0030 084B     		ldr	r3, .L81+8
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 42


 803 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 804              	.LVL54:
1524:.\Generated_Source\PSoC5/UART_1.c ****                 }
1525:.\Generated_Source\PSoC5/UART_1.c ****                 while(((uint8)~tmpStat & UART_1_TX_STS_COMPLETE) != 0u);
 805              		.loc 1 1525 0 discriminator 1
 806 0034 13F0010F 		tst	r3, #1
 807 0038 FAD0     		beq	.L79
 808              	.LVL55:
 809              	.L80:
1526:.\Generated_Source\PSoC5/UART_1.c ****             }
1527:.\Generated_Source\PSoC5/UART_1.c **** 
1528:.\Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
1529:.\Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_REINIT) ||
 810              		.loc 1 1529 0
 811 003a 0138     		subs	r0, r0, #1
 812              	.LVL56:
 813 003c C0B2     		uxtb	r0, r0
1528:.\Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_REINIT) ||
 814              		.loc 1 1528 0
 815 003e 0228     		cmp	r0, #2
 816 0040 03D8     		bhi	.L74
1530:.\Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1531:.\Generated_Source\PSoC5/UART_1.c ****             {
1532:.\Generated_Source\PSoC5/UART_1.c **** 
1533:.\Generated_Source\PSoC5/UART_1.c ****             #if(UART_1_TXCLKGEN_DP)
1534:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXBITCLKTX_COMPLETE_REG = txPeriod;
 817              		.loc 1 1534 0
 818 0042 024B     		ldr	r3, .L81
 819 0044 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 820 0046 024B     		ldr	r3, .L81+4
 821 0048 1A70     		strb	r2, [r3]
 822              	.L74:
 823 004a 7047     		bx	lr
 824              	.L82:
 825              		.align	2
 826              	.L81:
 827 004c 00000000 		.word	.LANCHOR0
 828 0050 36650040 		.word	1073767734
 829 0054 67650040 		.word	1073767783
 830              	.LBE2:
 831              		.cfi_endproc
 832              	.LFE15:
 833              		.size	UART_1_SendBreak, .-UART_1_SendBreak
 834              		.section	.text.UART_1_SetTxAddressMode,"ax",%progbits
 835              		.align	2
 836              		.global	UART_1_SetTxAddressMode
 837              		.thumb
 838              		.thumb_func
 839              		.type	UART_1_SetTxAddressMode, %function
 840              	UART_1_SetTxAddressMode:
 841              	.LFB16:
1535:.\Generated_Source\PSoC5/UART_1.c ****             #else
1536:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXBITCTR_PERIOD_REG = txPeriod;
1537:.\Generated_Source\PSoC5/UART_1.c ****             #endif /* End UART_1_TXCLKGEN_DP */
1538:.\Generated_Source\PSoC5/UART_1.c **** 
1539:.\Generated_Source\PSoC5/UART_1.c ****             #if( (UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB) || \
1540:.\Generated_Source\PSoC5/UART_1.c ****                  (UART_1_PARITY_TYPE_SW != 0u) )
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 43


1541:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
1542:.\Generated_Source\PSoC5/UART_1.c ****                                                       (uint8) ~UART_1_CTRL_HD_SEND_BREAK);
1543:.\Generated_Source\PSoC5/UART_1.c ****             #endif /* End UART_1_PARITY_TYPE != NONE */
1544:.\Generated_Source\PSoC5/UART_1.c ****             }
1545:.\Generated_Source\PSoC5/UART_1.c ****         #endif    /* End UART_1_HD_ENABLED */
1546:.\Generated_Source\PSoC5/UART_1.c ****         }
1547:.\Generated_Source\PSoC5/UART_1.c ****     }
1548:.\Generated_Source\PSoC5/UART_1.c **** 
1549:.\Generated_Source\PSoC5/UART_1.c **** 
1550:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1551:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetTxAddressMode
1552:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1553:.\Generated_Source\PSoC5/UART_1.c ****     *
1554:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
1555:.\Generated_Source\PSoC5/UART_1.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:.\Generated_Source\PSoC5/UART_1.c ****     *
1557:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1558:.\Generated_Source\PSoC5/UART_1.c ****     *  addressMode: 
1559:.\Generated_Source\PSoC5/UART_1.c ****     *       UART_1_SET_SPACE - Configure the transmitter to send the next
1560:.\Generated_Source\PSoC5/UART_1.c ****     *                                    byte as a data.
1561:.\Generated_Source\PSoC5/UART_1.c ****     *       UART_1_SET_MARK  - Configure the transmitter to send the next
1562:.\Generated_Source\PSoC5/UART_1.c ****     *                                    byte as an address.
1563:.\Generated_Source\PSoC5/UART_1.c ****     *
1564:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
1565:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
1566:.\Generated_Source\PSoC5/UART_1.c ****     *
1567:.\Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
1568:.\Generated_Source\PSoC5/UART_1.c ****     *  This function sets and clears UART_1_CTRL_MARK bit in the Control
1569:.\Generated_Source\PSoC5/UART_1.c ****     *  register.
1570:.\Generated_Source\PSoC5/UART_1.c ****     *
1571:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1572:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetTxAddressMode(uint8 addressMode) 
1573:.\Generated_Source\PSoC5/UART_1.c ****     {
 842              		.loc 1 1573 0
 843              		.cfi_startproc
 844              		@ args = 0, pretend = 0, frame = 0
 845              		@ frame_needed = 0, uses_anonymous_args = 0
 846              		@ link register save eliminated.
 847              	.LVL57:
 848 0000 7047     		bx	lr
 849              		.cfi_endproc
 850              	.LFE16:
 851              		.size	UART_1_SetTxAddressMode, .-UART_1_SetTxAddressMode
 852              		.global	UART_1_txBufferWrite
 853              		.global	UART_1_txBufferRead
 854              		.comm	UART_1_txBuffer,255,4
 855              		.global	UART_1_initVar
 856 0002 00BF     		.bss
 857              		.set	.LANCHOR0,. + 0
 858              		.type	UART_1_initVar, %object
 859              		.size	UART_1_initVar, 1
 860              	UART_1_initVar:
 861 0000 00       		.space	1
 862              		.type	UART_1_txBufferRead, %object
 863              		.size	UART_1_txBufferRead, 1
 864              	UART_1_txBufferRead:
 865 0001 00       		.space	1
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 44


 866              		.type	UART_1_txBufferWrite, %object
 867              		.size	UART_1_txBufferWrite, 1
 868              	UART_1_txBufferWrite:
 869 0002 00       		.space	1
 870              		.type	txPeriod.4942, %object
 871              		.size	txPeriod.4942, 1
 872              	txPeriod.4942:
 873 0003 00       		.space	1
 874              		.text
 875              	.Letext0:
 876              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 877              		.file 3 ".\\Generated_Source\\PSoC5\\CyLib.h"
 878              		.file 4 ".\\Generated_Source\\PSoC5\\UART_1_IntClock.h"
 879              		.section	.debug_info,"",%progbits
 880              	.Ldebug_info0:
 881 0000 41050000 		.4byte	0x541
 882 0004 0400     		.2byte	0x4
 883 0006 00000000 		.4byte	.Ldebug_abbrev0
 884 000a 04       		.byte	0x4
 885 000b 01       		.uleb128 0x1
 886 000c BE030000 		.4byte	.LASF58
 887 0010 01       		.byte	0x1
 888 0011 F3000000 		.4byte	.LASF59
 889 0015 1A030000 		.4byte	.LASF60
 890 0019 00000000 		.4byte	.Ldebug_ranges0+0
 891 001d 00000000 		.4byte	0
 892 0021 00000000 		.4byte	.Ldebug_line0
 893 0025 02       		.uleb128 0x2
 894 0026 01       		.byte	0x1
 895 0027 06       		.byte	0x6
 896 0028 A0000000 		.4byte	.LASF0
 897 002c 02       		.uleb128 0x2
 898 002d 01       		.byte	0x1
 899 002e 08       		.byte	0x8
 900 002f 8C020000 		.4byte	.LASF1
 901 0033 02       		.uleb128 0x2
 902 0034 02       		.byte	0x2
 903 0035 05       		.byte	0x5
 904 0036 9A020000 		.4byte	.LASF2
 905 003a 02       		.uleb128 0x2
 906 003b 02       		.byte	0x2
 907 003c 07       		.byte	0x7
 908 003d 9C010000 		.4byte	.LASF3
 909 0041 02       		.uleb128 0x2
 910 0042 04       		.byte	0x4
 911 0043 05       		.byte	0x5
 912 0044 C4000000 		.4byte	.LASF4
 913 0048 02       		.uleb128 0x2
 914 0049 04       		.byte	0x4
 915 004a 07       		.byte	0x7
 916 004b 5D010000 		.4byte	.LASF5
 917 004f 02       		.uleb128 0x2
 918 0050 08       		.byte	0x8
 919 0051 05       		.byte	0x5
 920 0052 92000000 		.4byte	.LASF6
 921 0056 02       		.uleb128 0x2
 922 0057 08       		.byte	0x8
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 45


 923 0058 07       		.byte	0x7
 924 0059 64000000 		.4byte	.LASF7
 925 005d 03       		.uleb128 0x3
 926 005e 04       		.byte	0x4
 927 005f 05       		.byte	0x5
 928 0060 696E7400 		.ascii	"int\000"
 929 0064 02       		.uleb128 0x2
 930 0065 04       		.byte	0x4
 931 0066 07       		.byte	0x7
 932 0067 3C010000 		.4byte	.LASF8
 933 006b 04       		.uleb128 0x4
 934 006c DA000000 		.4byte	.LASF9
 935 0070 02       		.byte	0x2
 936 0071 3801     		.2byte	0x138
 937 0073 2C000000 		.4byte	0x2c
 938 0077 04       		.uleb128 0x4
 939 0078 00000000 		.4byte	.LASF10
 940 007c 02       		.byte	0x2
 941 007d 3901     		.2byte	0x139
 942 007f 3A000000 		.4byte	0x3a
 943 0083 04       		.uleb128 0x4
 944 0084 15010000 		.4byte	.LASF11
 945 0088 02       		.byte	0x2
 946 0089 3A01     		.2byte	0x13a
 947 008b 48000000 		.4byte	0x48
 948 008f 02       		.uleb128 0x2
 949 0090 04       		.byte	0x4
 950 0091 04       		.byte	0x4
 951 0092 70020000 		.4byte	.LASF12
 952 0096 02       		.uleb128 0x2
 953 0097 08       		.byte	0x8
 954 0098 04       		.byte	0x4
 955 0099 E0000000 		.4byte	.LASF13
 956 009d 04       		.uleb128 0x4
 957 009e 14030000 		.4byte	.LASF14
 958 00a2 02       		.byte	0x2
 959 00a3 4901     		.2byte	0x149
 960 00a5 A9000000 		.4byte	0xa9
 961 00a9 02       		.uleb128 0x2
 962 00aa 01       		.byte	0x1
 963 00ab 08       		.byte	0x8
 964 00ac 02030000 		.4byte	.LASF15
 965 00b0 04       		.uleb128 0x4
 966 00b1 87020000 		.4byte	.LASF16
 967 00b5 02       		.byte	0x2
 968 00b6 E201     		.2byte	0x1e2
 969 00b8 BC000000 		.4byte	0xbc
 970 00bc 05       		.uleb128 0x5
 971 00bd 6B000000 		.4byte	0x6b
 972 00c1 04       		.uleb128 0x4
 973 00c2 1B020000 		.4byte	.LASF17
 974 00c6 02       		.byte	0x2
 975 00c7 E401     		.2byte	0x1e4
 976 00c9 CD000000 		.4byte	0xcd
 977 00cd 05       		.uleb128 0x5
 978 00ce 83000000 		.4byte	0x83
 979 00d2 04       		.uleb128 0x4
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 46


 980 00d3 07030000 		.4byte	.LASF18
 981 00d7 02       		.byte	0x2
 982 00d8 F401     		.2byte	0x1f4
 983 00da DE000000 		.4byte	0xde
 984 00de 06       		.uleb128 0x6
 985 00df 04       		.byte	0x4
 986 00e0 E4000000 		.4byte	0xe4
 987 00e4 07       		.uleb128 0x7
 988 00e5 02       		.uleb128 0x2
 989 00e6 04       		.byte	0x4
 990 00e7 07       		.byte	0x7
 991 00e8 3C020000 		.4byte	.LASF19
 992 00ec 08       		.uleb128 0x8
 993 00ed 66030000 		.4byte	.LASF20
 994 00f1 01       		.byte	0x1
 995 00f2 6A       		.byte	0x6a
 996 00f3 00000000 		.4byte	.LFB1
 997 00f7 30000000 		.4byte	.LFE1-.LFB1
 998 00fb 01       		.uleb128 0x1
 999 00fc 9C       		.byte	0x9c
 1000 00fd 29010000 		.4byte	0x129
 1001 0101 09       		.uleb128 0x9
 1002 0102 0A000000 		.4byte	.LVL0
 1003 0106 EA040000 		.4byte	0x4ea
 1004 010a 14010000 		.4byte	0x114
 1005 010e 0A       		.uleb128 0xa
 1006 010f 01       		.uleb128 0x1
 1007 0110 50       		.byte	0x50
 1008 0111 01       		.uleb128 0x1
 1009 0112 31       		.byte	0x31
 1010 0113 00       		.byte	0
 1011 0114 0B       		.uleb128 0xb
 1012 0115 12000000 		.4byte	.LVL1
 1013 0119 04050000 		.4byte	0x504
 1014 011d 0A       		.uleb128 0xa
 1015 011e 01       		.uleb128 0x1
 1016 011f 51       		.byte	0x51
 1017 0120 01       		.uleb128 0x1
 1018 0121 37       		.byte	0x37
 1019 0122 0A       		.uleb128 0xa
 1020 0123 01       		.uleb128 0x1
 1021 0124 50       		.byte	0x50
 1022 0125 01       		.uleb128 0x1
 1023 0126 31       		.byte	0x31
 1024 0127 00       		.byte	0
 1025 0128 00       		.byte	0
 1026 0129 08       		.uleb128 0x8
 1027 012a BE010000 		.4byte	.LASF21
 1028 012e 01       		.byte	0x1
 1029 012f B7       		.byte	0xb7
 1030 0130 00000000 		.4byte	.LFB2
 1031 0134 34000000 		.4byte	.LFE2-.LFB2
 1032 0138 01       		.uleb128 0x1
 1033 0139 9C       		.byte	0x9c
 1034 013a 70010000 		.4byte	0x170
 1035 013e 0C       		.uleb128 0xc
 1036 013f 72030000 		.4byte	.LASF24
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 47


 1037 0143 01       		.byte	0x1
 1038 0144 B9       		.byte	0xb9
 1039 0145 6B000000 		.4byte	0x6b
 1040 0149 00000000 		.4byte	.LLST0
 1041 014d 0D       		.uleb128 0xd
 1042 014e 06000000 		.4byte	.LVL2
 1043 0152 1A050000 		.4byte	0x51a
 1044 0156 0D       		.uleb128 0xd
 1045 0157 22000000 		.4byte	.LVL4
 1046 015b 25050000 		.4byte	0x525
 1047 015f 0B       		.uleb128 0xb
 1048 0160 28000000 		.4byte	.LVL5
 1049 0164 2C050000 		.4byte	0x52c
 1050 0168 0A       		.uleb128 0xa
 1051 0169 01       		.uleb128 0x1
 1052 016a 50       		.byte	0x50
 1053 016b 02       		.uleb128 0x2
 1054 016c 74       		.byte	0x74
 1055 016d 00       		.sleb128 0
 1056 016e 00       		.byte	0
 1057 016f 00       		.byte	0
 1058 0170 08       		.uleb128 0x8
 1059 0171 CD000000 		.4byte	.LASF22
 1060 0175 01       		.byte	0x1
 1061 0176 4C       		.byte	0x4c
 1062 0177 00000000 		.4byte	.LFB0
 1063 017b 1C000000 		.4byte	.LFE0-.LFB0
 1064 017f 01       		.uleb128 0x1
 1065 0180 9C       		.byte	0x9c
 1066 0181 98010000 		.4byte	0x198
 1067 0185 0D       		.uleb128 0xd
 1068 0186 0C000000 		.4byte	.LVL7
 1069 018a EC000000 		.4byte	0xec
 1070 018e 0D       		.uleb128 0xd
 1071 018f 16000000 		.4byte	.LVL8
 1072 0193 29010000 		.4byte	0x129
 1073 0197 00       		.byte	0
 1074 0198 08       		.uleb128 0x8
 1075 0199 0F020000 		.4byte	.LASF23
 1076 019d 01       		.byte	0x1
 1077 019e F0       		.byte	0xf0
 1078 019f 00000000 		.4byte	.LFB3
 1079 01a3 2C000000 		.4byte	.LFE3-.LFB3
 1080 01a7 01       		.uleb128 0x1
 1081 01a8 9C       		.byte	0x9c
 1082 01a9 DF010000 		.4byte	0x1df
 1083 01ad 0C       		.uleb128 0xc
 1084 01ae 72030000 		.4byte	.LASF24
 1085 01b2 01       		.byte	0x1
 1086 01b3 F2       		.byte	0xf2
 1087 01b4 6B000000 		.4byte	0x6b
 1088 01b8 13000000 		.4byte	.LLST1
 1089 01bc 0D       		.uleb128 0xd
 1090 01bd 06000000 		.4byte	.LVL9
 1091 01c1 1A050000 		.4byte	0x51a
 1092 01c5 0D       		.uleb128 0xd
 1093 01c6 0C000000 		.4byte	.LVL11
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 48


 1094 01ca 3D050000 		.4byte	0x53d
 1095 01ce 0B       		.uleb128 0xb
 1096 01cf 22000000 		.4byte	.LVL12
 1097 01d3 2C050000 		.4byte	0x52c
 1098 01d7 0A       		.uleb128 0xa
 1099 01d8 01       		.uleb128 0x1
 1100 01d9 50       		.byte	0x50
 1101 01da 02       		.uleb128 0x2
 1102 01db 74       		.byte	0x74
 1103 01dc 00       		.sleb128 0
 1104 01dd 00       		.byte	0
 1105 01de 00       		.byte	0
 1106 01df 0E       		.uleb128 0xe
 1107 01e0 F4010000 		.4byte	.LASF31
 1108 01e4 01       		.byte	0x1
 1109 01e5 2701     		.2byte	0x127
 1110 01e7 6B000000 		.4byte	0x6b
 1111 01eb 00000000 		.4byte	.LFB4
 1112 01ef 04000000 		.4byte	.LFE4-.LFB4
 1113 01f3 01       		.uleb128 0x1
 1114 01f4 9C       		.byte	0x9c
 1115 01f5 0F       		.uleb128 0xf
 1116 01f6 B8020000 		.4byte	.LASF25
 1117 01fa 01       		.byte	0x1
 1118 01fb 3F01     		.2byte	0x13f
 1119 01fd 00000000 		.4byte	.LFB5
 1120 0201 02000000 		.4byte	.LFE5-.LFB5
 1121 0205 01       		.uleb128 0x1
 1122 0206 9C       		.byte	0x9c
 1123 0207 1A020000 		.4byte	0x21a
 1124 020b 10       		.uleb128 0x10
 1125 020c 1C010000 		.4byte	.LASF27
 1126 0210 01       		.byte	0x1
 1127 0211 3F01     		.2byte	0x13f
 1128 0213 6B000000 		.4byte	0x6b
 1129 0217 01       		.uleb128 0x1
 1130 0218 50       		.byte	0x50
 1131 0219 00       		.byte	0
 1132 021a 0F       		.uleb128 0xf
 1133 021b 45020000 		.4byte	.LASF26
 1134 021f 01       		.byte	0x1
 1135 0220 8C03     		.2byte	0x38c
 1136 0222 00000000 		.4byte	.LFB6
 1137 0226 0C000000 		.4byte	.LFE6-.LFB6
 1138 022a 01       		.uleb128 0x1
 1139 022b 9C       		.byte	0x9c
 1140 022c 3F020000 		.4byte	0x23f
 1141 0230 10       		.uleb128 0x10
 1142 0231 ED010000 		.4byte	.LASF28
 1143 0235 01       		.byte	0x1
 1144 0236 8C03     		.2byte	0x38c
 1145 0238 6B000000 		.4byte	0x6b
 1146 023c 01       		.uleb128 0x1
 1147 023d 50       		.byte	0x50
 1148 023e 00       		.byte	0
 1149 023f 0F       		.uleb128 0xf
 1150 0240 21020000 		.4byte	.LASF29
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 49


 1151 0244 01       		.byte	0x1
 1152 0245 AE03     		.2byte	0x3ae
 1153 0247 00000000 		.4byte	.LFB7
 1154 024b 60000000 		.4byte	.LFE7-.LFB7
 1155 024f 01       		.uleb128 0x1
 1156 0250 9C       		.byte	0x9c
 1157 0251 64020000 		.4byte	0x264
 1158 0255 10       		.uleb128 0x10
 1159 0256 32000000 		.4byte	.LASF30
 1160 025a 01       		.byte	0x1
 1161 025b AE03     		.2byte	0x3ae
 1162 025d 6B000000 		.4byte	0x6b
 1163 0261 01       		.uleb128 0x1
 1164 0262 50       		.byte	0x50
 1165 0263 00       		.byte	0
 1166 0264 0E       		.uleb128 0xe
 1167 0265 49010000 		.4byte	.LASF32
 1168 0269 01       		.byte	0x1
 1169 026a EB03     		.2byte	0x3eb
 1170 026c 6B000000 		.4byte	0x6b
 1171 0270 00000000 		.4byte	.LFB8
 1172 0274 0C000000 		.4byte	.LFE8-.LFB8
 1173 0278 01       		.uleb128 0x1
 1174 0279 9C       		.byte	0x9c
 1175 027a 0F       		.uleb128 0xf
 1176 027b 3D000000 		.4byte	.LASF33
 1177 027f 01       		.byte	0x1
 1178 0280 1104     		.2byte	0x411
 1179 0282 00000000 		.4byte	.LFB9
 1180 0286 70000000 		.4byte	.LFE9-.LFB9
 1181 028a 01       		.uleb128 0x1
 1182 028b 9C       		.byte	0x9c
 1183 028c BD020000 		.4byte	0x2bd
 1184 0290 10       		.uleb128 0x10
 1185 0291 32000000 		.4byte	.LASF30
 1186 0295 01       		.byte	0x1
 1187 0296 1104     		.2byte	0x411
 1188 0298 6B000000 		.4byte	0x6b
 1189 029c 01       		.uleb128 0x1
 1190 029d 50       		.byte	0x50
 1191 029e 11       		.uleb128 0x11
 1192 029f 6F010000 		.4byte	.LASF34
 1193 02a3 01       		.byte	0x1
 1194 02a4 1804     		.2byte	0x418
 1195 02a6 6B000000 		.4byte	0x6b
 1196 02aa 01       		.uleb128 0x1
 1197 02ab 51       		.byte	0x51
 1198 02ac 12       		.uleb128 0x12
 1199 02ad 24010000 		.4byte	.LASF35
 1200 02b1 01       		.byte	0x1
 1201 02b2 1904     		.2byte	0x419
 1202 02b4 6B000000 		.4byte	0x6b
 1203 02b8 26000000 		.4byte	.LLST2
 1204 02bc 00       		.byte	0
 1205 02bd 0F       		.uleb128 0xf
 1206 02be 76020000 		.4byte	.LASF36
 1207 02c2 01       		.byte	0x1
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 50


 1208 02c3 7904     		.2byte	0x479
 1209 02c5 00000000 		.4byte	.LFB10
 1210 02c9 24000000 		.4byte	.LFE10-.LFB10
 1211 02cd 01       		.uleb128 0x1
 1212 02ce 9C       		.byte	0x9c
 1213 02cf FD020000 		.4byte	0x2fd
 1214 02d3 13       		.uleb128 0x13
 1215 02d4 4C000000 		.4byte	.LASF37
 1216 02d8 01       		.byte	0x1
 1217 02d9 7904     		.2byte	0x479
 1218 02db FD020000 		.4byte	0x2fd
 1219 02df 39000000 		.4byte	.LLST3
 1220 02e3 12       		.uleb128 0x12
 1221 02e4 CC010000 		.4byte	.LASF38
 1222 02e8 01       		.byte	0x1
 1223 02e9 7B04     		.2byte	0x47b
 1224 02eb 77000000 		.4byte	0x77
 1225 02ef 7B000000 		.4byte	.LLST4
 1226 02f3 0D       		.uleb128 0xd
 1227 02f4 0E000000 		.4byte	.LVL26
 1228 02f8 7A020000 		.4byte	0x27a
 1229 02fc 00       		.byte	0
 1230 02fd 06       		.uleb128 0x6
 1231 02fe 04       		.byte	0x4
 1232 02ff 03030000 		.4byte	0x303
 1233 0303 14       		.uleb128 0x14
 1234 0304 9D000000 		.4byte	0x9d
 1235 0308 0F       		.uleb128 0xf
 1236 0309 57040000 		.4byte	.LASF39
 1237 030d 01       		.byte	0x1
 1238 030e A704     		.2byte	0x4a7
 1239 0310 00000000 		.4byte	.LFB11
 1240 0314 28000000 		.4byte	.LFE11-.LFB11
 1241 0318 01       		.uleb128 0x1
 1242 0319 9C       		.byte	0x9c
 1243 031a 58030000 		.4byte	0x358
 1244 031e 13       		.uleb128 0x13
 1245 031f 4C000000 		.4byte	.LASF37
 1246 0323 01       		.byte	0x1
 1247 0324 A704     		.2byte	0x4a7
 1248 0326 58030000 		.4byte	0x358
 1249 032a BC000000 		.4byte	.LLST5
 1250 032e 13       		.uleb128 0x13
 1251 032f E3020000 		.4byte	.LASF40
 1252 0333 01       		.byte	0x1
 1253 0334 A704     		.2byte	0x4a7
 1254 0336 6B000000 		.4byte	0x6b
 1255 033a FE000000 		.4byte	.LLST6
 1256 033e 12       		.uleb128 0x12
 1257 033f CC010000 		.4byte	.LASF38
 1258 0343 01       		.byte	0x1
 1259 0344 AA04     		.2byte	0x4aa
 1260 0346 6B000000 		.4byte	0x6b
 1261 034a 38010000 		.4byte	.LLST7
 1262 034e 0D       		.uleb128 0xd
 1263 034f 0E000000 		.4byte	.LVL34
 1264 0353 7A020000 		.4byte	0x27a
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 51


 1265 0357 00       		.byte	0
 1266 0358 06       		.uleb128 0x6
 1267 0359 04       		.byte	0x4
 1268 035a 5E030000 		.4byte	0x35e
 1269 035e 14       		.uleb128 0x14
 1270 035f 6B000000 		.4byte	0x6b
 1271 0363 0F       		.uleb128 0xf
 1272 0364 B5000000 		.4byte	.LASF41
 1273 0368 01       		.byte	0x1
 1274 0369 CE04     		.2byte	0x4ce
 1275 036b 00000000 		.4byte	.LFB12
 1276 036f 20000000 		.4byte	.LFE12-.LFB12
 1277 0373 01       		.uleb128 0x1
 1278 0374 9C       		.byte	0x9c
 1279 0375 B5030000 		.4byte	0x3b5
 1280 0379 13       		.uleb128 0x13
 1281 037a 32000000 		.4byte	.LASF30
 1282 037e 01       		.byte	0x1
 1283 037f CE04     		.2byte	0x4ce
 1284 0381 6B000000 		.4byte	0x6b
 1285 0385 79010000 		.4byte	.LLST8
 1286 0389 0D       		.uleb128 0xd
 1287 038a 0C000000 		.4byte	.LVL41
 1288 038e 7A020000 		.4byte	0x27a
 1289 0392 09       		.uleb128 0x9
 1290 0393 12000000 		.4byte	.LVL42
 1291 0397 7A020000 		.4byte	0x27a
 1292 039b A5030000 		.4byte	0x3a5
 1293 039f 0A       		.uleb128 0xa
 1294 03a0 01       		.uleb128 0x1
 1295 03a1 50       		.byte	0x50
 1296 03a2 01       		.uleb128 0x1
 1297 03a3 3D       		.byte	0x3d
 1298 03a4 00       		.byte	0
 1299 03a5 0B       		.uleb128 0xb
 1300 03a6 18000000 		.4byte	.LVL43
 1301 03aa 7A020000 		.4byte	0x27a
 1302 03ae 0A       		.uleb128 0xa
 1303 03af 01       		.uleb128 0x1
 1304 03b0 50       		.byte	0x50
 1305 03b1 01       		.uleb128 0x1
 1306 03b2 3A       		.byte	0x3a
 1307 03b3 00       		.byte	0
 1308 03b4 00       		.byte	0
 1309 03b5 15       		.uleb128 0x15
 1310 03b6 7B000000 		.4byte	.LASF61
 1311 03ba 01       		.byte	0x1
 1312 03bb F904     		.2byte	0x4f9
 1313 03bd 6B000000 		.4byte	0x6b
 1314 03c1 00000000 		.4byte	.LFB13
 1315 03c5 48000000 		.4byte	.LFE13-.LFB13
 1316 03c9 01       		.uleb128 0x1
 1317 03ca 9C       		.byte	0x9c
 1318 03cb E0030000 		.4byte	0x3e0
 1319 03cf 12       		.uleb128 0x12
 1320 03d0 97010000 		.4byte	.LASF42
 1321 03d4 01       		.byte	0x1
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 52


 1322 03d5 FC04     		.2byte	0x4fc
 1323 03d7 6B000000 		.4byte	0x6b
 1324 03db 9A010000 		.4byte	.LLST9
 1325 03df 00       		.byte	0
 1326 03e0 0F       		.uleb128 0xf
 1327 03e1 07000000 		.4byte	.LASF43
 1328 03e5 01       		.byte	0x1
 1329 03e6 4A05     		.2byte	0x54a
 1330 03e8 00000000 		.4byte	.LFB14
 1331 03ec 40000000 		.4byte	.LFE14-.LFB14
 1332 03f0 01       		.uleb128 0x1
 1333 03f1 9C       		.byte	0x9c
 1334 03f2 19040000 		.4byte	0x419
 1335 03f6 12       		.uleb128 0x12
 1336 03f7 72030000 		.4byte	.LASF24
 1337 03fb 01       		.byte	0x1
 1338 03fc 4C05     		.2byte	0x54c
 1339 03fe 6B000000 		.4byte	0x6b
 1340 0402 C3010000 		.4byte	.LLST10
 1341 0406 0D       		.uleb128 0xd
 1342 0407 06000000 		.4byte	.LVL49
 1343 040b 1A050000 		.4byte	0x51a
 1344 040f 0D       		.uleb128 0xd
 1345 0410 1C000000 		.4byte	.LVL50
 1346 0414 2C050000 		.4byte	0x52c
 1347 0418 00       		.byte	0
 1348 0419 0F       		.uleb128 0xf
 1349 041a 53000000 		.4byte	.LASF44
 1350 041e 01       		.byte	0x1
 1351 041f A005     		.2byte	0x5a0
 1352 0421 00000000 		.4byte	.LFB15
 1353 0425 58000000 		.4byte	.LFE15-.LFB15
 1354 0429 01       		.uleb128 0x1
 1355 042a 9C       		.byte	0x9c
 1356 042b 6C040000 		.4byte	0x46c
 1357 042f 13       		.uleb128 0x13
 1358 0430 34010000 		.4byte	.LASF45
 1359 0434 01       		.byte	0x1
 1360 0435 A005     		.2byte	0x5a0
 1361 0437 6B000000 		.4byte	0x6b
 1362 043b D6010000 		.4byte	.LLST11
 1363 043f 16       		.uleb128 0x16
 1364 0440 06000000 		.4byte	.LBB2
 1365 0444 52000000 		.4byte	.LBE2-.LBB2
 1366 0448 12       		.uleb128 0x12
 1367 0449 34020000 		.4byte	.LASF46
 1368 044d 01       		.byte	0x1
 1369 044e A805     		.2byte	0x5a8
 1370 0450 6B000000 		.4byte	0x6b
 1371 0454 F7010000 		.4byte	.LLST12
 1372 0458 11       		.uleb128 0x11
 1373 0459 AC000000 		.4byte	.LASF47
 1374 045d 01       		.byte	0x1
 1375 045e D005     		.2byte	0x5d0
 1376 0460 6B000000 		.4byte	0x6b
 1377 0464 05       		.uleb128 0x5
 1378 0465 03       		.byte	0x3
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 53


 1379 0466 03000000 		.4byte	txPeriod.4942
 1380 046a 00       		.byte	0
 1381 046b 00       		.byte	0
 1382 046c 0F       		.uleb128 0xf
 1383 046d D5010000 		.4byte	.LASF48
 1384 0471 01       		.byte	0x1
 1385 0472 2406     		.2byte	0x624
 1386 0474 00000000 		.4byte	.LFB16
 1387 0478 02000000 		.4byte	.LFE16-.LFB16
 1388 047c 01       		.uleb128 0x1
 1389 047d 9C       		.byte	0x9c
 1390 047e 91040000 		.4byte	0x491
 1391 0482 10       		.uleb128 0x10
 1392 0483 E7000000 		.4byte	.LASF49
 1393 0487 01       		.byte	0x1
 1394 0488 2406     		.2byte	0x624
 1395 048a 6B000000 		.4byte	0x6b
 1396 048e 01       		.uleb128 0x1
 1397 048f 50       		.byte	0x50
 1398 0490 00       		.byte	0
 1399 0491 17       		.uleb128 0x17
 1400 0492 D4020000 		.4byte	.LASF50
 1401 0496 01       		.byte	0x1
 1402 0497 1B       		.byte	0x1b
 1403 0498 6B000000 		.4byte	0x6b
 1404 049c 05       		.uleb128 0x5
 1405 049d 03       		.byte	0x3
 1406 049e 00000000 		.4byte	UART_1_initVar
 1407 04a2 18       		.uleb128 0x18
 1408 04a3 6B000000 		.4byte	0x6b
 1409 04a7 B2040000 		.4byte	0x4b2
 1410 04ab 19       		.uleb128 0x19
 1411 04ac E5000000 		.4byte	0xe5
 1412 04b0 FE       		.byte	0xfe
 1413 04b1 00       		.byte	0
 1414 04b2 17       		.uleb128 0x17
 1415 04b3 AE030000 		.4byte	.LASF51
 1416 04b7 01       		.byte	0x1
 1417 04b8 1E       		.byte	0x1e
 1418 04b9 C3040000 		.4byte	0x4c3
 1419 04bd 05       		.uleb128 0x5
 1420 04be 03       		.byte	0x3
 1421 04bf 00000000 		.4byte	UART_1_txBuffer
 1422 04c3 05       		.uleb128 0x5
 1423 04c4 A2040000 		.4byte	0x4a2
 1424 04c8 17       		.uleb128 0x17
 1425 04c9 A4020000 		.4byte	.LASF52
 1426 04cd 01       		.byte	0x1
 1427 04ce 1F       		.byte	0x1f
 1428 04cf BC000000 		.4byte	0xbc
 1429 04d3 05       		.uleb128 0x5
 1430 04d4 03       		.byte	0x3
 1431 04d5 00000000 		.4byte	UART_1_txBufferRead
 1432 04d9 17       		.uleb128 0x17
 1433 04da ED020000 		.4byte	.LASF53
 1434 04de 01       		.byte	0x1
 1435 04df 20       		.byte	0x20
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 54


 1436 04e0 6B000000 		.4byte	0x6b
 1437 04e4 05       		.uleb128 0x5
 1438 04e5 03       		.byte	0x3
 1439 04e6 00000000 		.4byte	UART_1_txBufferWrite
 1440 04ea 1A       		.uleb128 0x1a
 1441 04eb AF010000 		.4byte	.LASF62
 1442 04ef 03       		.byte	0x3
 1443 04f0 89       		.byte	0x89
 1444 04f1 D2000000 		.4byte	0xd2
 1445 04f5 04050000 		.4byte	0x504
 1446 04f9 1B       		.uleb128 0x1b
 1447 04fa 6B000000 		.4byte	0x6b
 1448 04fe 1B       		.uleb128 0x1b
 1449 04ff D2000000 		.4byte	0xd2
 1450 0503 00       		.byte	0
 1451 0504 1C       		.uleb128 0x1c
 1452 0505 5F020000 		.4byte	.LASF54
 1453 0509 03       		.byte	0x3
 1454 050a 8C       		.byte	0x8c
 1455 050b 1A050000 		.4byte	0x51a
 1456 050f 1B       		.uleb128 0x1b
 1457 0510 6B000000 		.4byte	0x6b
 1458 0514 1B       		.uleb128 0x1b
 1459 0515 6B000000 		.4byte	0x6b
 1460 0519 00       		.byte	0
 1461 051a 1D       		.uleb128 0x1d
 1462 051b 80010000 		.4byte	.LASF63
 1463 051f 03       		.byte	0x3
 1464 0520 7E       		.byte	0x7e
 1465 0521 6B000000 		.4byte	0x6b
 1466 0525 1E       		.uleb128 0x1e
 1467 0526 83030000 		.4byte	.LASF56
 1468 052a 04       		.byte	0x4
 1469 052b 27       		.byte	0x27
 1470 052c 1C       		.uleb128 0x1c
 1471 052d 1C000000 		.4byte	.LASF55
 1472 0531 03       		.byte	0x3
 1473 0532 7F       		.byte	0x7f
 1474 0533 3D050000 		.4byte	0x53d
 1475 0537 1B       		.uleb128 0x1b
 1476 0538 6B000000 		.4byte	0x6b
 1477 053c 00       		.byte	0
 1478 053d 1E       		.uleb128 0x1e
 1479 053e 99030000 		.4byte	.LASF57
 1480 0542 04       		.byte	0x4
 1481 0543 28       		.byte	0x28
 1482 0544 00       		.byte	0
 1483              		.section	.debug_abbrev,"",%progbits
 1484              	.Ldebug_abbrev0:
 1485 0000 01       		.uleb128 0x1
 1486 0001 11       		.uleb128 0x11
 1487 0002 01       		.byte	0x1
 1488 0003 25       		.uleb128 0x25
 1489 0004 0E       		.uleb128 0xe
 1490 0005 13       		.uleb128 0x13
 1491 0006 0B       		.uleb128 0xb
 1492 0007 03       		.uleb128 0x3
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 55


 1493 0008 0E       		.uleb128 0xe
 1494 0009 1B       		.uleb128 0x1b
 1495 000a 0E       		.uleb128 0xe
 1496 000b 55       		.uleb128 0x55
 1497 000c 17       		.uleb128 0x17
 1498 000d 11       		.uleb128 0x11
 1499 000e 01       		.uleb128 0x1
 1500 000f 10       		.uleb128 0x10
 1501 0010 17       		.uleb128 0x17
 1502 0011 00       		.byte	0
 1503 0012 00       		.byte	0
 1504 0013 02       		.uleb128 0x2
 1505 0014 24       		.uleb128 0x24
 1506 0015 00       		.byte	0
 1507 0016 0B       		.uleb128 0xb
 1508 0017 0B       		.uleb128 0xb
 1509 0018 3E       		.uleb128 0x3e
 1510 0019 0B       		.uleb128 0xb
 1511 001a 03       		.uleb128 0x3
 1512 001b 0E       		.uleb128 0xe
 1513 001c 00       		.byte	0
 1514 001d 00       		.byte	0
 1515 001e 03       		.uleb128 0x3
 1516 001f 24       		.uleb128 0x24
 1517 0020 00       		.byte	0
 1518 0021 0B       		.uleb128 0xb
 1519 0022 0B       		.uleb128 0xb
 1520 0023 3E       		.uleb128 0x3e
 1521 0024 0B       		.uleb128 0xb
 1522 0025 03       		.uleb128 0x3
 1523 0026 08       		.uleb128 0x8
 1524 0027 00       		.byte	0
 1525 0028 00       		.byte	0
 1526 0029 04       		.uleb128 0x4
 1527 002a 16       		.uleb128 0x16
 1528 002b 00       		.byte	0
 1529 002c 03       		.uleb128 0x3
 1530 002d 0E       		.uleb128 0xe
 1531 002e 3A       		.uleb128 0x3a
 1532 002f 0B       		.uleb128 0xb
 1533 0030 3B       		.uleb128 0x3b
 1534 0031 05       		.uleb128 0x5
 1535 0032 49       		.uleb128 0x49
 1536 0033 13       		.uleb128 0x13
 1537 0034 00       		.byte	0
 1538 0035 00       		.byte	0
 1539 0036 05       		.uleb128 0x5
 1540 0037 35       		.uleb128 0x35
 1541 0038 00       		.byte	0
 1542 0039 49       		.uleb128 0x49
 1543 003a 13       		.uleb128 0x13
 1544 003b 00       		.byte	0
 1545 003c 00       		.byte	0
 1546 003d 06       		.uleb128 0x6
 1547 003e 0F       		.uleb128 0xf
 1548 003f 00       		.byte	0
 1549 0040 0B       		.uleb128 0xb
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 56


 1550 0041 0B       		.uleb128 0xb
 1551 0042 49       		.uleb128 0x49
 1552 0043 13       		.uleb128 0x13
 1553 0044 00       		.byte	0
 1554 0045 00       		.byte	0
 1555 0046 07       		.uleb128 0x7
 1556 0047 15       		.uleb128 0x15
 1557 0048 00       		.byte	0
 1558 0049 27       		.uleb128 0x27
 1559 004a 19       		.uleb128 0x19
 1560 004b 00       		.byte	0
 1561 004c 00       		.byte	0
 1562 004d 08       		.uleb128 0x8
 1563 004e 2E       		.uleb128 0x2e
 1564 004f 01       		.byte	0x1
 1565 0050 3F       		.uleb128 0x3f
 1566 0051 19       		.uleb128 0x19
 1567 0052 03       		.uleb128 0x3
 1568 0053 0E       		.uleb128 0xe
 1569 0054 3A       		.uleb128 0x3a
 1570 0055 0B       		.uleb128 0xb
 1571 0056 3B       		.uleb128 0x3b
 1572 0057 0B       		.uleb128 0xb
 1573 0058 27       		.uleb128 0x27
 1574 0059 19       		.uleb128 0x19
 1575 005a 11       		.uleb128 0x11
 1576 005b 01       		.uleb128 0x1
 1577 005c 12       		.uleb128 0x12
 1578 005d 06       		.uleb128 0x6
 1579 005e 40       		.uleb128 0x40
 1580 005f 18       		.uleb128 0x18
 1581 0060 9742     		.uleb128 0x2117
 1582 0062 19       		.uleb128 0x19
 1583 0063 01       		.uleb128 0x1
 1584 0064 13       		.uleb128 0x13
 1585 0065 00       		.byte	0
 1586 0066 00       		.byte	0
 1587 0067 09       		.uleb128 0x9
 1588 0068 898201   		.uleb128 0x4109
 1589 006b 01       		.byte	0x1
 1590 006c 11       		.uleb128 0x11
 1591 006d 01       		.uleb128 0x1
 1592 006e 31       		.uleb128 0x31
 1593 006f 13       		.uleb128 0x13
 1594 0070 01       		.uleb128 0x1
 1595 0071 13       		.uleb128 0x13
 1596 0072 00       		.byte	0
 1597 0073 00       		.byte	0
 1598 0074 0A       		.uleb128 0xa
 1599 0075 8A8201   		.uleb128 0x410a
 1600 0078 00       		.byte	0
 1601 0079 02       		.uleb128 0x2
 1602 007a 18       		.uleb128 0x18
 1603 007b 9142     		.uleb128 0x2111
 1604 007d 18       		.uleb128 0x18
 1605 007e 00       		.byte	0
 1606 007f 00       		.byte	0
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 57


 1607 0080 0B       		.uleb128 0xb
 1608 0081 898201   		.uleb128 0x4109
 1609 0084 01       		.byte	0x1
 1610 0085 11       		.uleb128 0x11
 1611 0086 01       		.uleb128 0x1
 1612 0087 31       		.uleb128 0x31
 1613 0088 13       		.uleb128 0x13
 1614 0089 00       		.byte	0
 1615 008a 00       		.byte	0
 1616 008b 0C       		.uleb128 0xc
 1617 008c 34       		.uleb128 0x34
 1618 008d 00       		.byte	0
 1619 008e 03       		.uleb128 0x3
 1620 008f 0E       		.uleb128 0xe
 1621 0090 3A       		.uleb128 0x3a
 1622 0091 0B       		.uleb128 0xb
 1623 0092 3B       		.uleb128 0x3b
 1624 0093 0B       		.uleb128 0xb
 1625 0094 49       		.uleb128 0x49
 1626 0095 13       		.uleb128 0x13
 1627 0096 02       		.uleb128 0x2
 1628 0097 17       		.uleb128 0x17
 1629 0098 00       		.byte	0
 1630 0099 00       		.byte	0
 1631 009a 0D       		.uleb128 0xd
 1632 009b 898201   		.uleb128 0x4109
 1633 009e 00       		.byte	0
 1634 009f 11       		.uleb128 0x11
 1635 00a0 01       		.uleb128 0x1
 1636 00a1 31       		.uleb128 0x31
 1637 00a2 13       		.uleb128 0x13
 1638 00a3 00       		.byte	0
 1639 00a4 00       		.byte	0
 1640 00a5 0E       		.uleb128 0xe
 1641 00a6 2E       		.uleb128 0x2e
 1642 00a7 00       		.byte	0
 1643 00a8 3F       		.uleb128 0x3f
 1644 00a9 19       		.uleb128 0x19
 1645 00aa 03       		.uleb128 0x3
 1646 00ab 0E       		.uleb128 0xe
 1647 00ac 3A       		.uleb128 0x3a
 1648 00ad 0B       		.uleb128 0xb
 1649 00ae 3B       		.uleb128 0x3b
 1650 00af 05       		.uleb128 0x5
 1651 00b0 27       		.uleb128 0x27
 1652 00b1 19       		.uleb128 0x19
 1653 00b2 49       		.uleb128 0x49
 1654 00b3 13       		.uleb128 0x13
 1655 00b4 11       		.uleb128 0x11
 1656 00b5 01       		.uleb128 0x1
 1657 00b6 12       		.uleb128 0x12
 1658 00b7 06       		.uleb128 0x6
 1659 00b8 40       		.uleb128 0x40
 1660 00b9 18       		.uleb128 0x18
 1661 00ba 9742     		.uleb128 0x2117
 1662 00bc 19       		.uleb128 0x19
 1663 00bd 00       		.byte	0
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 58


 1664 00be 00       		.byte	0
 1665 00bf 0F       		.uleb128 0xf
 1666 00c0 2E       		.uleb128 0x2e
 1667 00c1 01       		.byte	0x1
 1668 00c2 3F       		.uleb128 0x3f
 1669 00c3 19       		.uleb128 0x19
 1670 00c4 03       		.uleb128 0x3
 1671 00c5 0E       		.uleb128 0xe
 1672 00c6 3A       		.uleb128 0x3a
 1673 00c7 0B       		.uleb128 0xb
 1674 00c8 3B       		.uleb128 0x3b
 1675 00c9 05       		.uleb128 0x5
 1676 00ca 27       		.uleb128 0x27
 1677 00cb 19       		.uleb128 0x19
 1678 00cc 11       		.uleb128 0x11
 1679 00cd 01       		.uleb128 0x1
 1680 00ce 12       		.uleb128 0x12
 1681 00cf 06       		.uleb128 0x6
 1682 00d0 40       		.uleb128 0x40
 1683 00d1 18       		.uleb128 0x18
 1684 00d2 9742     		.uleb128 0x2117
 1685 00d4 19       		.uleb128 0x19
 1686 00d5 01       		.uleb128 0x1
 1687 00d6 13       		.uleb128 0x13
 1688 00d7 00       		.byte	0
 1689 00d8 00       		.byte	0
 1690 00d9 10       		.uleb128 0x10
 1691 00da 05       		.uleb128 0x5
 1692 00db 00       		.byte	0
 1693 00dc 03       		.uleb128 0x3
 1694 00dd 0E       		.uleb128 0xe
 1695 00de 3A       		.uleb128 0x3a
 1696 00df 0B       		.uleb128 0xb
 1697 00e0 3B       		.uleb128 0x3b
 1698 00e1 05       		.uleb128 0x5
 1699 00e2 49       		.uleb128 0x49
 1700 00e3 13       		.uleb128 0x13
 1701 00e4 02       		.uleb128 0x2
 1702 00e5 18       		.uleb128 0x18
 1703 00e6 00       		.byte	0
 1704 00e7 00       		.byte	0
 1705 00e8 11       		.uleb128 0x11
 1706 00e9 34       		.uleb128 0x34
 1707 00ea 00       		.byte	0
 1708 00eb 03       		.uleb128 0x3
 1709 00ec 0E       		.uleb128 0xe
 1710 00ed 3A       		.uleb128 0x3a
 1711 00ee 0B       		.uleb128 0xb
 1712 00ef 3B       		.uleb128 0x3b
 1713 00f0 05       		.uleb128 0x5
 1714 00f1 49       		.uleb128 0x49
 1715 00f2 13       		.uleb128 0x13
 1716 00f3 02       		.uleb128 0x2
 1717 00f4 18       		.uleb128 0x18
 1718 00f5 00       		.byte	0
 1719 00f6 00       		.byte	0
 1720 00f7 12       		.uleb128 0x12
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 59


 1721 00f8 34       		.uleb128 0x34
 1722 00f9 00       		.byte	0
 1723 00fa 03       		.uleb128 0x3
 1724 00fb 0E       		.uleb128 0xe
 1725 00fc 3A       		.uleb128 0x3a
 1726 00fd 0B       		.uleb128 0xb
 1727 00fe 3B       		.uleb128 0x3b
 1728 00ff 05       		.uleb128 0x5
 1729 0100 49       		.uleb128 0x49
 1730 0101 13       		.uleb128 0x13
 1731 0102 02       		.uleb128 0x2
 1732 0103 17       		.uleb128 0x17
 1733 0104 00       		.byte	0
 1734 0105 00       		.byte	0
 1735 0106 13       		.uleb128 0x13
 1736 0107 05       		.uleb128 0x5
 1737 0108 00       		.byte	0
 1738 0109 03       		.uleb128 0x3
 1739 010a 0E       		.uleb128 0xe
 1740 010b 3A       		.uleb128 0x3a
 1741 010c 0B       		.uleb128 0xb
 1742 010d 3B       		.uleb128 0x3b
 1743 010e 05       		.uleb128 0x5
 1744 010f 49       		.uleb128 0x49
 1745 0110 13       		.uleb128 0x13
 1746 0111 02       		.uleb128 0x2
 1747 0112 17       		.uleb128 0x17
 1748 0113 00       		.byte	0
 1749 0114 00       		.byte	0
 1750 0115 14       		.uleb128 0x14
 1751 0116 26       		.uleb128 0x26
 1752 0117 00       		.byte	0
 1753 0118 49       		.uleb128 0x49
 1754 0119 13       		.uleb128 0x13
 1755 011a 00       		.byte	0
 1756 011b 00       		.byte	0
 1757 011c 15       		.uleb128 0x15
 1758 011d 2E       		.uleb128 0x2e
 1759 011e 01       		.byte	0x1
 1760 011f 3F       		.uleb128 0x3f
 1761 0120 19       		.uleb128 0x19
 1762 0121 03       		.uleb128 0x3
 1763 0122 0E       		.uleb128 0xe
 1764 0123 3A       		.uleb128 0x3a
 1765 0124 0B       		.uleb128 0xb
 1766 0125 3B       		.uleb128 0x3b
 1767 0126 05       		.uleb128 0x5
 1768 0127 27       		.uleb128 0x27
 1769 0128 19       		.uleb128 0x19
 1770 0129 49       		.uleb128 0x49
 1771 012a 13       		.uleb128 0x13
 1772 012b 11       		.uleb128 0x11
 1773 012c 01       		.uleb128 0x1
 1774 012d 12       		.uleb128 0x12
 1775 012e 06       		.uleb128 0x6
 1776 012f 40       		.uleb128 0x40
 1777 0130 18       		.uleb128 0x18
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 60


 1778 0131 9742     		.uleb128 0x2117
 1779 0133 19       		.uleb128 0x19
 1780 0134 01       		.uleb128 0x1
 1781 0135 13       		.uleb128 0x13
 1782 0136 00       		.byte	0
 1783 0137 00       		.byte	0
 1784 0138 16       		.uleb128 0x16
 1785 0139 0B       		.uleb128 0xb
 1786 013a 01       		.byte	0x1
 1787 013b 11       		.uleb128 0x11
 1788 013c 01       		.uleb128 0x1
 1789 013d 12       		.uleb128 0x12
 1790 013e 06       		.uleb128 0x6
 1791 013f 00       		.byte	0
 1792 0140 00       		.byte	0
 1793 0141 17       		.uleb128 0x17
 1794 0142 34       		.uleb128 0x34
 1795 0143 00       		.byte	0
 1796 0144 03       		.uleb128 0x3
 1797 0145 0E       		.uleb128 0xe
 1798 0146 3A       		.uleb128 0x3a
 1799 0147 0B       		.uleb128 0xb
 1800 0148 3B       		.uleb128 0x3b
 1801 0149 0B       		.uleb128 0xb
 1802 014a 49       		.uleb128 0x49
 1803 014b 13       		.uleb128 0x13
 1804 014c 3F       		.uleb128 0x3f
 1805 014d 19       		.uleb128 0x19
 1806 014e 02       		.uleb128 0x2
 1807 014f 18       		.uleb128 0x18
 1808 0150 00       		.byte	0
 1809 0151 00       		.byte	0
 1810 0152 18       		.uleb128 0x18
 1811 0153 01       		.uleb128 0x1
 1812 0154 01       		.byte	0x1
 1813 0155 49       		.uleb128 0x49
 1814 0156 13       		.uleb128 0x13
 1815 0157 01       		.uleb128 0x1
 1816 0158 13       		.uleb128 0x13
 1817 0159 00       		.byte	0
 1818 015a 00       		.byte	0
 1819 015b 19       		.uleb128 0x19
 1820 015c 21       		.uleb128 0x21
 1821 015d 00       		.byte	0
 1822 015e 49       		.uleb128 0x49
 1823 015f 13       		.uleb128 0x13
 1824 0160 2F       		.uleb128 0x2f
 1825 0161 0B       		.uleb128 0xb
 1826 0162 00       		.byte	0
 1827 0163 00       		.byte	0
 1828 0164 1A       		.uleb128 0x1a
 1829 0165 2E       		.uleb128 0x2e
 1830 0166 01       		.byte	0x1
 1831 0167 3F       		.uleb128 0x3f
 1832 0168 19       		.uleb128 0x19
 1833 0169 03       		.uleb128 0x3
 1834 016a 0E       		.uleb128 0xe
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 61


 1835 016b 3A       		.uleb128 0x3a
 1836 016c 0B       		.uleb128 0xb
 1837 016d 3B       		.uleb128 0x3b
 1838 016e 0B       		.uleb128 0xb
 1839 016f 27       		.uleb128 0x27
 1840 0170 19       		.uleb128 0x19
 1841 0171 49       		.uleb128 0x49
 1842 0172 13       		.uleb128 0x13
 1843 0173 3C       		.uleb128 0x3c
 1844 0174 19       		.uleb128 0x19
 1845 0175 01       		.uleb128 0x1
 1846 0176 13       		.uleb128 0x13
 1847 0177 00       		.byte	0
 1848 0178 00       		.byte	0
 1849 0179 1B       		.uleb128 0x1b
 1850 017a 05       		.uleb128 0x5
 1851 017b 00       		.byte	0
 1852 017c 49       		.uleb128 0x49
 1853 017d 13       		.uleb128 0x13
 1854 017e 00       		.byte	0
 1855 017f 00       		.byte	0
 1856 0180 1C       		.uleb128 0x1c
 1857 0181 2E       		.uleb128 0x2e
 1858 0182 01       		.byte	0x1
 1859 0183 3F       		.uleb128 0x3f
 1860 0184 19       		.uleb128 0x19
 1861 0185 03       		.uleb128 0x3
 1862 0186 0E       		.uleb128 0xe
 1863 0187 3A       		.uleb128 0x3a
 1864 0188 0B       		.uleb128 0xb
 1865 0189 3B       		.uleb128 0x3b
 1866 018a 0B       		.uleb128 0xb
 1867 018b 27       		.uleb128 0x27
 1868 018c 19       		.uleb128 0x19
 1869 018d 3C       		.uleb128 0x3c
 1870 018e 19       		.uleb128 0x19
 1871 018f 01       		.uleb128 0x1
 1872 0190 13       		.uleb128 0x13
 1873 0191 00       		.byte	0
 1874 0192 00       		.byte	0
 1875 0193 1D       		.uleb128 0x1d
 1876 0194 2E       		.uleb128 0x2e
 1877 0195 00       		.byte	0
 1878 0196 3F       		.uleb128 0x3f
 1879 0197 19       		.uleb128 0x19
 1880 0198 03       		.uleb128 0x3
 1881 0199 0E       		.uleb128 0xe
 1882 019a 3A       		.uleb128 0x3a
 1883 019b 0B       		.uleb128 0xb
 1884 019c 3B       		.uleb128 0x3b
 1885 019d 0B       		.uleb128 0xb
 1886 019e 27       		.uleb128 0x27
 1887 019f 19       		.uleb128 0x19
 1888 01a0 49       		.uleb128 0x49
 1889 01a1 13       		.uleb128 0x13
 1890 01a2 3C       		.uleb128 0x3c
 1891 01a3 19       		.uleb128 0x19
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 62


 1892 01a4 00       		.byte	0
 1893 01a5 00       		.byte	0
 1894 01a6 1E       		.uleb128 0x1e
 1895 01a7 2E       		.uleb128 0x2e
 1896 01a8 00       		.byte	0
 1897 01a9 3F       		.uleb128 0x3f
 1898 01aa 19       		.uleb128 0x19
 1899 01ab 03       		.uleb128 0x3
 1900 01ac 0E       		.uleb128 0xe
 1901 01ad 3A       		.uleb128 0x3a
 1902 01ae 0B       		.uleb128 0xb
 1903 01af 3B       		.uleb128 0x3b
 1904 01b0 0B       		.uleb128 0xb
 1905 01b1 27       		.uleb128 0x27
 1906 01b2 19       		.uleb128 0x19
 1907 01b3 3C       		.uleb128 0x3c
 1908 01b4 19       		.uleb128 0x19
 1909 01b5 00       		.byte	0
 1910 01b6 00       		.byte	0
 1911 01b7 00       		.byte	0
 1912              		.section	.debug_loc,"",%progbits
 1913              	.Ldebug_loc0:
 1914              	.LLST0:
 1915 0000 08000000 		.4byte	.LVL3
 1916 0004 2A000000 		.4byte	.LVL6
 1917 0008 0100     		.2byte	0x1
 1918 000a 54       		.byte	0x54
 1919 000b 00000000 		.4byte	0
 1920 000f 00000000 		.4byte	0
 1921              	.LLST1:
 1922 0013 08000000 		.4byte	.LVL10
 1923 0017 24000000 		.4byte	.LVL13
 1924 001b 0100     		.2byte	0x1
 1925 001d 54       		.byte	0x54
 1926 001e 00000000 		.4byte	0
 1927 0022 00000000 		.4byte	0
 1928              	.LLST2:
 1929 0026 08000000 		.4byte	.LVL19
 1930 002a 2C000000 		.4byte	.LVL20
 1931 002e 0100     		.2byte	0x1
 1932 0030 53       		.byte	0x53
 1933 0031 00000000 		.4byte	0
 1934 0035 00000000 		.4byte	0
 1935              	.LLST3:
 1936 0039 00000000 		.4byte	.LVL23
 1937 003d 0A000000 		.4byte	.LVL25
 1938 0041 0100     		.2byte	0x1
 1939 0043 50       		.byte	0x50
 1940 0044 0A000000 		.4byte	.LVL25
 1941 0048 14000000 		.4byte	.LVL29
 1942 004c 0100     		.2byte	0x1
 1943 004e 55       		.byte	0x55
 1944 004f 14000000 		.4byte	.LVL29
 1945 0053 18000000 		.4byte	.LVL30
 1946 0057 0100     		.2byte	0x1
 1947 0059 50       		.byte	0x50
 1948 005a 18000000 		.4byte	.LVL30
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 63


 1949 005e 20000000 		.4byte	.LVL31
 1950 0062 0100     		.2byte	0x1
 1951 0064 55       		.byte	0x55
 1952 0065 20000000 		.4byte	.LVL31
 1953 0069 24000000 		.4byte	.LFE10
 1954 006d 0400     		.2byte	0x4
 1955 006f F3       		.byte	0xf3
 1956 0070 01       		.uleb128 0x1
 1957 0071 50       		.byte	0x50
 1958 0072 9F       		.byte	0x9f
 1959 0073 00000000 		.4byte	0
 1960 0077 00000000 		.4byte	0
 1961              	.LLST4:
 1962 007b 02000000 		.4byte	.LVL24
 1963 007f 0A000000 		.4byte	.LVL25
 1964 0083 0200     		.2byte	0x2
 1965 0085 30       		.byte	0x30
 1966 0086 9F       		.byte	0x9f
 1967 0087 0A000000 		.4byte	.LVL25
 1968 008b 10000000 		.4byte	.LVL27
 1969 008f 0100     		.2byte	0x1
 1970 0091 54       		.byte	0x54
 1971 0092 12000000 		.4byte	.LVL28
 1972 0096 14000000 		.4byte	.LVL29
 1973 009a 0100     		.2byte	0x1
 1974 009c 54       		.byte	0x54
 1975 009d 14000000 		.4byte	.LVL29
 1976 00a1 18000000 		.4byte	.LVL30
 1977 00a5 0200     		.2byte	0x2
 1978 00a7 30       		.byte	0x30
 1979 00a8 9F       		.byte	0x9f
 1980 00a9 18000000 		.4byte	.LVL30
 1981 00ad 20000000 		.4byte	.LVL31
 1982 00b1 0100     		.2byte	0x1
 1983 00b3 54       		.byte	0x54
 1984 00b4 00000000 		.4byte	0
 1985 00b8 00000000 		.4byte	0
 1986              	.LLST5:
 1987 00bc 00000000 		.4byte	.LVL32
 1988 00c0 08000000 		.4byte	.LVL33
 1989 00c4 0100     		.2byte	0x1
 1990 00c6 50       		.byte	0x50
 1991 00c7 08000000 		.4byte	.LVL33
 1992 00cb 14000000 		.4byte	.LVL37
 1993 00cf 0100     		.2byte	0x1
 1994 00d1 56       		.byte	0x56
 1995 00d2 14000000 		.4byte	.LVL37
 1996 00d6 1C000000 		.4byte	.LVL38
 1997 00da 0100     		.2byte	0x1
 1998 00dc 50       		.byte	0x50
 1999 00dd 1C000000 		.4byte	.LVL38
 2000 00e1 22000000 		.4byte	.LVL39
 2001 00e5 0100     		.2byte	0x1
 2002 00e7 56       		.byte	0x56
 2003 00e8 22000000 		.4byte	.LVL39
 2004 00ec 28000000 		.4byte	.LFE11
 2005 00f0 0400     		.2byte	0x4
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 64


 2006 00f2 F3       		.byte	0xf3
 2007 00f3 01       		.uleb128 0x1
 2008 00f4 50       		.byte	0x50
 2009 00f5 9F       		.byte	0x9f
 2010 00f6 00000000 		.4byte	0
 2011 00fa 00000000 		.4byte	0
 2012              	.LLST6:
 2013 00fe 00000000 		.4byte	.LVL32
 2014 0102 08000000 		.4byte	.LVL33
 2015 0106 0100     		.2byte	0x1
 2016 0108 51       		.byte	0x51
 2017 0109 08000000 		.4byte	.LVL33
 2018 010d 14000000 		.4byte	.LVL37
 2019 0111 0400     		.2byte	0x4
 2020 0113 F3       		.byte	0xf3
 2021 0114 01       		.uleb128 0x1
 2022 0115 51       		.byte	0x51
 2023 0116 9F       		.byte	0x9f
 2024 0117 14000000 		.4byte	.LVL37
 2025 011b 1C000000 		.4byte	.LVL38
 2026 011f 0100     		.2byte	0x1
 2027 0121 51       		.byte	0x51
 2028 0122 1C000000 		.4byte	.LVL38
 2029 0126 28000000 		.4byte	.LFE11
 2030 012a 0400     		.2byte	0x4
 2031 012c F3       		.byte	0xf3
 2032 012d 01       		.uleb128 0x1
 2033 012e 51       		.byte	0x51
 2034 012f 9F       		.byte	0x9f
 2035 0130 00000000 		.4byte	0
 2036 0134 00000000 		.4byte	0
 2037              	.LLST7:
 2038 0138 00000000 		.4byte	.LVL32
 2039 013c 08000000 		.4byte	.LVL33
 2040 0140 0200     		.2byte	0x2
 2041 0142 30       		.byte	0x30
 2042 0143 9F       		.byte	0x9f
 2043 0144 08000000 		.4byte	.LVL33
 2044 0148 10000000 		.4byte	.LVL35
 2045 014c 0100     		.2byte	0x1
 2046 014e 54       		.byte	0x54
 2047 014f 12000000 		.4byte	.LVL36
 2048 0153 14000000 		.4byte	.LVL37
 2049 0157 0100     		.2byte	0x1
 2050 0159 54       		.byte	0x54
 2051 015a 14000000 		.4byte	.LVL37
 2052 015e 1C000000 		.4byte	.LVL38
 2053 0162 0200     		.2byte	0x2
 2054 0164 30       		.byte	0x30
 2055 0165 9F       		.byte	0x9f
 2056 0166 1C000000 		.4byte	.LVL38
 2057 016a 22000000 		.4byte	.LVL39
 2058 016e 0100     		.2byte	0x1
 2059 0170 54       		.byte	0x54
 2060 0171 00000000 		.4byte	0
 2061 0175 00000000 		.4byte	0
 2062              	.LLST8:
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 65


 2063 0179 00000000 		.4byte	.LVL40
 2064 017d 0B000000 		.4byte	.LVL41-1
 2065 0181 0100     		.2byte	0x1
 2066 0183 50       		.byte	0x50
 2067 0184 0B000000 		.4byte	.LVL41-1
 2068 0188 20000000 		.4byte	.LFE12
 2069 018c 0400     		.2byte	0x4
 2070 018e F3       		.byte	0xf3
 2071 018f 01       		.uleb128 0x1
 2072 0190 50       		.byte	0x50
 2073 0191 9F       		.byte	0x9f
 2074 0192 00000000 		.4byte	0
 2075 0196 00000000 		.4byte	0
 2076              	.LLST9:
 2077 019a 24000000 		.4byte	.LVL44
 2078 019e 26000000 		.4byte	.LVL45
 2079 01a2 0100     		.2byte	0x1
 2080 01a4 50       		.byte	0x50
 2081 01a5 30000000 		.4byte	.LVL46
 2082 01a9 32000000 		.4byte	.LVL47
 2083 01ad 0100     		.2byte	0x1
 2084 01af 50       		.byte	0x50
 2085 01b0 34000000 		.4byte	.LVL48
 2086 01b4 48000000 		.4byte	.LFE13
 2087 01b8 0100     		.2byte	0x1
 2088 01ba 50       		.byte	0x50
 2089 01bb 00000000 		.4byte	0
 2090 01bf 00000000 		.4byte	0
 2091              	.LLST10:
 2092 01c3 06000000 		.4byte	.LVL49
 2093 01c7 1B000000 		.4byte	.LVL50-1
 2094 01cb 0100     		.2byte	0x1
 2095 01cd 50       		.byte	0x50
 2096 01ce 00000000 		.4byte	0
 2097 01d2 00000000 		.4byte	0
 2098              	.LLST11:
 2099 01d6 00000000 		.4byte	.LVL51
 2100 01da 3C000000 		.4byte	.LVL56
 2101 01de 0100     		.2byte	0x1
 2102 01e0 50       		.byte	0x50
 2103 01e1 3C000000 		.4byte	.LVL56
 2104 01e5 58000000 		.4byte	.LFE15
 2105 01e9 0400     		.2byte	0x4
 2106 01eb F3       		.byte	0xf3
 2107 01ec 01       		.uleb128 0x1
 2108 01ed 50       		.byte	0x50
 2109 01ee 9F       		.byte	0x9f
 2110 01ef 00000000 		.4byte	0
 2111 01f3 00000000 		.4byte	0
 2112              	.LLST12:
 2113 01f7 22000000 		.4byte	.LVL52
 2114 01fb 28000000 		.4byte	.LVL53
 2115 01ff 0100     		.2byte	0x1
 2116 0201 53       		.byte	0x53
 2117 0202 34000000 		.4byte	.LVL54
 2118 0206 3A000000 		.4byte	.LVL55
 2119 020a 0100     		.2byte	0x1
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 66


 2120 020c 53       		.byte	0x53
 2121 020d 00000000 		.4byte	0
 2122 0211 00000000 		.4byte	0
 2123              		.section	.debug_aranges,"",%progbits
 2124 0000 9C000000 		.4byte	0x9c
 2125 0004 0200     		.2byte	0x2
 2126 0006 00000000 		.4byte	.Ldebug_info0
 2127 000a 04       		.byte	0x4
 2128 000b 00       		.byte	0
 2129 000c 0000     		.2byte	0
 2130 000e 0000     		.2byte	0
 2131 0010 00000000 		.4byte	.LFB1
 2132 0014 30000000 		.4byte	.LFE1-.LFB1
 2133 0018 00000000 		.4byte	.LFB2
 2134 001c 34000000 		.4byte	.LFE2-.LFB2
 2135 0020 00000000 		.4byte	.LFB0
 2136 0024 1C000000 		.4byte	.LFE0-.LFB0
 2137 0028 00000000 		.4byte	.LFB3
 2138 002c 2C000000 		.4byte	.LFE3-.LFB3
 2139 0030 00000000 		.4byte	.LFB4
 2140 0034 04000000 		.4byte	.LFE4-.LFB4
 2141 0038 00000000 		.4byte	.LFB5
 2142 003c 02000000 		.4byte	.LFE5-.LFB5
 2143 0040 00000000 		.4byte	.LFB6
 2144 0044 0C000000 		.4byte	.LFE6-.LFB6
 2145 0048 00000000 		.4byte	.LFB7
 2146 004c 60000000 		.4byte	.LFE7-.LFB7
 2147 0050 00000000 		.4byte	.LFB8
 2148 0054 0C000000 		.4byte	.LFE8-.LFB8
 2149 0058 00000000 		.4byte	.LFB9
 2150 005c 70000000 		.4byte	.LFE9-.LFB9
 2151 0060 00000000 		.4byte	.LFB10
 2152 0064 24000000 		.4byte	.LFE10-.LFB10
 2153 0068 00000000 		.4byte	.LFB11
 2154 006c 28000000 		.4byte	.LFE11-.LFB11
 2155 0070 00000000 		.4byte	.LFB12
 2156 0074 20000000 		.4byte	.LFE12-.LFB12
 2157 0078 00000000 		.4byte	.LFB13
 2158 007c 48000000 		.4byte	.LFE13-.LFB13
 2159 0080 00000000 		.4byte	.LFB14
 2160 0084 40000000 		.4byte	.LFE14-.LFB14
 2161 0088 00000000 		.4byte	.LFB15
 2162 008c 58000000 		.4byte	.LFE15-.LFB15
 2163 0090 00000000 		.4byte	.LFB16
 2164 0094 02000000 		.4byte	.LFE16-.LFB16
 2165 0098 00000000 		.4byte	0
 2166 009c 00000000 		.4byte	0
 2167              		.section	.debug_ranges,"",%progbits
 2168              	.Ldebug_ranges0:
 2169 0000 00000000 		.4byte	.LFB1
 2170 0004 30000000 		.4byte	.LFE1
 2171 0008 00000000 		.4byte	.LFB2
 2172 000c 34000000 		.4byte	.LFE2
 2173 0010 00000000 		.4byte	.LFB0
 2174 0014 1C000000 		.4byte	.LFE0
 2175 0018 00000000 		.4byte	.LFB3
 2176 001c 2C000000 		.4byte	.LFE3
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 67


 2177 0020 00000000 		.4byte	.LFB4
 2178 0024 04000000 		.4byte	.LFE4
 2179 0028 00000000 		.4byte	.LFB5
 2180 002c 02000000 		.4byte	.LFE5
 2181 0030 00000000 		.4byte	.LFB6
 2182 0034 0C000000 		.4byte	.LFE6
 2183 0038 00000000 		.4byte	.LFB7
 2184 003c 60000000 		.4byte	.LFE7
 2185 0040 00000000 		.4byte	.LFB8
 2186 0044 0C000000 		.4byte	.LFE8
 2187 0048 00000000 		.4byte	.LFB9
 2188 004c 70000000 		.4byte	.LFE9
 2189 0050 00000000 		.4byte	.LFB10
 2190 0054 24000000 		.4byte	.LFE10
 2191 0058 00000000 		.4byte	.LFB11
 2192 005c 28000000 		.4byte	.LFE11
 2193 0060 00000000 		.4byte	.LFB12
 2194 0064 20000000 		.4byte	.LFE12
 2195 0068 00000000 		.4byte	.LFB13
 2196 006c 48000000 		.4byte	.LFE13
 2197 0070 00000000 		.4byte	.LFB14
 2198 0074 40000000 		.4byte	.LFE14
 2199 0078 00000000 		.4byte	.LFB15
 2200 007c 58000000 		.4byte	.LFE15
 2201 0080 00000000 		.4byte	.LFB16
 2202 0084 02000000 		.4byte	.LFE16
 2203 0088 00000000 		.4byte	0
 2204 008c 00000000 		.4byte	0
 2205              		.section	.debug_line,"",%progbits
 2206              	.Ldebug_line0:
 2207 0000 2D020000 		.section	.debug_str,"MS",%progbits,1
 2207      02006500 
 2207      00000201 
 2207      FB0E0D00 
 2207      01010101 
 2208              	.LASF10:
 2209 0000 75696E74 		.ascii	"uint16\000"
 2209      313600
 2210              	.LASF43:
 2211 0007 55415254 		.ascii	"UART_1_ClearTxBuffer\000"
 2211      5F315F43 
 2211      6C656172 
 2211      54784275 
 2211      66666572 
 2212              	.LASF55:
 2213 001c 43794578 		.ascii	"CyExitCriticalSection\000"
 2213      69744372 
 2213      69746963 
 2213      616C5365 
 2213      6374696F 
 2214              	.LASF30:
 2215 0032 74784461 		.ascii	"txDataByte\000"
 2215      74614279 
 2215      746500
 2216              	.LASF33:
 2217 003d 55415254 		.ascii	"UART_1_PutChar\000"
 2217      5F315F50 
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 68


 2217      75744368 
 2217      617200
 2218              	.LASF37:
 2219 004c 73747269 		.ascii	"string\000"
 2219      6E6700
 2220              	.LASF44:
 2221 0053 55415254 		.ascii	"UART_1_SendBreak\000"
 2221      5F315F53 
 2221      656E6442 
 2221      7265616B 
 2221      00
 2222              	.LASF7:
 2223 0064 6C6F6E67 		.ascii	"long long unsigned int\000"
 2223      206C6F6E 
 2223      6720756E 
 2223      7369676E 
 2223      65642069 
 2224              	.LASF61:
 2225 007b 55415254 		.ascii	"UART_1_GetTxBufferSize\000"
 2225      5F315F47 
 2225      65745478 
 2225      42756666 
 2225      65725369 
 2226              	.LASF6:
 2227 0092 6C6F6E67 		.ascii	"long long int\000"
 2227      206C6F6E 
 2227      6720696E 
 2227      7400
 2228              	.LASF0:
 2229 00a0 7369676E 		.ascii	"signed char\000"
 2229      65642063 
 2229      68617200 
 2230              	.LASF47:
 2231 00ac 74785065 		.ascii	"txPeriod\000"
 2231      72696F64 
 2231      00
 2232              	.LASF41:
 2233 00b5 55415254 		.ascii	"UART_1_PutCRLF\000"
 2233      5F315F50 
 2233      75744352 
 2233      4C4600
 2234              	.LASF4:
 2235 00c4 6C6F6E67 		.ascii	"long int\000"
 2235      20696E74 
 2235      00
 2236              	.LASF22:
 2237 00cd 55415254 		.ascii	"UART_1_Start\000"
 2237      5F315F53 
 2237      74617274 
 2237      00
 2238              	.LASF9:
 2239 00da 75696E74 		.ascii	"uint8\000"
 2239      3800
 2240              	.LASF13:
 2241 00e0 646F7562 		.ascii	"double\000"
 2241      6C6500
 2242              	.LASF49:
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 69


 2243 00e7 61646472 		.ascii	"addressMode\000"
 2243      6573734D 
 2243      6F646500 
 2244              	.LASF59:
 2245 00f3 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\UART_1.c\000"
 2245      6E657261 
 2245      7465645F 
 2245      536F7572 
 2245      63655C50 
 2246              	.LASF11:
 2247 0115 75696E74 		.ascii	"uint32\000"
 2247      333200
 2248              	.LASF27:
 2249 011c 636F6E74 		.ascii	"control\000"
 2249      726F6C00 
 2250              	.LASF35:
 2251 0124 6C6F6354 		.ascii	"locTxBufferRead\000"
 2251      78427566 
 2251      66657252 
 2251      65616400 
 2252              	.LASF45:
 2253 0134 7265744D 		.ascii	"retMode\000"
 2253      6F646500 
 2254              	.LASF8:
 2255 013c 756E7369 		.ascii	"unsigned int\000"
 2255      676E6564 
 2255      20696E74 
 2255      00
 2256              	.LASF32:
 2257 0149 55415254 		.ascii	"UART_1_ReadTxStatus\000"
 2257      5F315F52 
 2257      65616454 
 2257      78537461 
 2257      74757300 
 2258              	.LASF5:
 2259 015d 6C6F6E67 		.ascii	"long unsigned int\000"
 2259      20756E73 
 2259      69676E65 
 2259      6420696E 
 2259      7400
 2260              	.LASF34:
 2261 016f 6C6F6354 		.ascii	"locTxBufferWrite\000"
 2261      78427566 
 2261      66657257 
 2261      72697465 
 2261      00
 2262              	.LASF63:
 2263 0180 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2263      74657243 
 2263      72697469 
 2263      63616C53 
 2263      65637469 
 2264              	.LASF42:
 2265 0197 73697A65 		.ascii	"size\000"
 2265      00
 2266              	.LASF3:
 2267 019c 73686F72 		.ascii	"short unsigned int\000"
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 70


 2267      7420756E 
 2267      7369676E 
 2267      65642069 
 2267      6E7400
 2268              	.LASF62:
 2269 01af 4379496E 		.ascii	"CyIntSetVector\000"
 2269      74536574 
 2269      56656374 
 2269      6F7200
 2270              	.LASF21:
 2271 01be 55415254 		.ascii	"UART_1_Enable\000"
 2271      5F315F45 
 2271      6E61626C 
 2271      6500
 2272              	.LASF38:
 2273 01cc 62756649 		.ascii	"bufIndex\000"
 2273      6E646578 
 2273      00
 2274              	.LASF48:
 2275 01d5 55415254 		.ascii	"UART_1_SetTxAddressMode\000"
 2275      5F315F53 
 2275      65745478 
 2275      41646472 
 2275      6573734D 
 2276              	.LASF28:
 2277 01ed 696E7453 		.ascii	"intSrc\000"
 2277      726300
 2278              	.LASF31:
 2279 01f4 55415254 		.ascii	"UART_1_ReadControlRegister\000"
 2279      5F315F52 
 2279      65616443 
 2279      6F6E7472 
 2279      6F6C5265 
 2280              	.LASF23:
 2281 020f 55415254 		.ascii	"UART_1_Stop\000"
 2281      5F315F53 
 2281      746F7000 
 2282              	.LASF17:
 2283 021b 72656733 		.ascii	"reg32\000"
 2283      3200
 2284              	.LASF29:
 2285 0221 55415254 		.ascii	"UART_1_WriteTxData\000"
 2285      5F315F57 
 2285      72697465 
 2285      54784461 
 2285      746100
 2286              	.LASF46:
 2287 0234 746D7053 		.ascii	"tmpStat\000"
 2287      74617400 
 2288              	.LASF19:
 2289 023c 73697A65 		.ascii	"sizetype\000"
 2289      74797065 
 2289      00
 2290              	.LASF26:
 2291 0245 55415254 		.ascii	"UART_1_SetTxInterruptMode\000"
 2291      5F315F53 
 2291      65745478 
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 71


 2291      496E7465 
 2291      72727570 
 2292              	.LASF54:
 2293 025f 4379496E 		.ascii	"CyIntSetPriority\000"
 2293      74536574 
 2293      5072696F 
 2293      72697479 
 2293      00
 2294              	.LASF12:
 2295 0270 666C6F61 		.ascii	"float\000"
 2295      7400
 2296              	.LASF36:
 2297 0276 55415254 		.ascii	"UART_1_PutString\000"
 2297      5F315F50 
 2297      75745374 
 2297      72696E67 
 2297      00
 2298              	.LASF16:
 2299 0287 72656738 		.ascii	"reg8\000"
 2299      00
 2300              	.LASF1:
 2301 028c 756E7369 		.ascii	"unsigned char\000"
 2301      676E6564 
 2301      20636861 
 2301      7200
 2302              	.LASF2:
 2303 029a 73686F72 		.ascii	"short int\000"
 2303      7420696E 
 2303      7400
 2304              	.LASF52:
 2305 02a4 55415254 		.ascii	"UART_1_txBufferRead\000"
 2305      5F315F74 
 2305      78427566 
 2305      66657252 
 2305      65616400 
 2306              	.LASF25:
 2307 02b8 55415254 		.ascii	"UART_1_WriteControlRegister\000"
 2307      5F315F57 
 2307      72697465 
 2307      436F6E74 
 2307      726F6C52 
 2308              	.LASF50:
 2309 02d4 55415254 		.ascii	"UART_1_initVar\000"
 2309      5F315F69 
 2309      6E697456 
 2309      617200
 2310              	.LASF40:
 2311 02e3 62797465 		.ascii	"byteCount\000"
 2311      436F756E 
 2311      7400
 2312              	.LASF53:
 2313 02ed 55415254 		.ascii	"UART_1_txBufferWrite\000"
 2313      5F315F74 
 2313      78427566 
 2313      66657257 
 2313      72697465 
 2314              	.LASF15:
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 72


 2315 0302 63686172 		.ascii	"char\000"
 2315      00
 2316              	.LASF18:
 2317 0307 63796973 		.ascii	"cyisraddress\000"
 2317      72616464 
 2317      72657373 
 2317      00
 2318              	.LASF14:
 2319 0314 63686172 		.ascii	"char8\000"
 2319      3800
 2320              	.LASF60:
 2321 031a 433A5C55 		.ascii	"C:\\Users\\satomin\\Documents\\PSoC Creator\\AI_min"
 2321      73657273 
 2321      5C736174 
 2321      6F6D696E 
 2321      5C446F63 
 2322 0348 695F3230 		.ascii	"i_2016_9_1\\AI_mini_main.cydsn\000"
 2322      31365F39 
 2322      5F315C41 
 2322      495F6D69 
 2322      6E695F6D 
 2323              	.LASF20:
 2324 0366 55415254 		.ascii	"UART_1_Init\000"
 2324      5F315F49 
 2324      6E697400 
 2325              	.LASF24:
 2326 0372 656E6162 		.ascii	"enableInterrupts\000"
 2326      6C65496E 
 2326      74657272 
 2326      75707473 
 2326      00
 2327              	.LASF56:
 2328 0383 55415254 		.ascii	"UART_1_IntClock_Start\000"
 2328      5F315F49 
 2328      6E74436C 
 2328      6F636B5F 
 2328      53746172 
 2329              	.LASF57:
 2330 0399 55415254 		.ascii	"UART_1_IntClock_Stop\000"
 2330      5F315F49 
 2330      6E74436C 
 2330      6F636B5F 
 2330      53746F70 
 2331              	.LASF51:
 2332 03ae 55415254 		.ascii	"UART_1_txBuffer\000"
 2332      5F315F74 
 2332      78427566 
 2332      66657200 
 2333              	.LASF58:
 2334 03be 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2334      4320342E 
 2334      392E3320 
 2334      32303135 
 2334      30333033 
 2335 03f1 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2335      20726576 
 2335      6973696F 
ARM GAS  C:\Users\satomin\AppData\Local\Temp\ccUx3KAP.s 			page 73


 2335      6E203232 
 2335      31323230 
 2336 0424 67202D73 		.ascii	"g -std=gnu99 -ffunction-sections -ffat-lto-objects\000"
 2336      74643D67 
 2336      6E753939 
 2336      202D6666 
 2336      756E6374 
 2337              	.LASF39:
 2338 0457 55415254 		.ascii	"UART_1_PutArray\000"
 2338      5F315F50 
 2338      75744172 
 2338      72617900 
 2339              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
